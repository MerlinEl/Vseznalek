function hexToRGB(hex:Number):Object{	var rgbObj:Object = {	red: ((hex & 0xFF0000) >> 16),	green: ((hex & 0x00FF00) >> 8),	blue: ((hex & 0x0000FF))	};	return rgbObj;}function rgbToHEX(r, g, b) {     var s = (r << 16 | g << 8 | b).toString(16);     while(s.length < 6) s="0"+s;    return "#"+s;}function rgbToHEX(r, g, b) {     var s = (r << 16 | g << 8 | b).toString(16);     while(s.length < 6) s="0"+s;    return "0x"+s;}<?xml version="1.0"?><dialog id="demo" title="ColorPicker Test" buttons="accept, cancel">    <colorchip id="color1" value="#FF6600"/>    <button id="dummy" label="Dummy" oncreate ="init()"/>    <script>     function init(){           fl.xmlui.set( "color1", "#FF6600" );       }    </script></dialog>//prehazene a nektere nefungcni#define Red 0xFF0000FF#define Grey 0xAFAFAFAA#define Green 0x33AA33AA#define Yellow 0xFFFF00AA#define White 0xFFFFFFAA#define Blue 0x0000BBAA#define Lightblue 0x33CCFFAA#define Orange 0xFF9900AA#define Lime 0x10F441AA#define Magenta 0xFF00FFFFT#define Navy 0x000080AA#define Aqua 0xF0F8FFAA=============================================================== var mc:Sprite = new Sprite();    mc.graphics.beginFill(0xFF0000);    mc.graphics.drawCircle(100, 100, 100);    mc.graphics.endFill();    addChild(mc);     // White out the entire shape first    var whiteAC:AdjustColor = new AdjustColor();    whiteAC.brightness = 100;    whiteAC.contrast = 100;    whiteAC.saturation = -100;    whiteAC.hue = 0;                var whiteMatrix:Array = whiteAC.CalculateFinalFlatArray();    var whiteCMF:ColorMatrixFilter = new ColorMatrixFilter(whiteMatrix);    // Now use ColorMatrixFilter to change color    var colorMatrix:Array = hexToMatrix(0x0000FF);    var colorCMF:ColorMatrixFilter = new ColorMatrixFilter(colorMatrix);    // Create Drop Shadow     var myDropShadow:DropShadowFilter = new DropShadow();    mc.filters = [whiteCMF, colorCMF, myDropShadow];    function hexToMatrix ( hex:uint, alpha:Number = 1 )     {        var r:Number = ((hex & 0xFF0000) >> 16);        var g:Number = ((hex & 0x00FF00) >> 8);        var b:Number = ((hex & 0x0000FF));        var matrix:Array = [];        matrix = matrix.concat([r, 0, 0, 0, 0]); // red        matrix = matrix.concat([0, g, 0, 0, 0]); // green        matrix = matrix.concat([0, 0, b, 0, 0]); // blue        matrix = matrix.concat([0, 0, 0, alpha, 0]); // alpha        return matrix;    }				=======================================			var ball:Sprite = new Sprite();ball.graphics.beginFill(0x00FF00, 1);ball.graphics.drawCircle(50, 50, 50);ball.graphics.endFill();ball.filters = [new DropShadowFilter()]; //default blackball.addEventListener(MouseEvent.CLICK, changeColor);addChild(ball);//...private function changeColor(evt:MouseEvent):void {    var ball:Sprite = evt.target as Sprite;    var ct:ColorTransform = new ColorTransform();    ct.color = 0x99CC00; // green-ish    ball.transform.colorTransform = ct;    ball.filters = [new DropShadowFilter(4, 45, 0xFFFFFF)]; //now white}