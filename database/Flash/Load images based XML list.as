package classes {	import flash.display.MovieClip;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLLoaderDataFormat;	import flash.events.Event;	import flash.geom.Rectangle;	import flash.text.TextFormat;	import flash.display.Stage;	import flash.utils.Timer; 	import flash.events.TimerEvent; 		public class Master_Photo extends MovieClip	{			public var STAGE:Stage;		private var urlLoader:URLLoader;		private var root_dir:String = "photos";		private var page_index:String = "";		private var image_id:String = "";		private var image_list_file:String=root_dir+"/names_list.xml";		private var image_data_list:Object = {};		private var tf_1:TextFormat = new TextFormat();		private var canvas_rect:Rectangle = new Rectangle(0, 0, 950, 670)		private var total_images:Number = 0;		private var current_image:Number = 0;		private var MM:Master_Image = new Master_Image();		private var slide_timer:Timer = new Timer(3000); //3 second timer				public function Master_Photo() {						tf_1.color = 0x0066CC; 			tf_1.size = 18; 			tf_1.font = "Arial"; 			tf_1.align = "center"; 			num_interval.setStyle("textFormat", tf_1);			addEventListener(Event.ADDED_TO_STAGE, init);		};		private function init(e:Event):void{			removeEventListener(Event.ADDED_TO_STAGE, init);			STAGE = stage;			clearCanvas(); //clean photo canvas						//read xml table and load wanted image from GLV.photo_name			var glv_data = GLV.photo_name.split("_"); //07_01			page_index = glv_data[0]; // page index string			image_id = glv_data[1]; // image id string			trace("GLV image page:"+page_index+" id:"+image_id)						urlLoader = new URLLoader();			urlLoader.addEventListener(Event.COMPLETE, onLoaded);			urlLoader.load(new URLRequest(image_list_file));		};		private function onLoaded(e:Event):void {					trace("load list complete.")			urlLoader.removeEventListener(Event.COMPLETE, onLoaded);			var filtered_data:Object = parseXMLToObject( XML(e.target.data) ) //parse xml in to object			image_data_list = filtered_data[page_index];			//trace("page:"+page_index+" image data list:"+image_data_list);			if (image_data_list.length == 0)  return;			total_images = image_data_list.length;			//trace("total images:"+total_images+" image id:"+image_id)			photo_counter.text = "1 / "+total_images;			//trace("label?"+image_data_list[image_id])			photo_title.text = image_data_list[image_id];			var fname:String = root_dir+"/"+page_index+"_"+image_id+".jpg";			//trace("loading image:"+fname);			MM.loadImage(photo_canvas, fname, canvas_rect);		};		private function parseXMLToObject(xml:XML):Object{  						var obj_list:Object = {};			for each (var key in xml.children()) {							var page = String(key.name()).split("_").pop();				var image_list:Object = {};				image_list["length"] = 0;								for each (var subkey in key.children()){										var id = String(subkey.name()).split("_").pop();					var label = subkey.@label;					//trace("XML page:"+page+" id:"+id+" label:"+label);					image_list[id] = label;					image_list["length"] += 1;				}				obj_list[page] = image_list;			}			return obj_list;		}		private function clearCanvas():void{					//trace("num children:"+photo_canvas.numChildren);			while (photo_canvas.numChildren > 0) photo_canvas.removeChildAt(0);		};		private function onTick(e:TimerEvent):void { 						var next_id = GLF.numToString(Number (image_id)+1);			if (image_data_list[next_id] == null) { //end reached							slide_timer.removeEventListener(TimerEvent.TIMER, onTick); 				slide_timer.stop();				btn_auto.gotoAndStop(1); btn_auto.switch_on = false;						} else nextImage();			//trace("auto slide state: " + e.target.currentCount); 		} 		public function nextImage():void {						var next_id = GLF.numToString(Number (image_id)+1);			if (image_data_list[next_id] == null) return; //end reached			clearCanvas();			//trace("NEXT IMAGE:"+image_data_list[next_id]);			image_id = next_id;			photo_counter.text = Number(image_id)+" / "+total_images;			photo_title.text = image_data_list[image_id];			var fname:String = root_dir+"/"+page_index+"_"+image_id+".jpg";			MM.loadImage(photo_canvas, fname, canvas_rect);		};		public function prevImage():void {						var prev_id = GLF.numToString(Number (image_id)-1);			if (Number(prev_id) <= 0) return; //begin reached			clearCanvas();			//trace("PREV IMAGE:"+image_data_list[prev_id]);			image_id = prev_id;			photo_counter.text = Number(image_id)+" / "+total_images;			photo_title.text = image_data_list[image_id];			var fname:String = root_dir+"/"+page_index+"_"+image_id+".jpg";			MM.loadImage(photo_canvas, fname, canvas_rect);		};		public function autoSlide(switch_on:Boolean):void {					stage.focus = stage;			if (!switch_on){							slide_timer.removeEventListener(TimerEvent.TIMER, onTick); 				slide_timer.stop();				//trace("AUTO SLIDE STOP");				return;			}			slide_timer.delay = num_interval.value*1000;			slide_timer.addEventListener(TimerEvent.TIMER, onTick); 			slide_timer.start()			//trace("AUTO SLIDE START");		};		public function exitPlayer():void {				trace("EXIT APP");			var loader = parent.parent.parent;			if (loader != null) loader.unloadSWF();		};	}; //class}; //packagepackage classes {	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.events.IOErrorEvent;	import flash.events.HTTPStatusEvent;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.display.Bitmap;	import flash.geom.Matrix;	import flash.display.BitmapData;	import flash.display.MovieClip;	import flash.geom.Rectangle;	import com.greensock.TweenLite;		public class Master_Image {		private var loader:Loader =new Loader();		private var mc_canvas:MovieClip;		private var counter:uint = 0;		private var fit_rect:Rectangle;			public function Master_Image() {					trace("Initialize Master Image class...");		};		public function loadImage(canvas:MovieClip, fname:String, canvas_rect:Rectangle):void{			trace("Calling Master Image class... ");			trace("loading image:["+fname+"] in to:"+canvas.name);			mc_canvas = canvas;			fit_rect = canvas_rect;			var urlRequest:URLRequest = new URLRequest(fname);			loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress, false, 0 ,true);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderOnComplete, false, 0 ,true);			loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onError);			loader.contentLoaderInfo.addEventListener(HTTPStatusEvent.HTTP_STATUS, onStatus);			loader.load(urlRequest);		}		private function onProgress(event:ProgressEvent):void{			//var percent:Number = event.bytesLoaded/event.bytesTotal *100;			//trace( "Loading: " + (Math.ceil(percent)).toString() + " % ");		}		private function loaderOnComplete(event:Event):void{					trace("load image complete.")			loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, onProgress);			loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, loaderOnComplete);			var bitmap:Bitmap = Bitmap(event.target.content);			 //if image is bigger or smaller resize it to fit canvas			if ( bitmap.width > fit_rect.width || bitmap.height > fit_rect.height ||  bitmap.width < fit_rect.width && bitmap.height < fit_rect.height ){								fitBitmapProportionaly(bitmap, fit_rect.width, fit_rect.height)			}			bitmap.x -= bitmap.width/2;   //center x			bitmap.y -= bitmap.height/2; //center y						mc_canvas.alpha = 0;			mc_canvas.addChild(bitmap);			TweenLite.to(mc_canvas, 1.5, { alpha:1} ); //fade in			loader.unload();		};		private function onStatus(e:HTTPStatusEvent):void{			trace(e.status);		};		private function onError(e:IOErrorEvent):void{			trace( e.text);		};		private function bitmapScale(bmp:Bitmap, pos_x:Number, pos_y:Number, w:Number, h:Number):Bitmap{			var mat:Matrix = new Matrix();			mat.scale(w/bmp.width, h/bmp.height); //rescale			mat.translate( pos_x , pos_y ); //move image			var draw_bd:BitmapData = new BitmapData(w, h, true, 0x00000000);			draw_bd.draw(bmp, mat, null, null, null, true);			return new Bitmap (draw_bd);		};		private function fitBitmapProportionaly( bmp:Bitmap, max_w, max_h ) : void{					trace("Resizing Proportionaly...")			var ratio = bmp.height/bmp.width;//calculation ratio			if (bmp.width>max_w) { //scale down				bmp.width = max_w;				bmp.height = Math.round(bmp.width*ratio);			}			if (bmp.height>max_h) {//scale down				bmp.height = max_h;				bmp.width = Math.round(bmp.height/ratio);			}			if (bmp.height<max_h && bmp.width<max_w) {//scale up							if (bmp.width > bmp.height){									bmp.width = max_w;					bmp.height = Math.round(bmp.width*ratio);									} else {									bmp.height = max_h;					bmp.width = Math.round(bmp.height/ratio);				}			}		};	}//class}//package<PHOTOS>	<info label="max_res" w="2048" h="1534" dpi="155"/>	<page_07>		<img_01 label="delfín"/>		<img_02 label="hvězdice"/>		<img_03 label="korálové rybky v korálech"/>		<img_04 label="medúzy"/>		<img_05 label="moře"/>		<img_06 label="velryba"/>		<img_07 label="žralok"/>	</page_07>		<page_18>		<img_01 label="ježek na podzim v listí"/>		<img_02 label="podzim"/>		<img_03 label="sklizeň brambor"/>		<img_04 label="sklizeň hroznů"/>		<img_05 label="sklizeň řepy"/>	</page_18>		<page_21>		<img_01 label="kopřiva"/>	</page_21>			<page_29>		<img_01 label="křeček polní"/>	</page_29>			<page_31>		<img_01 label="kladivo"/>		<img_02 label="kleště"/>		<img_03 label="pilka"/>		<img_04 label="pilník"/>		<img_05 label="šroubovák"/>	</page_31>		<page_32>		<img_01 label="house"/>		<img_02 label="hříbě"/>		<img_03 label="jehně"/>		<img_04 label="kachně"/>		<img_05 label="kuře"/>		<img_06 label="kůzle rohaté"/>		<img_07 label="mimínko"/>		<img_08 label="štěně"/>		<img_09 label="tele"/>	</page_32>		<page_39>		<img_01 label="vánoce"/>	</page_39>			<page_46>		<img_01 label="pavouk křižák"/>		<img_02 label="krtek obecný"/>	</page_46>		<page_57>		<img_01 label="klokan"/>	</page_57>			<page_61>		<img_01 label="čápi na hnízdě"/>		<img_02 label="děti na koloběžce"/>		<img_03 label="jaro"/>		<img_04 label="práce na zahradě"/>		<img_05 label="sněženky"/>		<img_06 label="vrba jiva"/>	</page_61>		<page_70>		<img_01 label="hnízdo s vajíčky"/>		<img_02 label="ptáčata v hnízdě"/>		<img_03 label="pták krmí mláďata"/>	</page_70>		<page_73>		<img_01 label="gorila"/>		<img_02 label="hroch"/>		<img_03 label="lev a lvice"/>		<img_04 label="nosorožec"/>		<img_05 label="slon"/>		<img_06 label="šimpanz"/>		<img_07 label="tygr"/>		<img_08 label="žirafa"/>	</page_73>		<page_80>		<img_01 label="jezek"/>		<img_02 label="křeček polní"/>	</page_80>		<page_87>		<img_01 label="Karlštejn"/>		<img_02 label="Krkonoše"/>		<img_03 label="mosty v praze"/>		<img_04 label="Olomouc"/>		<img_05 label="Pražský hrad"/>		<img_06 label="Říp"/>		<img_07 label="Telč"/>	</page_87>		<page_93>		<img_01 label="řepa krmná"/>	</page_93>	</PHOTOS>