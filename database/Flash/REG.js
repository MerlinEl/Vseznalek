//http://www.robvanderwoude.com/batexamples.php//http://help.adobe.com/en_US/as3/dev/WSb2ba3b1aad8a27b060d22f991220f00ad8a-8000.htmlpackage  {		import flash.desktop.NativeProcess; 	import flash.desktop.NativeProcessStartupInfo;    import flash.filesystem.File;	import flash.filesystem.FileMode;    import flash.filesystem.FileStream;	import flash.display.MovieClip;	import flash.events.MouseEvent;		public class main3 extends MovieClip{				//Paths		private var mydoc_dir = File.documentsDirectory.nativePath; //C:\Users\[current user]\Documents...		private var reg_file:File = File.desktopDirectory.resolvePath(mydoc_dir+"\\add_key.cmd");		private var regApp:File = new File("C:\\Windows\\regedit.exe");		private var cmdApp:File = new File("C:\\Windows\\System32\\cmd.exe");		private var notepadApp:File = new File("C:/Windows/notepad.exe");		private var not_supported:String = "\nNative process is not supported."		private var cmdFile:File = new File;				// NativeProcess		public function main3() {						btn_add.buttonMode = true;			btn_add.mouseChildren = false;			btn_add.addEventListener (MouseEvent.MOUSE_DOWN, down);						console.text = "\nStart.\n"		};		private function down (e:MouseEvent){addEventListener (MouseEvent.MOUSE_UP, up)};		private function up (e:MouseEvent) {					removeEventListener (MouseEvent.MOUSE_UP, up);			var args:Vector.<String> = new Vector.<String>();			/*args.push("reg");			args.push("add");			args.push("HKCU\Software\Test");			args.push("/v");			args.push("TestVal");*/			//args.push('reg add "HKCU\\Software\\Test" /v TestVal /d "oki"');			//launchApp(cmdApp , args);						regAddKey('reg add HKCU\\Software\\Test /v date /d 28.05/1973')			//regAddKey('reg add HKCU\Software\Test /v Testdata /t REG_BINARY /d ffffff')						//regWrite('reg add "HKCU\\Software\\Test" /v TestVal /d "oki"')						//working 			/*				cmdOpenExplorerAt('explorer c:\\temp');								regRun();				openExplorerAt("c:\\temp")								var args:Vector.<String> = new <String>["C:/Temp/a.txt"];				launchApp(notepadApp, args);			*/		};		private function regAddKey(path:String):void {					if(!NativeProcess.isSupported){console.appendText(not_supported); return};			var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			var args:Vector.<String> = new <String>[path];			processInfo.arguments = args;			console.appendText("\nargs:"+processInfo.arguments);			processInfo.executable = new File("C:\\Windows\\System32\\cmd.exe");			var process:NativeProcess = new NativeProcess();			process.start(processInfo);			process.standardInput.writeUTFBytes(args + "\n");						console.appendText("\nFinished.");		};		private function regWrite(cmd:String):void {						if(!NativeProcess.isSupported){console.appendText(not_supported); return};						cmdFile = File.documentsDirectory.resolvePath("tmp_file.bat");			var cmdFileStream:FileStream = new FileStream;			cmdFileStream.open(cmdFile, FileMode.WRITE);			cmdFileStream.writeUTFBytes(cmd);			cmdFileStream.close();						var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			processInfo.executable = cmdFile;			var process:NativeProcess = new NativeProcess();			console.appendText("\nStarting app...");			process.start(processInfo);          			console.appendText("\nFinished.");		};				//working		private function cmdOpenExplorerAt(cmd:String):void {					if(!NativeProcess.isSupported){console.appendText(not_supported); return};			var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			var args:Vector.<String> = new <String>[cmd];			processInfo.arguments = args;			console.appendText("\nargs:"+processInfo.arguments);			processInfo.executable = new File("C:\\Windows\\System32\\cmd.exe");;			var process:NativeProcess = new NativeProcess();			console.appendText("\nStarting app...");			process.start(processInfo);    			process.standardInput.writeUTFBytes(args + "\n");						console.appendText("\nFinished.");		};		private function openExplorerAt(path:String):void {					if(!NativeProcess.isSupported){console.appendText(not_supported); return};			var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			var args:Vector.<String> = new <String>[path];			processInfo.arguments = args;			console.appendText("\nargs:"+processInfo.arguments);			processInfo.executable = new File("C:\\Windows\\Explorer.exe");			var process:NativeProcess = new NativeProcess();			process.start(processInfo);		};		private function regRun():void {						if(!NativeProcess.isSupported){console.appendText(not_supported); return};			console.appendText("file exist? "+reg_file.exists);			var info:NativeProcessStartupInfo = new NativeProcessStartupInfo();            info.executable = reg_file;            var process:NativeProcess = new NativeProcess();            console.appendText("\nStarting app...");			process.start(info);			console.appendText("\nFinished.");		};		private function launchApp(file:File, args:Vector.<String>):void {						if(!NativeProcess.isSupported){console.appendText(not_supported); return};						var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			processInfo.executable = file;			processInfo.arguments = args;			console.appendText("\nargs:"+processInfo.arguments);			var process:NativeProcess = new NativeProcess();			console.appendText("\nStarting app...");			process.start(processInfo);          			console.appendText("\nFinished.");		};	}//cls}//pkg/*protected var npsi:NativeProcessStartupInfo;protected var nativeProcess:NativeProcess;protected var file:File = new File("c:\\windows\\system32\\cmd.exe");protected var args:Vector.<String> = new Vector.<String>;protected function init():void{		args.push('ping') 	args.push('www.adobe.com')	npsi = new NativeProcessStartupInfo();	npsi.arguments = args;	npsi.executable = file;		nativeProcess = new NativeProcess();	nativeProcess.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA,onStandardOutputData);	nativeProcess.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onError);	nativeProcess.start(npsi);}private function onError(event:ProgressEvent):void {		var process:NativeProcess = event.target as NativeProcess;	var data:String = process.standardError.readUTFBytes(process.standardError.bytesAvailable);	lbl.text += data;                    	}private function onStandardOutputData(event:ProgressEvent):void{	var process:NativeProcess = event.target as NativeProcess;	var data:String = process.standardOutput.readUTFBytes(process.standardOutput.bytesAvailable);	lbl.text += data} *//*		private function regAddKey(file:File):void {					if(!NativeProcess.isSupported){console.appendText(not_supported); return};			var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			var args:Vector.<String> = new <String>[fpath];			processInfo.arguments = args;			console.appendText("\nargs:"+processInfo.arguments);			processInfo.executable = new File("C:\\Windows\\regedit.exe");			var process:NativeProcess = new NativeProcess();			process.start(processInfo);		};		private function regWrite(cmd:String):void {						if(!NativeProcess.isSupported){console.appendText(not_supported); return};						cmdFile = File.documentsDirectory.resolvePath("tmp_file.bat");			var cmdFileStream:FileStream = new FileStream;			cmdFileStream.open(cmdFile, FileMode.WRITE);			cmdFileStream.writeUTFBytes(cmd);			cmdFileStream.close();						var processInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();			processInfo.executable = cmdFile;			var process:NativeProcess = new NativeProcess();			console.appendText("\nStarting app...");			process.start(processInfo);          			console.appendText("\nFinished.");		};*/public function openPdf(pathToPdf:String):void }     var nativeProcessStartupInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();     var file:File = File.applicationDirectory.resolvePath("C:\\Windows\\System32\\cmd.exe");     nativeProcessStartupInfo.executable = file;     if (Capabilities.os.toLowerCase().indexOf("win") > -1)     {         nativeProcessStartupInfo.workingDirectory = File.applicationDirectory.resolvePath(pathToPdf).parent;         var processArgs:Vector.<String> = new Vector.<String>();         processArgs[0] = "/k";         processArgs[1] = "start";         processArgs[2] = "test.pdf";         nativeProcessStartupInfo.arguments = processArgs;         process = new NativeProcess();         process.start(nativeProcessStartupInfo);         process.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA, onOutputData); }var Xargs:Array = String("/C#echo#a trully hacky way to do this :)#>#C:\\Users\\Benjo\\AppData\\Roaming\\com.eblagajna.eBlagajna.POS\\Local Store\\a.a").split("#");var args:Vector.<String> = new Vector.<String>();for (var i:int=0; i<Xargs.length; i++) {    trace("Pushing: "+Xargs[i]);    args.push(Xargs[i]);  };NPI.arguments = args;