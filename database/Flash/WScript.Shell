The below works for me based on a url of the form "my.app.scheme://arg1&arg2"...preinitialize="application_preinitializeHandler(event)"...protected function application_preinitializeHandler(event:FlexEvent):void{       NativeApplication.nativeApplication.addEventListener(InvokeEvent.INVOKE, onInvoke);}private function onInvoke(event:InvokeEvent):void{  if(event.arguments[0]!=null) {    arg = event.arguments[0];    arg = arg.substr(arg.indexOf("//") + 2);  }}set WshShell = WScript.CreateObject("WScript.Shell")WScript.Sleep(100)set filesys = CreateObject("Scripting.FileSystemObject")WshShell.Run "%windir%/System32/SoundRecorder.exe"WScript.Sleep(100)WshShell.AppActivate "Sound Recorder"WScript.Sleep(100)WshShell.SendKeys "abc"WshShell.SendKeys "%s"WScript.Sleep(100)If filesys.FileExists("C:/Program Files (x86)/NCH Software/Debut/debut.exe") Then WshShell.Run("""C:/Program Files (x86)/NCH Software/Debut/debut.exe""")ElseIf filesys.FileExists("C:/Program Files/NCH Software/Debut/debut.exe") Then WshShell.Run("""C:/Program Files/NCH Software/Debut/debut.exe""")End Ifset WshShell = WScript.CreateObject("WScript.Shell")WshShell.Run ("""Updater.app\Updater.exe""")//CreateObject("Wscript.Shell").Run "E:\Work\Nová Škola\Local Updater\Updater.app\Updater.exe"Option ExplicitDim objFSO, objFolder, objShell, strDirectory, strFile, sourcelocation, targetlocationstrDirectory = "E:\Aprog"strFile = strDirectory & "\View32.exe" ' Create the File System ObjectSet objFSO = CreateObject("Scripting.FileSystemObject")Set objShell = CreateObject("Wscript.Shell") ' Note If..Exists. Then, Else ... End If constructionIf objFSO.FileExists(strFile) Then    wscript.echo "File Exists" 	objShell.Run strFileElse 	wscript.echo "File Does Not Exist" End IfWScript.Quit' strDirectory = "E:\Work\Nová Škola\Local Updater\Updater.app"' strFile = strDirectory & "\Updater.exe"' CreateObject("Wscript.Shell").Run "cmd.exe E:\Work\Nová Škola\Local Updater\Updater.app\Updater.exe"' Set oShell = WScript.CreateObject("WSCript.shell")' oShell.run "cmd cd /d C:dir_test\file_test & sanity_check_env.bat arg1"//updater.vbsCreateObject("Wscript.Shell").Run "Updater.app\Updater.exe"// varWSHShell = CreateObject("WScript.Shell") *!* Create Registry KeysWSHShell.Popup( "Create key HKCU\MyRegKey with value 'Top level key'")WSHShell.RegWrite( "HKCU\MyRegKey\", "Top level key") WSHShell.Popup( "Create key HKCU\MyRegKey\Entry with value 'Second level key'")WSHShell.RegWrite( "HKCU\MyRegKey\Entry\", "Second level key") WSHShell.Popup( "Set value HKCU\MyRegKey\Value to REG_SZ 1")WSHShell.RegWrite ("HKCU\MyRegKey\Value", 1) WSHShell.Popup( "Set value HKCU\MyRegKey\Entry to REG_DWORD 2")WSHShell.RegWrite( "HKCU\MyRegKey\Entry", 2, "REG_DWORD") WSHShell.Popup( "Set value HKCU\MyRegKey\Entry\Value1 to REG_BINARY 3")WSHShell.RegWrite( "HKCU\MyRegKey\Entry\Value1", 3, "REG_BINARY")  *!* Read Registry KeyslcValue1 = WSHShell.RegRead("HKCU\MyRegKey\")WSHShell.Popup("Value of HKCU\MyRegKey: " + lcValue1) lcValue2 = WSHShell.RegRead("HKCU\MyRegKey\Entry\")WSHShell.Popup("Value of HKCU\MyRegKey\Entry\: " + lcValue2) lcValue3 = WSHShell.RegRead("HKCU\MyRegKey\Value")WSHShell.Popup("Value of HKCU\MyRegKey\Value: " + lcValue3) lnValue1 = WSHShell.RegRead("HKCU\MyRegKey\Entry")WSHShell.Popup("Value of HKCU\MyRegKey\Entry: " + ALLTRIM(STR(lnValue1))) lnValue3 = WSHShell.RegRead("HKCU\MyRegKey\Entry\Value1")WSHShell.Popup("Value of HKCU\MyRegKey\Entry\Value1: " + ALLTRIM(STR(lnValue3(1))))  *!* Delete Registry KeysWSHShell.Popup( "Delete value HKCU\MyRegKey\Entry\Value1")WSHShell.RegDelete( "HKCU\MyRegKey\Entry\Value1") WSHShell.Popup ("Delete key HKCU\MyRegKey\Entry")WSHShell.RegDelete( "HKCU\MyRegKey\Entry\")  WSHShell.Popup ("Delete key HKCU\MyRegKey")WSHShell.RegDelete( "HKCU\MyRegKey\") 