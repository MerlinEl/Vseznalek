import fl.transitions.*;import fl.transitions.easing.*;flicker_01.neco.addEventListener(MouseEvent.MOUSE_UP, redUp);flicker_01.neco.buttonMode = true;/* function to transition from one colorTransform to another  */function interpolateColor(start:ColorTransform, end:ColorTransform, t:Number):ColorTransform {	var result:ColorTransform = new ColorTransform();	result.redMultiplier = start.redMultiplier + (end.redMultiplier - start.redMultiplier)*t;	result.greenMultiplier = start.greenMultiplier + (end.greenMultiplier - start.greenMultiplier)*t;	result.blueMultiplier = start.blueMultiplier + (end.blueMultiplier - start.blueMultiplier)*t;	result.alphaMultiplier = start.alphaMultiplier + (end.alphaMultiplier - start.alphaMultiplier)*t;	result.redOffset = start.redOffset + (end.redOffset - start.redOffset)*t;	result.greenOffset = start.greenOffset + (end.greenOffset - start.greenOffset)*t;	result.blueOffset = start.blueOffset + (end.blueOffset - start.blueOffset)*t;	result.alphaOffset = start.alphaOffset + (end.alphaOffset - start.alphaOffset)*t;	return result;}// start and end colors for tweenvar startColor:ColorTransform = new ColorTransform(); // default color, no tintvar endColor:ColorTransform = new ColorTransform();endColor.color = 0xFF0000; // end color of red// create tween; use "" for property since no// property is being tweened; just using the// Tween class here to handle the animation// using the values 0 and 1 (0% to 100%)// over a time period of 90 framesvar tween:Tween;// listen for the TweenEvent.MOTION_CHANGE event to // perform the custom color tweenfunction redUp(e:MouseEvent):void{	tween = new Tween(flicker_01.neco, "", Strong.easeOut, 0, 1, 90);	tween.removeEventListener(TweenEvent.MOTION_CHANGE, tweenTransform);	tween.addEventListener(TweenEvent.MOTION_CHANGE, tweenTransform);};// TweenEvent.MOTION_CHANGE handler using interpolateColor// to set the colorTransform of flicker_01 (tween.obj) based on// the startColor and endColor properties defined earlierfunction tweenTransform(event:TweenEvent):void {	// use tween position for interpolation of	// start and end colors (value 0 - 1)	flicker_01.neco.transform.colorTransform = interpolateColor(startColor, endColor, tween.position);}