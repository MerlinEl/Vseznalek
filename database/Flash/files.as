	//Files and directories in AIRCopying and moving files can be done using these functions: copyTo(), copyToAsync(), moveTo() and moveToAsync(). They are the same both for files and directories.	import flash.net.FileReference;	import flash.utils.ByteArray;	import flash.filesystem.File;	import flash.filesystem.FileStream;	import flash.filesystem.FileMode;	import flash.fileSystem.*;				var app_root_dir= File.applicationDirectory.nativePath;				var reg_file = File.desktopDirectory.resolvePath(app_root_dir+"\\documents\\test.xml");				var writeStream:FileStream = new FileStream();				/*				 * FileMode.WRITE will truncate (empty) the file on open.				 * FileMode.APPEND will open the file "as is" and write in the end of it.				 */				writeStream.open(reg_file, FileMode.WRITE);				writeStream.writeBytes(textBox.htmlText); // Any other write method can be used				writeStream.close();//Check if file exist//////////////////////////import flash.events.HTTPStatusEvent;import flash.events.IOErrorEvent;import flash.net.URLLoader;import flash.net.URLRequest;var loader:URLLoader = new URLLoader();loader.addEventListener(IOErrorEvent.IO_ERROR, onError);loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, onStatus);loader.load(new URLRequest("e:/Work/Nová Škola/Slabikář 2013/Interaktivní/CD/lessons/Kocourek.swf"));private function onStatus(e:HTTPStatusEvent):void{    trace("status:" + e.status);}private function onError(e:IOErrorEvent):void{    trace("error:" + e.text);}/////////////////////////////////////////////////////remove last dir from pathapp_root_dir = app_root_dir.substring(0, app_root_dir.lastIndexOf('\\') +1);FLfile.runCommandLine("explorer " + normal_path);file.copyTo(file_tmp, true); //duplicate file;setTimeout(loader.close(), 1);var temp:File = File.createTempFile();//Wed Dec 18 10:18:45 GMT+0100 2013var d = new Date();import flash.filesystem.File;var txt:String = "\n";txt +="First Run Date: "+d+"\n";txt +="Current Date: "+d+"\n";txt +="User Name: "+File.userDirectory.name+"\n";txt +="User Dir: "+File.userDirectory.nativePath+"\n";txt +="Doc Dir: "+File.documentsDirectory.nativePath+"\n";txt +="Desktop Dir: "+File.desktopDirectory.nativePath+"\n";txt +="App Storage Dir: "+File.applicationStorageDirectory.nativePath+"\n";txt +="App Root Dir: "+File.applicationDirectory.nativePath+"\n";console.text = txt; function convertUriPath(path) {	if (path != null && path.indexOf("file://") == 0)	return FLfile.uriToPlatformPath(path);	return path;}				function openFolder(){	var folderURI = fl.configURI + "Commands/";	if (!FLfile.exists(folderURI)) return;	var normal_path = FLfile.uriToPlatformPath(folderURI)	fl.trace("URI: "+normal_path);	fl.trace("URI: "+encodeURI(folderURI))	fl.trace("URI: "+decodeURI(folderURI))	FLfile.runCommandLine("Start "+normal_path);};var dir = fl.browseForFolderURL("select fla folder");//open a foldervar files = FLfile.listFolder(dir,"files");//get the files (note: NOT recursive!)var filesNum = files.length;fl.outputPanel.clear();for(var i = 0 ; i < filesNum; i++){    if(files[i].substr(files[i].lastIndexOf(".")+1) == 'fla'){//look for fla's        var doc = fl.openDocument(dir+'/'+files[i]);        //do whatever to your document here        doc.selectAll();        doc.group();        doc.align('top', true);        doc.align('left', true);        doc.unGroup();        doc.selectNone();        fl.saveDocument(doc);        fl.closeDocument(doc,false);        fl.trace(files[i]+' done');    }}fl.trace('all done!');var fileLocation =  fl.configURI + "Commands/Commands Editor.jsfl";   //app.openDocument(fileLocation)  // app.openScript(fileLocation)// the xmlPanel method opens the dialogvar folderURI = resolvePath(fl.configDirectory+"Commands");	function resolvePath(dir){		var split = dir.split(":")[1];		new_path = split.replace(/\\/g, '/');		new_path ="file:///c|"+new_path;		return new_path;	};/*import fl.*;import fl.events.*;import flash.net.FileReference;import flash.net.navigateToURL;import flash.accessibility.Accessibility;import flash.system.System;import flash.external.ExternalInterface;import fl.ImportFlashClasses;*///import flash.system.System;//import flash.filesystem.File;//trace("begin")//trace("My local configuration directory is " + File.desktopDirectory.nativePath);/*// store directory to a variable  var configDir = fl.configDirectory; // display directory in the Output panel fl.trace(fl.configDirectory);*/// To run a command in your commands menu, change "Test.Jsfl" // to the command you want to run in the line below. //fl.runScript( fl.configURI + "Commands/Test.jsfl" ); //var fileLocation = "C:/Temp/a.txt"//var file:File = new File(fileLocation);//trace("My file:", file.nativePath, "exists?", file.exists)//file.openWithDefaultApplication()//File.desktopDirectory.resolvePath(fileLocation)//file.openWithDefaultApplication();import flash.filesystem.File;/*var prefsFile:File = File.applicationStorageDirectory;prefsFile = prefsFile.resolvePath("preferences.xml");var desktop:File = File.desktopDirectory;var files:Array = desktop.getDirectoryListing();for (var i:uint = 0; i < files.length; i++) {    trace(files[i].nativePath);}*/var user_path = File.userDirectory.nativePathvar cmd_path = user_path + "/AppData/Local/Adobe/Flash CS5.5/en_US/Configuration/Commands/";var f = "C:\Users\Orien\AppData\Local\Adobe\Flash CS5.5\en_US\Configuration\Commands\fit_epage.jsfl"trace(cmd_path)var desktop:File = new File (cmd_path);var files:Array = desktop.getDirectoryListing();for (var i:uint = 0; i < files.length; i++) {    trace(files[i].nativePath);}//app.openDocument(files[0])var myTextLoader:URLLoader = new URLLoader();myTextLoader.addEventListener(Event.COMPLETE, onLoaded);function onLoaded(e:Event):void {trace(e.target.data);}myTextLoader.load(new URLRequest("C:/Temp/a.txt"));