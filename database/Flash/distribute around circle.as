//Clone Around Center//selected object must be on canvas//define center: make a mowieclip with name centerobjfl.outputPanel.clear(); //clear consolevar doc = fl.getDocumentDOM();var sel  = doc.selection;if (doc != null && sel.length == 2) cloneAroundCenter();function cloneAroundCenter(){		var obj_source = sel[0];	var obj_center = sel[1];	if (obj_center.name != "centerobj"){ //swap				obj_source = sel[1];		obj_center = sel[0];	}	doc.selectNone();	obj_source.selected = true;	//fl.trace("obj_source:"+obj_source.name+" obj_center:"+obj_center.name)	var center = {"x":obj_center.x, "y":obj_center.y};    var count_str = prompt("Napiš počet kopii:", "8");    if (count_str == null) {        alert("Cancelled by user");        return false;    }	var count = parseInt(count_str);	var dist = objDistance(obj_source, obj_center);	if (!count) return;	cloneAroundPoint(obj_source, center, count, dist);}function cloneAroundPoint(p, center, count, dist){		for(var i = 0; i < count; i++){				var new_obj = doc.selection[0];			// Point has a useful static function for this, it takes two parameters		// First, length, in other words how far from the center we want to be		// Second, it wants the angle in radians, a complete circle is 2 * Math.PI		// So, we're multiplying that with (i / 8) to place them equally far apart		var pos = pointPolar(dist, (i / count) * Math.PI * 2);		// Finally, set the position of the ball		new_obj.x = center.x + pos.x;		new_obj.y = center.y + pos.y;				doc.clipCopy(); doc.clipPaste(true); //copy paste and select	}	fl.trace("Instances created:"+count);}function pointPolar(len, angle){		return {"x":len * Math.sin(angle), "y":len * Math.cos(angle)};}function objDistance(obj1, obj2) {	var deltaX = obj1.x - obj2.x;	var deltaY = obj1.y - obj2.y;	return Math.sqrt(deltaX * deltaX + deltaY * deltaY);}//distribute objects around circle http://en.nicoptere.net/?p=745//getCount(center, obj_source);/*function getCount(center, clip):uint{         var angle = getAngle( center, new Point ( clip.x, clip.y ) );         var rect = clip.getBounds( clip );    rect.x += clip.x;    rect.y += clip.y;         var tl = new Point( rect.x, rect.y );    var tr = new Point( rect.x + rect.width, rect.y );    var br = new Point( rect.x + rect.width, rect.y + rect.height );    var bl = new Point( rect.x, rect.y + rect.height );         var corners = [ tl, tr, br, bl ];         var min = Number.POSITIVE_INFINITY;    var max = Number.NEGATIVE_INFINITY;    for each( var p:Point in corners )    {        angle = getAngle( center, p );        if ( angle < = min ) min = angle;        if ( angle >= max ) max = angle;    }         return uint( Math.PI * 2 / ( max - min ) );     }function getAngle( p0, p1 ):Number{    return Math.atan2( p1.y - p0.y, p1.x - p0.x );}*/