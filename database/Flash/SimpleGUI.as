        protected function initGUI() : void        {            this._gui = new SimpleGUI(this, "Example GUI", "C");            this._gui.addGroup("General Settings");            this._gui.addColour("backgroundColour");            this._gui.addButton("Randomise Circle Position", {callback:this.positionCircle, width:160});            this._gui.addSaveButton();            this._gui.addColumn("Noise Options");            this._gui.addSlider("noiseBase.x", 10, 200);            this._gui.addSlider("noiseBase.y", 10, 200);            this._gui.addSlider("noiseSeed", 1, 1000);            this._gui.addSlider("noiseOctaves", 1, 4);            this._gui.addSlider("turbulence.x", -10, 10);            this._gui.addSlider("turbulence.y", -10, 10);            this._gui.addGroup("Wave Options");            this._gui.addStepper("waveCount", 1, 20);            this._gui.addStepper("waveSteps", 2, MAX_WAVE_STEPS);            this._gui.addSlider("amplitude", 0, 200);            this._gui.addColour("waveColour");            this._gui.addColumn("Circle Options");            this._gui.addRange("minCircleSize", "maxCircleSize", 10, 120, {label:"Circle Size Range"});            this._gui.addSlider("rotationSpeed", -10, 10);            this._gui.addComboBox("circle.blendMode", [{label:"Normal", data:BlendMode.NORMAL}, {label:"Darken", data:BlendMode.DARKEN}, {label:"Overlay", data:BlendMode.OVERLAY}, {label:"Difference", data:BlendMode.DIFFERENCE}]);            this._gui.addFileChooser("Circle Texture", this.textureFileRef, this.textureLoaded, [new FileFilter("Image Files", "*.jpg;*.jpeg;*.png")]);            this._gui.addToggle("animateCircle");            this._gui.addColumn("Instructions:");            this._gui.addLabel("Press \'C\' to toggle GUI");            this._gui.addLabel("Press \'S\' to copy setup code to clipboard");            this._gui.show();            return;        }// end functiontreeCountLabel = gui.addControl(Label, {text: "trees: 0"}) as Label;_gui.addSlider("myNumber", 0, 100, {label:"My Number", width:200, callback:onNumberChanged});_gui.addColour("matColor", {callback: colorizeModel}) as ColorChooser;private function colorizeModel():void {	ColorMaterial(Mesh(_body.getChildAt(0)).material).color = matColor;}//OR_colourChosser = new ColorChooser(this, 345, 130, matColor, onColor);_colourChosser.usePopup = true;_colourChosser.popupAlign = ColorChooser.TOP;this.addChild(_colourChosser);private function onColor(event:Event):void {		ColorMaterial(Mesh(_body.getChildAt(0)).material).color = _colourChosser.value;}