https://www.html5rocks.com/en/tutorials/dnd/basics/	this.laby_mc.addEventListener("tick", hitCheck.bind(this));function hitCheck(evt) {	var p = evt.currentTarget.globalToLocal(stage.mouseX, stage.mouseY);	if (evt.currentTarget.hitTest(p.x, p.y)  && stage.mouseInBounds) {		evt.currentTarget.alpha = 0.3;	} else {		evt.currentTarget.alpha = 1;	}}		this.stage.enableMouseOver(50);createjs.Touch.enable(stage);this.addEventListener("tick", fl_hittest.bind(this));function fl_hittest() {	this.holder.rotation += 3;	var l = this.holder.getNumChildren();	for (var i = 0; i < l; i++) {		var child = this.holder.getChildAt(i);		child.alpha = 0.3;		var pt = child.globalToLocal(stage.mouseX, stage.mouseY);		if (stage.mouseInBounds && child.hitTest(pt.x, pt.y)) {			child.alpha = 1;		}	}}function onPressMove(event) {    // There is more code here, but for effects     // of this question, it's irrelevant    /* In layer terms, drag must be over the drop  */     root.parent.setChildIndex(event.currentTarget, root.parent.numChildren-1);    /* Drag takes the actual position of the mouse pointer  */     var point = stage.globalToLocal(event.stageX, event.stageY);     event.currentTarget.x = point.x;    event.currentTarget.y = point.y; }function detectDrop(event){    /* Initial variables */    var dropLocation;       //  Drop Location    var point, pointGTL;    //  Points for the collision comparison    var dropFound = false;  //  Drop is found? By default, no.     /* Drop is cloned */    dropLocation = drop.clone();    /* Position of the stage is converted to local        using the mouse pointer position */      point = stage.globalToLocal(event.stageX, event.stageY);    /* Then, the position of the drop is converted to local        using the point defined before */     pointGTL = dropLocation.globalToLocal(point.x, point.y);     /* In local coordinates, the drag intersects with the point defined before? */      if (event.currentTarget.hitTest(pointGTL.x,pointGTL.y)) {           /* If yes, the drop was found */         dropFound = true;                          }    /* Rest of the code */}	