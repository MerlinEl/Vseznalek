    	var chars = new Array();	var position = new Array();	var string = 'abc';	var num = 4;		chars_combination( string, num );     /**    * konstruktor tridy.     * param var string - mozne znaky pro kombinace    * param var num    - pocet znaku v kombinacich       */    function chars_combination( string, num ){		        if( string.length == 0 ) return;        if( int( num  ) <= 0 ) return;        //vytvori se pole znaku pro kombinace            for( var i = 0; i < string.length; i++ ){            chars[i] = string.charAt(i);           }         num = int( num );        _create_array();                _return_string( position );        //maximalni index        var max = chars.length - 1;        //pocatecni index v poli indexu        var id = position.length - 1 ;                         make_indexs( position, max, id, 0);    };       /**    * funkce vytvori prazne pole, reprezentujici indexy v poli znaku.     */    function _create_array(){        for( var i=0; i<num; i++ ){            position[i] = 0;           }    };    function make_indexs( array, max, pos, limit ){        //pokud je pozice v poli rovna nule, rekurze konci        if( pos < limit || array[pos] >= max )return;         //zvysime hodnotu indexu o 1        array[pos] = array[pos] + 1;                //funkce pro zpracovani pole indexu        _return_string( array );                              //pokud je upravovan index mensi nez pozice, musi se rekurzivne zvysovat prava strana pole.                              if( pos + 1 < array.length ){            //rekurzivne se vola funkce            make_indexs( array, max, array.length - 1, pos + 1);        }        //pokud je hodnota vetsi nez maximalni, snizi se index a hodnota aktualniho prvku se zmensi na nulu.         if( array[pos] >= max ){            array[pos] = 0;            --pos;        }                //rekurzivne se vola dalsi cyklus funkce.         make_indexs( array, max, pos, limit );    }    //funkce pro spracovani    function _return_string( array ){        var string = "";        for( var i = 0; i < array.length; i++ ){            string += chars[array[i]];        }        //vypis kombinace        trace (string);    }output:aaaaaaabaaacaabaaabbaabcaacaaacbaaccabaaabababacabbaabbbabbcabcaabcbabccacaaacabacacacbaacbbacbcaccaaccbacccbaaabaabbaacbabababbbabcbacabacbbaccbbaabbabbbacbbbabbbbbbbcbbcabbcbbbccbcaabcabbcacbcbabcbbbcbcbccabccbbccccaaacaabcaaccabacabbcabccacacacbcacccbaacbabcbaccbbacbbbcbbccbcacbcbcbccccaaccabccacccbaccbbccbccccacccbcccc