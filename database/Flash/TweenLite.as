//Tween Multiple object turn by turn in tweenlitefor (var i:int = 0; i < 5; i++){    TweenLite.to(object, duration, {delay: duration * i});}import com.greensock.TweenLite;import com.greensock.easing.*;TweenLite.to(tf, 1, {alpha:1, scaleY:1, ease:Elastic.easeOut,delay:0.4*i});			var card = this; 			TweenLite.to(card, snap_speed, { x:cage.x + card.snap_offset.x, y:cage.y + card.snap_offset.y, onComplete:function(){							card.finished_move = true;			}});TweenLite.to(mc, 1, {alpha:0.7, onComplete:fadeOut, onCompleteParams:[mc]});			TweenLite.to(c1, .5, {alpha:1, x:new_pos.x, delay:0.1});			TweenLite.to(flicker, .5, {width:c1.width, delay:0.1});mc.filters = [new GlowFilter(0xFF0000, 1, 12, 12, 2, 2), new GlowFilter(0x00FF00, 1, 50, 50, 2, 2)];TweenMax.to(mc, 2, {glowFilter:{color:0x0000FF, index:0}});TweenMax.to(mc, 2, {glowFilter:{color:0xFF0000, index:1}, overwrite:false});	import com.greensock.TweenLite;	import com.greensock.plugins.TweenPlugin;	import com.greensock.plugins.GlowFilterPlugin; 	TweenPlugin.activate([GlowFilterPlugin]); //activation is permanent in the SWF, so this line only needs to be run once.			if (b)			TweenLite.to(this, 1, {glowFilter:{color:0x00FF00, blurX:6, blurY:6, strength:4, alpha:1}, alpha:0.5});			else			TweenLite.to(this, 1, {glowFilter:{alpha:0}, alpha:1});