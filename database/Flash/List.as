			//setup List			textBox = textBox_01 as List;			textBox.allowMultipleSelection = true;			textBox.setStyle("cellRenderer", MultiLineCell);			textBox.addEventListener(ListEvent.ITEM_CLICK, selectedRow);			var txt:String = ftext.substring(start_index, end_index);textBox.addItem({label: txt});		private function selectedRow(e:ListEvent):void {							ftrace("obj:% obj:%", e.item, textBox.getItemAt(int(e.rowIndex)))			//ftrace(e.item.label)					/*		  ftrace("obj:%", e.target)		   obj:[object List]		   ch:[object List_skin]		   ch:[object ScrollBar]		   ch:[object ScrollBar]		   ch:[object Sprite]		 */		/*for (var i = 0; i < e.target.numChildren; i++ ) {				   ftrace("ch:%", e.target.getChildAt(i))		   //if (e.target.getChildAt(i) is Sprite)		   }*/			   //e.target.type = textField.type = TextFieldType.INPUT		}package classes {		import fl.events.ListEvent;	import flash.events.Event;	import fl.controls.listClasses.CellRenderer;	import flash.text.TextFieldType;		public class MultiLineCell extends CellRenderer {				public function MultiLineCell() {						//textField.addEventListener(Event.CHANGE, onChange);			//textField.addEventListener(ListEvent.ITEM_CLICK, onSelect);		}				private function onSelect(e:ListEvent):void {			ftrace("sel:%",e)		}				override protected function drawLayout():void {						textField.wordWrap = true;			//textField.autoSize = "left";			//textField.width = this.width;			//enable input			textField.mouseEnabled = true;			textField.tabEnabled = true;			textField.selectable = true;			textField.type = TextFieldType.INPUT; //"dynamic" to disable, "input" to enable			//super.height = textField.height;			//invalidate();			super.drawLayout();		}				/*private function onChange(evt:Event) {						trace("field updates")		}*/	}}			   var DescriptionField:TextArea = getChildByName( "description" ) as TextArea;			   DescriptionField.addEventListener( Event.RENDER, onDescriptionRender );						   public function onDescriptionRender( evt:Event ):void			   {			   var textArea:TextArea = evt.target as TextArea;			   textArea.textField.selectable = false;			The following example creates a list with an icon for each item. A symbol named RedBox must exist in the library and have "Export for ActionScript" toggled in its symbol properties:import fl.data.DataProvider;import fl.controls.List;var dp:DataProvider = new DataProvider();dp.addItem( { iconSource:RedBox, label:"Item 1" } );dp.addItem( { iconSource:RedBox, label:"Item 2" } );dp.addItem( { iconSource:RedBox, label:"Item 3" } );var list:List = new List();list.iconField = "iconSource";list.dataProvider = dp;addChild(list);A)			var data_array:Array = new Array;			for (var k in data){							var d = data[k];				data_array.push({ label:k, data:d});			}			SCENE["data_list"].dataProvider = new DataProvider(data_array); B)						SCENE["data_list"].addItem({label:"1956 Chevy (Cherry Red)", data:35000});C)			var dp:DataProvider = new DataProvider();			for (var k in data){								var d = data[k];				dp.addItem( {label:k, data:d } );			}			SCENE["data_list"].dataProvider=dp			SCENE["data_list"].addEventListener(Event.CHANGE, dataSelChanged);