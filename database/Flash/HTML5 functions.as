-----------------------------------------------------------------------------------------------------------------Console-----------------------------------------------------------------------------------------------------------------console.log("%c Blue text","background:blue;"); -----------------------------------------------------------------------------------------------------------------Every time the stage is updated, it fires two events-- "drawstart" before it starts drawing, and "drawend" when it's done. -----------------------------------------------------------------------------------------------------------------stage.addEventListener("drawstart", function(){console.log("drawstart")});var ths = this;var mcs = ["card_01", "card_02", "card_03", "card_04", "card_05"];stage.on("drawstart", initCards, this, true);function initCards (e) {	for (var i = 0; i < mcs.length; i++) {		ths[mcs].gotoAndStop(i);	}} -----------------------------------------------------------------------------------------------------------------Repeat run-----------------------------------------------------------------------------------------------------------------stage.on("drawstart", function(e) {	alert(e.currentTarget)});----------------------------------------------------------------------------------------------------------------this.on("pressup", function(evt) {	console.log("drop")	e.currentTarget.alpha=1;});-----------------------------------------------------------------------------------------------------------------this.addEventListener("pressmove", dragItem.bind(this)); //event listenerfunction dragItem(e){		console.log("drag item:" + e.currentTarget.getName());	e.currentTarget.alpha=0.8;	e.currentTarget.x = e.stageX 	e.currentTarget.y = e.stageY}-----------------------------------------------------------------------------------------------------------------Add movieclip functionality to get instance name-----------------------------------------------------------------------------------------------------------------createjs.DisplayObject.prototype.getName = function() {	if (!this.name && this._cacheName === undefined) {		var parent = this.parent;		var keys = Object.keys(parent);		var len = keys.length;		while (--len) {			if (parent[keys[len]] === this) {				this._cacheName = keys[len];				break;			}		}	}	return this.name || this._cacheName;}-----------------------------------------------------------------------------------------------------------------Caled from child to main timeline component-----------------------------------------------------------------------------------------------------------------this.addEventListener("click", onMouseClick.bind(this));function onMouseClick(e){		console.log("pressed button: id:" + e.currentTarget.id)}-----------------------------------------------------------------------------------------------------------------Funcrion aded in to movieclip-----------------------------------------------------------------------------------------------------------------this.ball_mc.on("pressmove", function (evt) {var p = this.parent.globalToLocal(evt.stageX, evt.stageY);evt.currentTarget.x = p.x;evt.currentTarget.y = p.y;});this.ball_mc.on("pressup", function (evt) {console.log("up");}) -----------------------------------------------------------------------------------------------------------------Stage Loaded-----------------------------------------------------------------------------------------------------------------//Initialize components when Stage is Loadedvar Main_Canvas = this;stage.addEventListener("drawend", init);function init(e){	console.log("drawend stage:", Main_Canvas)	Main_Canvas.removeEventListener("drawend", init);		//Init Components	for (var i = 0; i < 7; i++) {		var card_name = "card_0"+(i+1);		var card = Main_Canvas[card_name];		//console.log("Init card:" + card + " frame:" + i);		card.gotoAndStop(i);  	}}-----------------------------------------------------------------------------------------------------------------Stage Loaded-----------------------------------------------------------------------------------------------------------------function ready(callback){    // in case the document is already rendered    if (document.readyState!='loading') callback();    // modern browsers    else if (document.addEventListener) document.addEventListener('DOMContentLoaded', callback);    // IE <= 8    else document.attachEvent('onreadystatechange', function(){        if (document.readyState=='complete') callback();    });}var Main_Canvas = this;ready(function(){		console.log("stage ready", Main_Canvas)	//Init Components	for (var i = 0; i < 7; i++) {		var card_name = "card_0"+(i+1);		var card = Main_Canvas[card_name];		console.log("Init card:" + card.getName() + " stop at frame:" + i);		//exportRoot[card_name].gotoAndStop(i);  		card.gotoAndStop(i);  	}});-----------------------------------------------------------------------------------------------------------------Window Loaded-----------------------------------------------------------------------------------------------------------------window.onload = run;});-----------------------------------------------------------------------------------------------------------------Stage event-----------------------------------------------------------------------------------------------------------------	stage.addEvent('mousemove', function (e) {	  var x = e.client.x,		  y = e.client.y;	  	  if (this.isMouseOver(x, y)) {				if (!ball.mouseover) {		  this.fireEvent('mouseenter');		  this.mouseover = true;		}	  } else if (ball.mouseover) {		this.mouseover = false;		this.fireEvent('mouseleave');	  }	});	this.on('mouseenter', function(e) {				console.log("mouseenter")		//this.cursor = 'pointer';		//e.target.style.cursor = 'pointer';	});	this.on('mouseleave', function(e) {				console.log("mouseleave")		//e.target.style.cursor = 'default';	});