--researchdc = dotNetObject "System.Xml.XmlDocument"dc.innerXML = xml.toString()strW = dotNetObject "System.IO.StringWriter"strW.NewLine = "\n"dc.Save strWstrW.toString()--ordoc=dotNetObject "System.Xml.XmlDocument"doc.LoadXml(xml.toString())doc.outerXMLsw=dotNetObject "System.IO.StringWriter"writer= dotnetObject "System.Xml.XmlTextWriter" swwriter.Formatting = (dotnetClass "System.Xml.Formatting").Indenteddoc.WriteContentTo(writer)sw.ToString()--ormarkup =  @"<Root>      <Child>          <GrandChild/>      </Child>  </Root>" loadOptions = dotnetClass "System.Xml.Linq.LoadOptions"xRoot =(dotnetClass "System.Xml.Linq.XElement").Parse markup loadOptions.SetLineInfoxRoot.ToString()--orfn PrintXML xml_str = (	local result = ""	local mStream = dotnetObject "System.IO.MemoryStream"	local Encoding = dotnetClass "System.Text.Encoding"	local writer = dotnetObject "System.Xml.XmlTextWriter" mStream Encoding.Unicode	local document = dotNetObject "System.Xml.XmlDocument"    try (        --Load the XmlDocument with the XML.        document.LoadXml(xml_str)        writer.Formatting = (dotnetClass "System.Xml.Formatting").Indented		        --Write the XML into a formatting XmlTextWriter        document.WriteContentTo(writer)        writer.Flush()        mStream.Flush()		        --Have to rewind the MemoryStream in order to read        --its contents.        mStream.Position = 0		        --Read MemoryStream contents into a StreamReader.        local sReader = dotnetObject "System.IO.StreamReader" mStream		        --Extract the text from the StreamReader.        local formattedXml = sReader.ReadToEnd()        result = formattedXml	)    catch (	        print "Error > Handle the exception..."    )    mStream.Close()    writer.Close()    result)PrintXML "<Root> <Child> </Child> </Root>"PrintXML xml._template_1PrintXML (xml.toString())