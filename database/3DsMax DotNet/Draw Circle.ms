fn netDrawCircle radius offset:[0, 0] thickness:10 clr:blue = (		-- 	local way = (dotnetclass "System.Drawing.Drawing2D.LinearGradientMode").Vertical --ForwardDiagonal-- 	local rect = mcDotnet.dRect [0, 0] [radius*2, radius*2]-- 	local brush = dotnetobject "System.Drawing.Drawing2D.LinearGradientBrush" rect (mcDotnet.dColor white) (mcDotnet.dColor blue) way	local brush = dotNetObject "System.Drawing.SolidBrush" (mcDotnet.dColor clr)-- 	local pen = dotNetObject "system.drawing.pen" (mcDotnet.dColor clr) thickness  	local pen = dotNetObject "system.drawing.pen" brush thickness  	local bm = mcDotnet.dBitmap [radius*2, radius*2]	local g = mcDotnet.Graphics.FromImage bm -- 	g.Clear(mcDotnet.dColor black);-- 	g.SmoothingMode = g.SmoothingMode.HighQuality	g.SmoothingMode = g.SmoothingMode.AntiAlias	local px = offset.x + thickness / 2	local py = offset.y + thickness / 2	radius -= thickness-- 	format "canvas px:% py:%\n" px py	local first_point1 = int( (Cos 0) * radius + px)	local first_point2 = int( (Sin 0) * radius + py)	local p1= [first_point1, first_point2]	for i = 1 to 360 do (			local dx = int( (Cos i) * radius + px)		local dy = int( (Sin i) * radius + py)		local p2 = [dx, dy]		g.DrawLine pen (mcDotnet.dPoint p1) (mcDotnet.dPoint p2)		p1 = p2	)	bm)