---ribbon=DotnetObject "MaxWpfContent.MaxModelingRibbonUserControl"--ribbon.LoadRibbon()--dotnet.loadassembly "$Max\\bin\assemblies\\MaxWpfContent.dll"---dotnet.showConstructors "ManagedServices.MaxActionItem"--NewActionItem=DotnetObject "ManagedServices.MaxActionItem" <ActionItem*>aActionItem-- .[static]<ManagedServices.MaxActionItem>ResolveMacroItem <System.String>aMacroName <System.String>aMacroCategory--- .[static]<ManagedServices.MaxActionItem>ResolveNativeItem <System.UInt32>aActionID <System.UInt32>aTableID-- .[static]<ManagedServices.MaxActionItem>ResolveNativeItem <System.String>aActionName <System.String>aGroupName--//--(dotnet.loadassembly "$Max\\ManagedServices.dll"--//--ActionItemResolver=Dotnetclass "ManagedServices.MaxActionItemResolver"NewItem=ActionItemResolver.ResolveMacroItem "Convert_to_Poly" "Modifier Stack" NewItem.Execute())--//--( xaml_file=openfile(getdir #ui + "\\Ribbon\\ModelingRibbon.xaml") out_to_file=newscript() --//-- while not eof xaml_file do     (     Compare=dotnetobject "system.string" (readline xaml_file)     --//--     if Compare.contains "MaxMacroRibbonButton" then          (         idx_name=Compare.LastIndexOf "MacroName="         idx_macro=Compare.LastIndexOf "MacroCategory="         c_name=((dotnetobject "system.string" (Compare.Substring (idx_macro+15))).split "\"")[1]         str_name=Compare.Substring (idx_name+11) (idx_macro-idx_name-13)         --//--         try(format ("\""+str_name+"\" \""+c_name+"\"") to:out_to_file)catch()         )     --//--     ) --//-- close xaml_file )  fn parseXAML file: =( if file == unsupplied do file = (getDir #ui + "Ribbon\\ModelingRibbon.xaml")  mReader = dotnetobject "System.Windows.Markup.XamlReader" xReader = dotnetclass "System.Xml.XmlReader" xReader = xReader.create file  mReader.load xReader) (--dotnet.loadassembly "$Max\\bin\assemblies\\MaxWpfContent.dll"--dotnet.loadassembly "$Max\\AdWindows.dll"--//--FloatingFrame=dotnetobject "Autodesk.Internal.Windows.FloatingFrame"RibbonPanelControl=dotnetobject "Autodesk.Private.Windows.RibbonPanelControl"RibbonPanel=dotnetobject "Autodesk.Windows.RibbonPanel"RibbonPanelSource=dotnetobject "Autodesk.Windows.RibbonPanelSource"RibbonButton=dotnetobject "Autodesk.Windows.RibbonButton"--//--RibbonPanelSource.Title="MarTroYx Ribbon Test"--//--FloatingFrame.Content=RibbonPanelControlRibbonPanelControl.Panel=RibbonPanelRibbonPanel.Source=RibbonPanelSource--//--FloatingFrame.topmost=trueFloatingFrame.Show())ComponentManager=dotnetclass "Autodesk.Windows.ComponentManager"MaxRibbon=ComponentManager.Ribbon  (  ComponentManager=dotnetclass "Autodesk.Windows.ComponentManager"  ComponentManager.Ribbon.Tabs.Clear()  --//--  Mx_Tab=dotnetobject "Autodesk.Windows.RibbonTab"  Mx_Tab.Title="Test Martin"  --//--  Mx_Panel=dotnetobject "Autodesk.Windows.RibbonPanel"  --//--  RibbonPanelSource=dotnetobject "Autodesk.Windows.RibbonPanelSource"  --//--  Mx_Button1=dotnetobject "Autodesk.Windows.RibbonButton"  Mx_Button1.Text="1"  Mx_Button1.showtext=true  --//--  Mx_Button2=dotnetobject "Autodesk.Windows.RibbonButton"  Mx_Button2.Text="2"  Mx_Button2.showtext=true  --//--  Mx_Button3=dotnetobject "Autodesk.Windows.RibbonButton"  Mx_Button3.Text="3"  Mx_Button3.showtext=true  --//--  Mx_Button4=dotnetobject "Autodesk.Windows.RibbonButton"  Mx_Button4.Text="4"  Mx_Button4.showtext=true  --//--  ComponentManager.Ribbon.Tabs.Add(Mx_Tab)  Mx_Panel.Source=RibbonPanelSource  RibbonPanelSource.items.add(Mx_Button1)  RibbonPanelSource.items.add(Mx_Button2)  RibbonPanelSource.items.add(Mx_Button3)  RibbonPanelSource.items.add(Mx_Button4)  Mx_Tab.Panels.Add(Mx_Panel)  --//--  ComponentManager=undefined  (dotnetclass "System.gc").collect()  gc() ---just to make sure :-)  )  