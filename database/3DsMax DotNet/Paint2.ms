rollout rltGraph "- Paint Master -"(   dotNetControl uiGraph "System.Windows.Forms.Label" pos:[0,0] width:rltGraph.width height:(rltGraph.height-30)  colorpicker pickMe "Paint Color"color:[0,255,0] modal:false across:2 slider StrokeStrength range:[0,100,0] widtH:100 height:10 offset:[-300,0]      local graphics = undefined local DrawActive = false local thePen = undefined local oldPos = [0,0] local DrawColor  = (dotNetClass "System.drawing.color").fromARGB 0 255 0      fn InitPen = (  DrawColor  = (dotNetClass "System.drawing.color").fromARGB (pickme.color.r) (pickme.color.g) (pickme.color.b)  thePen = dotNetObject "System.drawing.pen" DrawColor  thePen.width = StrokeStrength.value  thePen.DashCap = dotNetClass "System.Drawing2D.DashCap.Round" )     fn fnPencil graphics pos = (     if oldPos != [0,0] then  (   graphics.drawLine thePen oldPos[1] oldPos[2] pos[1] pos[2]     )  gc light:true )      on pickMe changed col do (      InitPen() )     on StrokeStrength changed val do (  InitPen() )   on rltGraph open do (  uiGraph.backColor = uiGraph.backColor.fromARGB 69 69 69   graphics = uiGraph.CreateGraphics()--   graphics.SmoothingMode = (dotNetClass "System.Drawing.Drawing2D.SmoothingMode.AntiAlias")  --   graphics.(dotNetClass "System.Drawing.Drawing2D.SmoothingMode")  thePen = dotNetObject "System.drawing.pen" DrawColor )   on uiGraph MouseDown arg do (  DrawActive = true )  on uiGraph MouseMove arg do (  if DrawActive == true then  (   fnPencil graphics [arg.x,arg.y]   oldPos = [arg.x,arg.y]  ) )  on uiGraph MouseUp do (  DrawActive = false  oldPos = [0,0]  gc() ) )  try (destroyDialog rltGraph)catch() createDialog rltGraph 1000 1000 style:#(#style_titlebar, #style_border, #style_sysmenu,#style_minimizebox)