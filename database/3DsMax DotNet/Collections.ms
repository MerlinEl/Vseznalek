sdict = dotnetobject "System.Collections.Generic.Dictionary`2[System.String,System.Char]"sdict.add "eh" "a"sdict.add "bee" "b"sdict.add "sea" "c"it = sdict.GetEnumerator()while it.MoveNext() do(	format "Key: % Value: %\n" it.current.key it.current.value)slist = dotnetobject "System.Collections.Generic.List`1[System.String]"slist.add "eh"slist.add "bee"slist.add "sea"it = slist.GetEnumerator()while it.MoveNext() do(	format "current: % \n" it.current)sdict.Keyssdict.Valuessdict.countsdict.Comparer-------------------------------------------------------------------stringAQN= (dotnet.gettype "System.String").AssemblyQualifiedNamellist = dotnetobject ("System.Collections.Generic.LinkedList`1[[" + stringAQN + "]]")llist.AddFirst "AAA"llist.AddFirst "BBB"linkC = llist.AddLast "CCC"it = llist.GetEnumerator()while it.MoveNext() do format "it.current = % \n" it.currentllist.AddBefore linkC "xxx"it = llist.GetEnumerator()while it.MoveNext() do format "it.current = % \n" it.currentllist.Remove (llist.Find "AAA")it = llist.GetEnumerator()while it.MoveNext() do format "it.current = % \n" it.current-------------------------------------------------------------------fn createAssembly src = (		csharpProvider = dotnetobject "Microsoft.CSharp.CSharpCodeProvider"	compilerParams = dotnetobject "System.CodeDom.Compiler.CompilerParameters"	compilerParams.CompilerOptions = "/t:library"	compilerParams.GenerateInMemory = true	compilerResults = csharpProvider.CompileAssemblyFromSource compilerParams #(src)		if (compilerResults.Errors.Count > 0 ) then	(		errs = stringstream ""		for i = 0 to (compilerResults.Errors.Count-1) do		(			err = compilerResults.Errors.Item[i]			format "Error:% Line:% Column:% %\n" err.ErrorNumber err.Line err.Column err.ErrorText to:errs 		)		MessageBox (errs as string) title: "Errors encountered while compiling C# code"		return undefined	)	a = compilerResults.CompiledAssembly)-------------------------------------------------------------------class SharpSvnHelpers{    public static Collection<SvnLogEventArgs> CreateCollection()    {        return new Collection<SvnLogEventArgs>();    }}logItems = (dotNetClass "MyAssembly.SharpSvnHelpers").CreateCollection()