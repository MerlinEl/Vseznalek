var eventMove = fl.addEventListener("mouseMove",  onMove); var eventID = fl.addEventListener("selectionChanged", function (){  fl.trace("sel changed")fl.removeEventListener("selectionChanged", eventID//format("{i} elements selected", selection.length); });"documentNew", "documentOpened", "documentClosed", "mouseMove", "documentChanged", "layerChanged""timelineChanged", "frameChanged", “prePublish”, “postPublish”, “selectionChanged”, var counter = 0;var eventID = fl.addEventListener("selectionChanged", function (){     	counter++	fl.trace("selectionChanged:"+counter);	if (counter > 1){		fl.removeEventListener("selectionChanged", eventID);		fl.trace("Create Arrow now!")	}});package {import flash.display.*;import flash.text.*;import flash.external.*;import adobe.utils.MMExecute;	public class CurrentDocument extends Sprite {			public function CurrentDocument() {			onDocumentChanged("Waiting for a change...");					ExternalInterface.addCallback("documentChanged", onDocumentChanged);					MMExecute("fl.addEventListener('documentChanged', onDocumentChanged);\\			var panels = fl.swfPanels;\			var myPanel;\			for (var i = 0; i < panels.length; i++) {\				if (panels[i].name == 'CurrentDocument') {\					myPanel = panels[i];\					break;\				}\			}\			function onDocumentChanged() {\				var path = fl.getDocumentDOM().pathURI.split('/');\				if (myPanel) myPanel.call('documentChangedppath.pop());\			}")		}			private function onDocumentChanged(name:String):void {			label_tf.text = name;		}		}}