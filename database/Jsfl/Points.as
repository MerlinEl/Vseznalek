// array for some manipulationsvar selPoints = new Object();// array with all points in layer[0] and frames[0] var allBezierPoints = fl.getDocumentDOM().getTimeline().layers[0].frames[0].elements[0].vertices// read and write all points coordfor ( i in allBezierPoints ) {    selPoints[i] = { x:allBezierPoints[i].x, y:allBezierPoints[i].y }   }// now dirty trick - move selected points by 1 px on Xfl.getDocumentDOM().moveSelectedBezierPointsBy({x:1, y:0});// reseting all pointsallBezierPoints = fl.getDocumentDOM().getTimeline().layers[0].frames[0].elements[0].vertices// compare old coord and new coord of all pointsfor ( i in allBezierPoints ) {    // if coords similar, ther erase this point from array    if ( allBezierPoints[i].x == selPoints[i].x ) delete selPoints[i];}// move selected points backfl.getDocumentDOM().moveSelectedBezierPointsBy({x:-1, y:0});// now we have array with selected points and they coordinatesfor ( i in selPoints) {    fl.trace ( "Point " + i + " X: "+selPoints[i].x +", Y: "+ selPoints[i].y)}lockStatus = layer.locked;    if (lockStatus)    {        layer.locked = false;    }    // Frame loop     for (var j = 0; j < layer.frames.length; j++)    {        frame = layer.frames[j];        // Element loop        for (var k = 0; k < frame.elements.length; k++)        {            element = frame.elements[k];            element.selected = true;            // Only check elements that are shapes.            if (element.elementType == 'shape')            {                vertices = element.vertices;                var vertArray = [];                // Vertice loop                for (var l = 0; l < vertices.length; l++)                {                    // Push the x and y coordinates of the vertices to the vertArray.                    vertArray.push(' x: ' + vertices[l].x + ' y: ' + vertices[l].y);                }                // Trace the vertex count per frame.                fl.trace('The vertex count of frame ' + (j + 1) + ' on ' + layer.name + ' is: ' + vertices.length + newLine);                for (var m = 0; m < vertArray.length; m++)                {                    // Trace the vertex locations.                    fl.trace('Vertex ' + (m + 1) + ' on frame ' + (j + 1) + ' is located at: ' + vertArray[m]);                }            }            else if (element.elementType == 'instance')            {                // If a movie clip is found add it to the movie clips array.                foundMovieClips = true;                movieClips.push(element.libraryItem.name);            }        }        if (foundMovieClips)        {            foundMovieClips = false;            fl.trace('LAYER:  ' + layer.name + ' FRAME:  ' + (j + 1) + ' SYMBOL:  ' + movieClips[j]);        }    }}