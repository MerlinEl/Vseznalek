ressing on the numbered button advances the number by one, and pressing Exit returns you to ZBrush.[VarDef, count, 0][RoutineDef, CreatePreview,    [IShowActions,0]    [IFreeze, //'IFreeze' prevents the user from seeing any of the following actions        // until they are done.        //=============THE MAIN EVENT LOOP===========        // This loop continually executes while the plugin is running. It does two main        // things:        //    1) It draws the  interface on the screen.        //    2) Then, when the user clicks a button, it processes that click.        // These two things are done over and over again until the user presses         // the 'Exit' button.        [Loop, 100000, // Loop 'forever'            // --------- USER INTERFACE CREATION SECTION --------            // This section creates the MaterialPack interface.             // It is executed when MaterialPack starts up            // and after EVERY mouse click the user makes, until the plugin exits.            // Create the main (background) window of the  interface. It            // doesn't do anything--it's just for looks. Since this is the first control            // created, it will be the 'furthest back'--all of the other controls will            // appear drawn on top of it.            //            // IMPORTANT: Controls are identified by the order in which they were created,            // counting from 1. So this will be control 1.            [NoteIButton               , //label               , //icon               , //pressed               ,1 //disabled               ,1 //hoffset               ,1 //voffset               , // width               , //height               , //button color               , //text color               , 0 //button opacity               , //text opacity               , //icon opacity               ]            // CONTROL 2: The button showing the current count.            [NoteIButton                , count // text                ,,,,,,, // unused arguments, ZBrush will use default values                , 0x000000 // button color                ,                ,1,1,1 // opacities            ]            // CONTROL 3: EXIT Button            [NoteIButton, "Exit" ,,,,,,,, 0x000000,, 1,1,1]           // CONTROL 4: The Help button. This is an inactive button;            // it just displays a line of help.           [NoteIButton, "Click on the numbered button to increment it." // label               ,, 0 // pressed status               , 1 // disabled status               ,,,,,               ,0x101010 // color               ,0,1,1 // opacities            ]            // --------- EVENT HANDLING SECTION --------            // Get index of the button that was clicked.            [VarSet, userSelect,  [Note,""]]            // --- Space or Return key ---            // IF the user pressed the space or return key, exit.            [If, (userSelect==2),                 [VarSet, count, count+1]            ]            // --- 'Exit' Button ---            // IF the user clicked on the 'Exit' button, THEN exit the plugin.            [If,(userSelect==3), [Exit]]        ] // END LOOP; the main event loop    ] // END IFreeze] // END ROUTINE CreatePreview// CREATE a subpalette, and a button in that subpalette.[ISubPalette,"Zplugin:Countit",2][IButton    ,"Zplugin:Countit:Countit","Click here to bring up the Countit dialog"         ,   // CODE TO EXECUTE WHEN BUTTON PRESSED.        [IShowActions,0]                [RoutineCall,CreatePreview]    ,,152,,,.125    ]