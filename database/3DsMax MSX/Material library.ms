/***@Usage add more material libraries in to Temporary Library*@Example		--load		semantic_lib_path = (LS3DGUP.LS3DGUP.UtilsPath + "semantic_materials.mat")		terrain_lib_path = (LS3DGUP.LS3DGUP.UtilsPath + @"ground_material\bc_terrain.mat")		success = loadMaterialLibraryPlus semantic_lib_path		success = loadMaterialLibraryPlus terrain_lib_path		--read		currentMaterialLibrary.count		currentMaterialLibrary[1].name		currentMaterialLibrary[2].name		--get		semantic_mat = currentMaterialLibrary["semantic_materials"]		terrain_mat = currentMaterialLibrary["bc_terrain_main"]		--save all in one		all_lib_path = (LS3DGUP.LS3DGUP.UtilsPath + @"ground_material\mat_all.mat")		saveTempMaterialLibrary currentMaterialLibrary all_lib_path		--save separate library		terrain_lib = materialLibrary(currentMaterialLibrary["bc_terrain_main"])		saveTempMaterialLibrary terrain_lib terrain_lib_path*/fn loadMaterialLibraryPlus lib_path = ( --	if not (doesFileExist lib_path) do return false	local library_materials = for m in currentMaterialLibrary collect m	local success = loadMaterialLibrary lib_path	if not success do return false	local new_lib = currentMaterialLibrary[1]	for m in library_materials where m.name != new_lib.name do append currentMaterialLibrary m	true)