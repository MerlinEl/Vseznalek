-- strore  original pos as propertysetUserProp o "orig_pos" o.pos--move to zero o.pos = [0,0,0]--restore original poslocal orig_pos = getUserProp o "orig_pos"if orig_pos != undefined do o.pos = execute  orig_pos--store an array of stringsgetUserProp $ "Names"setUserProp $ "Names" #("c","esf","dfd")--save object parent name as object propertyfn storeObjectsLinks objs = (	for o in objs do (		local obj_parent = o.parent		if obj_parent == undefined do (			format "Object [ % ] is not linked.\n" o.name			continue		)		setUserProp o "parent_name" obj_parent.name	) )storeObjectsLinks selectionfn restoreObjectsLinks objs = (	for o in objs do (		local parent_name = getUserProp o "parent_name"		if parent_name == undefined do (			format "Object [ % ] was not stored parent_name.\n" o.name		)		local obj_parent = getNodeByName parent_name		if obj_parent == undefined do (			format "Object [ % ] parent [ % ] was not found.\n" o.name parent_name			continue		)		o.parent = obj_parent	))restoreObjectsLinks selectionfn removeAllObjectsProperties objs = (  for o in objs do setUserPropBuffer o "")--check resultfor o in selection do format "Obj:% Parent:%\n" o.name o.parent --select objs which have property "parent_name"objs_with_prop = for o in selection where (getUserProp o "parent_name" != undefined) collect oselect objs_with_prop