mats = for o in selection WHERE o.material != undefined collect o.materialfor m in mats do (	local Diff = m.diffuseMap	if classof Diff == bitmapTexture do (			/*d=Diff.fileName			o=GetfileNamePath d + GetfileNameFile d + ".gif"			Opa =  bitmapTexture filename:o			m.opacityMap = Opa			m.diffuseMap.coords.blur = 0.0			m.opacityMap.coords.blur = 0.0			m.diffuse = (color 34 38 36)			m.specular = (color 230 230 230)			m.specularLevel = 20			m.glossiness = 20			m.selfIllumAmount = 0*/			-- create a new cc node and wire it			local ccnode = ColorCorrection()			ccnode.Map = Diff						-- set cc settings			ccnode.hueShift = 0.5			ccnode.saturation = 0.0			ccnode.tint = (color 0 0 0)			ccnode.tintStrength = 0.0					-- put the cc node to the diffuse slot			m.diffuseMap = ccnode	))mats = for o in selection WHERE o.material != undefined collect o.materialfor m in mats do (	local Diff = m.diffuseMap	if classof Diff == bitmapTexture do (			/*d=Diff.fileName			o=GetfileNamePath d + GetfileNameFile d + ".gif"			Opa =  bitmapTexture filename:o			m.opacityMap = Opa			m.diffuseMap.coords.blur = 0.0			m.opacityMap.coords.blur = 0.0			m.diffuse = (color 34 38 36)			m.specular = (color 230 230 230)			m.specularLevel = 20			m.glossiness = 20			m.selfIllumAmount = 0*/			-- create a new cc node and wire it			local ccnode = ColorCorrection()			ccnode.Map = Diff						-- set cc settings			ccnode.hueShift = 0.0			ccnode.saturation = 0.0			ccnode.tint = (color 0 0 0)			ccnode.tintStrength = 0.0			/*			ccnode.rewireMode (Rewire_Mode) : integer			ccnode.rewireR : integer			ccnode.rewireG : integer			ccnode.rewireB : integer			ccnode.rewireA : integer			ccnode.hueShift : float			ccnode.saturation : float			ccnode.tint (Hue_Tint) : fRGBA color			ccnode.tintStrength (Hue_Strength) : float			ccnode.lightnessMode : integer			ccnode.contrast : float			ccnode.brightness : float			ccnode.exposureMode (Lightness) : integer			ccnode.enableR : boolean			ccnode.enableG : boolean			ccnode.enableB : boolean			ccnode.gainRGB (LightnessGainRGB) : float			ccnode.gainR (LightnessGainR) : float			ccnode.gainG (LightnessGainG) : float			ccnode.gainB (LightnessGainB) : float			ccnode.gammaRGB (LightnessGammaRGB) : float			ccnode.gammaR (LightnessGammaR) : float			ccnode.gammaG (LightnessGammaG) : float			ccnode.gammaB (LightnessGammaB) : float			ccnode.pivotRGB (LightnessPivotRGB) : float			ccnode.pivotR (LightnessPivotR) : float			ccnode.pivotG (LightnessPivotG) : float			ccnode.pivotB (LightnessPivotB) : float			ccnode.liftRGB (LightnessLiftRGB) : float			ccnode.liftR (LightnessLiftR) : float			ccnode.liftG (LightnessLiftG) : float			ccnode.liftB (LightnessLiftB) : float			ccnode.printerLights (LightnessPrinter) : float			  */						-- put the cc node to the diffuse slot			m.diffuseMap = ccnode	))