/**	*@Usage > Edge Loop Functions	*/	fn filterEdgesInLoop obj edges edge_index = (				local edge_faces = polyop.getFacesUsingEdge obj edge_index		local face_edges = polyop.getEdgesUsingFace obj edge_faces		((vert_edges -  face_edges) as array)[1] 	)	/**	*@Usage > Edge Loop Functions	*/	fn getNextEdgeLoop obj &next_edge &next_vert = (				local edge_verts = polyop.getVertsUsingEdge obj next_edge		next_vert    = ((edge_verts - #{next_vert}) as Array)[1]		local vert_edges = polyop.getEdgesUsingVert obj next_vert		next_edge = filterEdgesInLoop obj vert_edges next_edge	)	/**	*@Usage > Edge Loop Functions	*/	fn getPrevEdgeLoop obj &prev_edge &prev_vert = (				local edge_verts = polyop.getVertsUsingEdge obj prev_edge		prev_vert    = ((edge_verts - #{prev_vert}) as Array)[1]		local vert_edges = polyop.getEdgesUsingVert obj prev_vert		prev_edge = filterEdgesInLoop obj vert_edges prev_edge	)	/**	*@Usage > Edge Loop Functions	*/	fn getEdgeLoop obj edge_index = (					local prev_edge = edge_index		local next_edge = edge_index				local edge_verts = (polyop.getVertsUsingEdge obj prev_edge as array)		next_vert  = edge_verts[1]		prev_vert  = edge_verts[2]				local eloop = #(prev_edge)				--if wee still have progress in one of twoo directions (back - forward)		while next_edge != undefined or prev_edge != undefined do ( 						--forward step			if next_edge != undefined do (								getNextEdgeLoop obj &next_edge &next_vert 				if next_edge != undefined and findItem eloop next_edge == 0 then append eloop next_edge else next_edge = undefined			)			--backward step			if prev_edge != undefined do (								getPrevEdgeLoop obj &prev_edge &prev_vert 				if prev_edge != undefined and findItem eloop prev_edge == 0 then mcArray.prepend eloop prev_edge else prev_edge = undefined			)		)		eloop	)fn selectEdgeLoop = (	local obj = $	if classOf obj != Editable_Poly do return false	local edge_index = (polyOp.getEdgeSelection obj as array)[1]	local edge_loop = getEdgeLoop obj edge_index	polyOp.setEdgeSelection obj edge_loop	redrawViews())selectEdgeLoop()