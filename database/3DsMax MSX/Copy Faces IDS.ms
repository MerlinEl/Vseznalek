struct FACE_ID_DATA (fCenter, id)fn getPolyIdByFacePos obj = (    local faces = #{1..obj.faces.count}    for f in faces collect (        FACE_ID_DATA (polyOp.getFaceCenter obj f) (polyOp.getFaceMatID obj f)    )   )fn setFacesIdsByList obj idList tolerance:1= (    format "idList:%\n" idList.count      local faces = #{1..obj.faces.count}    for f in faces collect with redraw off (        local fcenter = (polyOp.getFaceCenter obj f)         for d in idList do (            local identical_face_center = (distance d.fCenter fcenter) < tolerance            if not identical_face_center do continue            polyOp.setFaceMatID obj f d.id            exit        )    ))fn transferIDSFromObjToOBJ = (    local sel = selection as array    local source_obj = sel[1]    local target_obj = sel[2]    local old_pos = target_obj.pos    target_obj.pos = source_obj.pos    local face_ids = getPolyIdByFacePos source_obj    setFacesIdsByList target_obj face_ids tolerance:1    target_obj.pos = old_pos)undo "transfer IDS" on transferIDSFromObjToOBJ()