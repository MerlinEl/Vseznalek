(	global _points = #()	global _pmouse = undefined	unRegisterRedrawViewsCallback drawRubberband	fn drawRubberband = if _points.count > 0 and _pmouse != undefined do	(		gw.setTransform (matrix3 1)		local points = for p in _points collect (gw.transPoint p)		append points (gw.transPoint _pmouse)		gw.setcolor #line (color 50 50 50)		for k=2 to points.count do gw.wPolyline #(points[k-1], points[k]) off				gw.enlargeUpdateRect #whole		gw.updateScreen()	)	fn mouseTracking msg ir obj faceNum shift ctrl alt =	(		_pmouse = ir.pos		case msg of		(			#mouseAbort: ()			  #freeMove: if _points.count > 0 do completeRedraw()			#mousePoint: append _points _pmouse			 #mouseMove: if _points.count > 0 do completeRedraw()		)		if msg == #mouseAbort then #abort else #continue 	)	_points = #()	registerRedrawViewsCallback drawRubberband	act = mouseTrack trackCallback:mouseTracking snap:#3D	unRegisterRedrawViewsCallback drawRubberband	completeRedraw()	format "act:% numpoints:% points:%" act _points.count _points)