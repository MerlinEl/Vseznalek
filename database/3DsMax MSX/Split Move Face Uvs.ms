fn breakFacesUvs obj_mesh faces_barr = ( 	local faces_verts_old = meshop.getVertsUsingFace obj_mesh faces_barr	meshop.detachFaces obj_mesh faces_barr	local faces_verts_new = meshop.getVertsUsingFace obj_mesh faces_barr	meshop.weldVertsByThreshold obj_mesh (face_verts_old + face_verts_new) 0.001)fn moveFaceUvs obj_mesh face_index offset = (  if not ( meshop.getmapsupport obj_mesh 1 ) do return false  breakFacesUvs obj_mesh #{face_index}	local face_map_verts = meshop.getMapFace obj_mesh 1 face_index	for i=1 to 3 do (				local v = face_map_verts[i]		map_vert_pos = meshop.getMapVert obj_mesh 1 v		meshop.setMapVert obj_mesh 1 v (map_vert_pos + offset)	)	update obj_mesh)	moveFaceUvs $ 24 [0, -0.2, 0]obj_poly = $obj_mesh = $ --snapshotasmesh obj_polymeshop.getNumTVerts obj_meshface_map_verts = meshop.getMapFace obj_mesh 1 24meshop.getMapFacesUsingMapVert obj_mesh 1 face_map_verts[1]map_vert_pos = meshop.getMapVert obj_mesh 1 face_map_verts[1]meshop.setMapVert obj_mesh 1 face_map_verts[1] (map_vert_pos) -- + 0.2update obj_meshobj_mesh.selectedVerts = #{25, 30, 24}obj_mesh.selectedVerts = meshop.getVertsUsingEdge obj_mesh 72update obj_meshgetTVert obj_mesh 12getTVFace obj_mesh 5getFace obj_mesh 5buildTVFaces obj_mesh truemeshOp.getEdgesReverseEdge obj_mesh 72delete obj_mesh