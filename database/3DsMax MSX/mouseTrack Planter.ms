Global gplantObjectOnSurface--struct splantObjectOnSurface (	intersection_ray = undefined,	fn drawCross = (		if intersection_ray == undefined do return OK		--gw.setTransform(Matrix3 1)			--gw.Marker pos #diamond color:green		--gw.resetUpdateRect()		completeredraw()		--gw.clearScreen (Box2 800 600 20 30 ) useBkg:false		local GridTm = matrixFromNormal intersection_ray.dir		GridTm.row4 = intersection_ray.pos		gw.setTransform GridTm		gw.setColor #line yellow		--Line X		gw.Polyline #([-10,0,0],[10,0,0]) false		--Line Y		gw.Polyline #([0,-10,0],[0,10,0]) false				--gw.enlargeUpdateRect #whole		--gw.updateScreen()	),	fn mouseTracking msg ir obj faceNum shift ctrl alt = (		-- format "msg:% obj:%\n" msg obj		case msg of		(			#mouseAbort: (				format "finished\n"				gplantObjectOnSurface.stopDraw()			)			#freeMove: (				if ir != undefined do (					intersection_ray = ir					if not keyboard.controlPressed do intersection_ray.dir = [0,0,1]					--drawCross ir.pos ir.dir; format "ir pos:%\tir dir:%\n" ir.pos ir.dir				)			)			#mousePoint: (				-- format "clicked on object:% at point:%\n" obj.name ir.pos				local src_obj = selection[1] 				local trgt_obj = obj				if ir != undefined and src_obj != undefined and trgt_obj != undefined do (					selection[1].pos = ir.pos					if keyboard.controlPressed do selection[1].dir = ir.dir				)			)			#mouseMove: ()		)		if msg == #mouseAbort then #abort else #continue 	),	fn startDraw = (		unRegisterRedrawViewsCallback drawCross		local visible_geo_objects = for o in objects where not o.isHidden and superClassOf o == GeometryClass collect o		registerRedrawViewsCallback drawCross		mouseTrack trackCallback:mouseTracking on:visible_geo_objects	),	fn stopDraw = (		unRegisterRedrawViewsCallback drawCross		completeRedraw()	))gplantObjectOnSurface = splantObjectOnSurface()gplantObjectOnSurface.startDraw()--simple wayfn moveObjectToPoint src_obj view_point = (	local trgt_obj = (mcMouse.getObjectsUnderMouse())[1]	if superClassOf trgt_obj != GeometryClass do return false	local RayPnt  = mapScreenToWorldRay view_point	format "RayPnt:%\n" RayPnt	trgt_mesh_obj = snapshot trgt_obj	local RayInt  = intersectRay trgt_mesh_obj RayPnt	delete trgt_mesh_obj	src_obj.pos = RayInt.pos)tool getAimPoint (	on start do ( if selection.count != 1 do #stop )	on mousePoint clickno do (		moveObjectToPoint selection[1] viewPoint		#stop	))undo "Object's to Surface" on (			if selection.count == 1 then (--aim snap object								local obj = selection[1]				if obj == undefined do return false				--Store Snap Settings				local snap_settings = mcSnap.getSnapSettings()				completeredraw()								--Enable 3D Snap only in Faces				snapMode.type = #3D				snapMode.Active = on				mcSnap.setItems off				mcSnap.enabled #("Face") on								--Get aim point from picked surface                      startTool getAimPoint				--Restore Snap Settings				mcSnap.setSnapSettings snap_settings			)		)	)