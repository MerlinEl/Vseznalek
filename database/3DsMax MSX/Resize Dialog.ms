try (destroydialog boardless) catch() rollout boardless "boardless dialog" width:300 height:300 ( 	local SWP_NOMOVE = 2 	 	local last_size = undefined 	 	spinner width_sp "Width: " type:#integer range:[138,1000,300] fieldwidth:56 align:#right offset:[4,0] 	spinner height_sp "Height: " type:#integer range:[100,1000,300] fieldwidth:56 align:#right offset:[4,0] 	 	checkbutton autoresize_bt "Auto Resize" width:120 align:#right offset:[4,0] 	button close_bt "Close" width:120 align:#right offset:[4,0] 	 	local r_controls = #(width_sp, height_sp, autoresize_bt, close_bt) 	 	fn adjustRightControls controls:r_controls =  	( 		curr_size = getdialogsize boardless 		r_controls.pos.x += curr_size.x - last_size.x 		last_size = getdialogsize boardless 	) 	fn resizeDialog =  	( 		last_size = getdialogsize boardless 		b = windows.getwindowpos boardless.hwnd 		windows.setwindowpos boardless.hwnd b.x b.y width_sp.value height_sp.value on 	) 	on width_sp changed val do if autoresize_bt.state do resizeDialog() 	on height_sp changed val do if autoresize_bt.state do resizeDialog() 	on width_sp entered arg can do if not can do resizeDialog() 	on height_sp entered arg can do if not can do resizeDialog() 	 	on close_bt pressed do 	( 		destroydialog boardless 	) 	on boardless resized size do 	( 		format "% %" (getdialogsize boardless) size  		adjustRightControls() 	) 	on boardless open do 	( 		last_size = getdialogsize boardless 	) 	local mDownPressed = false  	  	on boardless lbuttondown  pos do  	( 		mDownPressed = true 	) 	 	on boardless lbuttonup  pos do  	( 		mDownPressed = false 	) 	on boardless mousemove pos do 	( 		 		last_size = getdialogsize boardless 		if pos.x >= last_size.x-10 and pos.y <= last_size.y-10 then  		(	 			setSysCur #nuscale    			if mDownPressed then 			( 					b = windows.getwindowpos boardless.hwnd 					print b 					windows.setwindowpos boardless.hwnd b.x b.y pos.x b.h on 			)	 		)	 		if pos.y >= last_size.y-10 and pos.x <= last_size.x-10 then  		(	 			setSysCur #uscale   			if mDownPressed then 			( 					b = windows.getwindowpos boardless.hwnd 					print b 					windows.setwindowpos boardless.hwnd b.x b.y b.w pos.y on 			)	 		) 	)	 ) createdialog boardless style:#()