//maximum heap size setting (allow the maximum initalized memory to the JVM)%AppData%/../local\Adobe\Flash CS6\cs_CZ\Configuration\ActionScript 3.0\jvm.ini//original values-Djava.awt.headless=true-Xmx128m//Max value before the error -Xmx1980m//CZ: Chyba při inicializaci prostředí Java Runtime Environment.  Pravděpodobně budete muset Flash přeinstalovat.//ENG: Error initializing Java Runtime Environment.  You may need to reinstall Flash.//Eerror: Can't Read is caused when value is not multiply of 128//----------------------------------------------////Use value (it will cause java error but flash will work)-Xmx2048m//----------------------------------------------////can try update latestMicrosoft Visual C++ 2010 Redistributable - x86 10.0.40219   (x32)//----------------------------------------------//Flash CS5 & CS5.5//----------------------------------------------//The same property as in the CS4 solution below can be configured in the jvm.ini file in the location below:<InstallLocation>/Common/First Run/ActionScript 3.0/jvm.iniOpen the jvm.ini file in your text editor of choice and find the following line:-Xmx128mChange the 128 to the suggested amount (256 or more depending on the application). Restart Flash Professional to give the JVM the new starting amount of memory.Note: A new warning dialog has been added to CS5.5 for users that encounter this issue. Clicking the OK button will open the jvm.ini file mentioned above in the Flash CS5.5 code editor and allow the user to change the -Xmx128m value. Note: You must quit and restart Flash Professional for the changes to take effect.//----------------------------------------------//Flash CS4//----------------------------------------------//Warning! By following the directions below, you modify the Windows System Registry. A mistake could cause serious system damage, which could require you to reinstall your operating system.If you are not comfortable editing the registry, get assistance from your system administrator or another IT professional. If you choose to proceed, first back up your entire hard drive, and create a Windows System Restore Point.An edit to the "JVM Max Heap Size" property in the ActionsInspector category can resolve this issue. Add a DWORD Value named "JVM Max Heap Size" with a value of "256" in the following location in the registry:HKEY_CURRENT_USER/Software/Adobe/Flash 10/ActionsInspectorThe number read in is interpreted as megabytes. The max heap size defaults to 128 megs. Adobe suggests an increase to 256 megs to resolve this issue. If this increase in memory does not resolve the issue, continue to increase by 256 megs.Note: It is best practice to not increase this number by too much. If you increase it too much, Flash Professional can use up all available memory on the user's computer. Adobe recommends that you only raise the heap size enough to fix the problem at hand.//----------------------------------------------//Increase java heap memory//----------------------------------------------//CMDSET _JAVA_OPTIONS = -Xms512m -Xmx2048mSET _JAVA_OPTIONS = -Xms512m -Xmx4096mYou also use this below to expand the memoryexport _JAVA_OPTIONS="-Xms512m -Xmx1024m  -Xss512m -XX:MaxPermSize=1024m"Xmx specifies the maximum memory allocation pool for a Java virtual machine (JVM)Xms specifies the initial memory allocation pool.Xss setting memory size of thread stackXX:MaxPermSize: the maximum permanent generation size//----------------------------------------------//How to Increase Java Memory in Windows//----------------------------------------------//Go to Java settings. In the next dialog click on "Java," usually at the bottom of the other Programs; "Java Control Panel" dialog pop-up opens.Select "Java" tab. Inside the Java tab, click on "View" button. It opens the "Java Runtime Environment Settings"Change amount of heap. In the "Runtime Parameters" column change the value, or if it is blank decide for the new value, of the Java memory.Modify the parameter. To modify the parameter, double click in the "Runtime Parameters" column and,Modify Runtime Parametertype -Xmx512m that assigns 512MB memory for the Java.type -Xmx1024m that assigns 1GB memory for the Java.type -Xmx2048m that assigns 2GB memory for the Java.type -Xmx3072m that assigns 3GB memory for the Java, and so on.Please note, it begins with a minus sign and ends to an m.Also note, there is no blank space between characters.Close the dialogue box. Click on "OK" button on the "Java Runtime Environment Settings" to close it.Close Java dialogue box. "Apply" button in the "Java Control Panel" has been enabled now. You should click on "Apply" to finalise the new Java memory. Then click on the "OK" button.Close the Windows 7 Control Panel.TipsNo restart of the computer is necessary after modifying the Java memory.This is a temporary memory which is available for Java applications when you are running them. It does not "steal" or permanently deduct from the memory of computer. It is only a guarantee for Java Virtual Machine.The value you select depends on how much memory sticks you have in computer and how consuming is the application you like to run.If Java cannot find enough memory it dispatches an "exception" message to the Windows as, "Exception in thread "main" java.lang.OutOfMemoryError: Java heap space."This method with some modification also can be used for Windows XpThis method also can be used for Windows 8 and Windows 10.