var grab:Rectangle = bitmap.getColorBoundsRect(0xff000000, 0, false); var croppedBitmap:BitmapData = new BitmapData(grab.width, grab.height); croppedBitmap.copyPixels(bitmap, grab, new Point(0, 0));//ORvar crop_rect:Rectangle = new Rectangle(0,0,64,57);//size of the segment to copyvar crop_point:Point = new Point(40,50);//relative position of the crop from the top/left corner of the imagevar crop_angle:Number = Math.PI / 12;//angle of the crop relative to image in radians (clockwise)//transformation [tx,ty] parameters representing shift after rotationvar dA:Number = Math.atan(crop_point.y / crop_point.x) - crop_angle;var tX:Number = crop_point.length * Math.cos(dA);var tY:Number = crop_point.length * Math.sin(dA);var scaleMatrix:Matrix = new Matrix(Math.cos( -  crop_angle),Math.sin( -  crop_angle), -  Math.sin( -  crop_angle),Math.cos( -  crop_angle), -  tX, -  tY);var colorTransform:ColorTransform = new ColorTransform();//no colour transformation needed//copy selected segment after rotation and shift to match the size of the cropvar result_bitmap = new BitmapData(crop_rect.width,crop_rect.height);result_bitmap.draw(source_img, scaleMatrix , colorTransform, null, crop_rect, true);var result_img:Bitmap = new Bitmap(result_bitmap);//ORvar cropedImage:BitmapData = new BitmapData(positionImage.width, positionImage.height);var matrix:Matrix = new Matrix;var matrixXY:Point = new Point();var smooth:Boolean = false;var bounds1 = positionImageMasking.getRect(this);var bounds2 = positionImage.getRect(this);matrixXY.x = (bounds1.x - bounds2.x)/positionImageMasking.scaleX;matrixXY.y = (bounds1.y - bounds2.y)/positionImageMasking.scaleY;trace("matrixXY.x = " + matrixXY.x);matrix.tx = matrixXY.x;matrix.ty = matrixXY.y;matrix.scale(positionImageMasking.scaleX, positionImageMasking.scaleY);//matrix.rotate(Math.PI/14);if (positionImageMasking.scaleX != 1){smooth = true;}cropedImage.draw(loadedBitmap.bitmapData, matrix,null,null,null,smooth);var mc:MovieClip = new MovieClip();mc.graphics.beginBitmapFill(cropedImage);mc.graphics.drawRect(0, 0, positionImage.width, positionImage.height);mc.graphics.endFill();addChild(mc);