// loading website with virtual exploration of a houseimport flash.media.StageWebView;import flash.geom.Rectangle;var webView:StageWebView = new StageWebView();webView.loadURL("http://www.rd3d.com.br/360/vr/vr.html");webView.stage = this.stage;webView.viewPort = new Rectangle(7,5,1010,650);// embed youtube video - Not Worksimport flash.media.StageWebView;import flash.geom.Rectangle;import flash.errors.IOError;import flash.events.IOErrorEvent;var webView:StageWebView = new StageWebView();//webView.loadURL("http://www.rd3d.com.br/360/vr/vr.html");webView.stage = this.stage;webView.viewPort = new Rectangle(7,5,1024,768);var xmlPage:XML = <html>	<head></head>	<body>		<iframe width="800" height="600" src="https://www.youtube.com/embed/Molg9Qhr6LQ" title="YouTube video player" frameborder="0"></iframe>	</body></html>var stringPage:String = "<html><head></head><body><iframe width=\"640\" height=\"360\" src=\"http://youtube.com/embed/Molg9Qhr6LQ\" frameborder=\"0\" </iframe></body></html>"; webView.addEventListener(IOErrorEvent.IO_ERROR, onError);webView.loadString(stringPage);//, "text/html"function onError(e:IOErrorEvent):void {    ctrace("error:{0}", e.toString())}// You-Tube APIhttps://www.youtube.com/iframe_api//I've just added these lines, but still no luck.Security.loadPolicyFile("http://www.mydomain.com/crossdomain.xml");Security.loadPolicyFile("https://gdata.youtube.com/crossdomain.xml");Security.allowDomain("https://gdata.youtube.com");Security.allowDomain("gdata.youtube.com");Security.showSettings(SecurityPanel.LOCAL_STORAGE);//You need to specify a crossdomain.xml policy-file according to Adobe Flash security rules.1) Place the crossdomain.xml at the root directory of your website2) Example content (not recommended)    <?xml version="1.0"?>    <cross-domain-policy>       <allow-access-from domain="*" />    </cross-domain-policy>3) Load the policy-file into your project (AS3):System.security.loadPolicyFile("http://www.DOMAIN.net/crossdomain.xml");//Read the reference document for further information.//We managed to get it to work by including another tag:<site-control permitted-cross-domain-policies="master-only"/> // OR  <site-control permitted-cross-domain-policies="all"/>It seems that this tag is necessary in order to get it to work. We could not get it to work without that tag, no matter which port we tried.So the complete xml now looks like this in our case (it is of course easy to modify to fit any case):<?xml version="1.0"?><!DOCTYPE cross-domain-policy SYSTEM "/xml/dtds/cross-domain-policy.dtd"><cross-domain-policy>   <site-control permitted-cross-domain-policies="master-only"/>   <allow-access-from domain="*" to-ports="*"/></cross-domain-policy>It really is a shame that this line is not included in Adobe's own example (!!). I mean, it IS included in the example files, but not in the article. I don't want to know how many people were stuck at this stage because of that...