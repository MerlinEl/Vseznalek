		private function parseDataToXML():XML {						var xml:XML = new XML('<?xml version="1.0" encoding="UTF-8"?><PROFILES></PROFILES>');			for each (var item:Object in ComboBox(pressets_box).dataProvider.toArray()) {								var list:XMLList = itemToXMLList(item);				trace("XML group items LIST:"+list)				xml.appendChild(list);			}			return xml;		}				private function itemToXMLList(item:Object):XMLList 		{			var group:XML = new XML(item.data);			group.@name = item.label;			trace("itemToXMLList XML group:"+group)			//group.addChild()			//var xml_list:XMLList = null			return new XMLList(group.item);		}for (var i:uint=0; i<xmlList.item.length(); i++){     array.push({index:i, value:xmlList.item.@value});}array.sortOn("value");var firstItem:XML = xmlList.item[array[0].index];trace(firstItem.toXMLString());var orderArray:Array = new Array();var excludeArray:Array = new Array();for each (var item:XML in xmlList) {     if ("@value" in item) orderArray.push(item);     else excludeArray.push(item);}orderArray.sortOn("@value");var newList:XMLList = new XMLList();for each (var orderItem:XML in orderArray) newList += orderItem;for each (var excludeItem:XML in excludeArray) newList += excludeItem;trace(newList.toXMLString()) // your new ordered list// sample xmlvar data:XML = <content>                              <item name="B Value"/>                              <item name="D Value"/>                              <item title="No Name"/>                              <item name="A Value"/>                              <item name="C Value"/>                             </content>;// necessary parameters for sortingvar unsortedList:XMLList = data.item;var attrToSort:String = "name";var sortOptions:Object = Array.DESCENDING | Array.CASEINSENSITIVE;// sort the list and assign it to the original xml immediately.data.item = XMLUtility.sortByAttribute(unsortedList, attrToSort, sortOptions);trace(data.item.toXMLString()); // will trace out in this order "D Value, C Value, B Value, A Value, No Name (no name doesn't have a name attribute)