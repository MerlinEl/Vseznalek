//http://www.onebyonedesign.com/tutorials/array_methods///MAP//when: You want to create a new array from elements in a given array after performing a function on those items in the original array. function arrayToUpperCase(element:String, index:int, array:Array):String {	return (element.toUpperCase());}var _testArray:Array = new Array("one", "two", "three", "four");var newArray:Array = _testArray.map(arrayToUpperCase);trace (newArray);// traces ONE,TWO,THREE,FOURprivate function addSeven(element:Number, index:int, array:Array):Number {			return (element + 7);}private var _testArray:Array = new Array(1, 2, 3, 4);var newArray:Array = _testArray.map(addSeven);trace (newArray);// traces 8,9,10,11//CONCATvar numbers:Array = new Array(1, 2, 3);var letters:Array = new Array("a", "b", "c");var numbersAndLetters:Array = numbers.concat(letters);var lettersAndNumbers:Array = letters.concat(numbers);trace(numbers);       // 1,2,3trace(letters);       // a,b,ctrace(numbersAndLetters); // 1,2,3,a,b,ctrace(lettersAndNumbers); // a,b,c,1,2,3//FILTER://when: You want to create a new array from elements in a given array that match certain criteria. private function isBelowSeven(element:int, index:int, array:Array):Boolean {	return (element < 7);}private var _testArray:Array = new Array(5, 6, 7, 8, 9);var newArray:Array = _testArray.filter(isBelowSeven);trace (newArray);// traces 5,6ORprivate function isTestProperty(element:Object, index:int, array:Array):Boolean {	return (element.testProperty);}private var _testArray:Array = new Array({testProperty:true}, {testProperty:true}, {testProperty:false}, {testProperty:false});var newArray:Array = _testArray.filter(isTestProperty);trace (newArray.length);// traces 2//FOREACH://when: You want to call a particular method for each element in an array. private var _testArray:Array = new Array("one", "two", "three");	public function ArrayTest() {	_testArray.forEach(addCircle);}private function addCircle(element:String, index:int, array:Array):void {	var circle_mc:MovieClip = new MovieClip();	circle_mc.graphics.beginFill(0x660000);	circle_mc.graphics.drawCircle((index * 60) + 50, 60, 25);	circle_mc.graphics.endFill();	circle_mc.dynProperty = element;	circle_mc.buttonMode = true;	circle_mc.addEventListener(MouseEvent.CLICK, onClick);	addChild(circle_mc);}private function onClick(evt:MouseEvent):void {	trace (evt.target.dynProperty);}//EVERY/SOME://when: You want to determine if every (Array.every()) or at least one (Array.some()) element in an array meets certain criteria. private var _testArray:Array = new Array(5, 6, 7, 8, 9);				public function ArrayTest() {						// traces FALSE			trace (_testArray.every(isBelowSeven));					}				private function isBelowSeven(element:int, index:int, array:Array):Boolean {			return (element < 7);		}ORprivate var _testArray:Array = new Array(5, 6, 7, 8, 9);				public function ArrayTest() {						// traces TRUE			trace (_testArray.some(isBelowSeven));					}				private function isBelowSeven(element:int, index:int, array:Array):Boolean {			return (element < 7);		}