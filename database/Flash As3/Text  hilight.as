		//highlightTextBetweenRanges(i_console, ["období od",  "do", "Přejete"]);		public static function highlightTextBetweenRanges(field:TextField, ranges:Array):void{				var tf:TextFormat = field.getTextFormat(0,1);// get the Textformat of the first character				tf.color = 0xFF3366; //0xFF0000				tf.bold = true;				tf.size = 16;					var txt = field.text;			var start_pos:int = 0;			var next_pos:int = 0;			var output = ""						for (var i=0; i<ranges.length-1; i++){ //["období od",  "do", "Přejete"]								var str_a = ranges[i];				var str_b = ranges[i+1];							start_pos = txt.indexOf(str_a, start_pos);				start_pos = start_pos+str_a.length;				next_pos   = txt.indexOf(str_b, start_pos);				field.setTextFormat(tf, start_pos, next_pos);				output += "\nword a:"+str_a+", end at:["+start_pos+"]"				output += "\nword b:"+str_b+", begin at:["+next_pos+"]"			}			if (debug) field.appendText(output);		};package  {    import flash.text.*;    public class StringUtils {        public function StringUtils() {}        public static function highlight(block:TextField, search:String, appliedFormat:TextFormat) {            var positions:Array = getPositions(block.text, search);            var len:uint = positions.length;            for(var i:int = 0; i<len; i++){                block.setTextFormat(appliedFormat, positions[i].posStart, positions[i].posEnd);            }        }        public static function getPositions(original:String, search:String):Array {            var positions:Array = [];            var startPosition:Number;            var endPosition:Number;            while (startPosition != -1) {                startPosition = original.indexOf(search, endPosition);                endPosition = startPosition + search.length;                if(startPosition > -1) positions.push({posStart:startPosition, posEnd:endPosition});            }            return positions;        }    }}import StringUtils;import flash.text.TextFormat;var tf:TextFormat = new TextFormat();tf.color = 0xFF0000;StringUtils.highlight(txt, "check", tf);// ORhighlightTextInRanges(cage, ns_rules.focus_color, card.data.begin, card.data.end);		public static function highlightTextInRanges(field:TextField, clr:uint, from:int, to:int):void{				var tf:TextFormat = field.getTextFormat(0,1);// get the Textformat of the first character				tf.color = clr;			field.setTextFormat(tf, from, to);		}