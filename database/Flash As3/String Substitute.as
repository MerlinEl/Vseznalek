		public static function substitute(str:String, ... rest):String {			// Replace all of the parameters in the msg string.			var len:uint = rest.length;			var args:Array;			if (len == 1 && rest[0] is Array)			{				args = rest[0] as Array;				len = args.length;			}			else			{				args = rest;			}						for (var i:int = 0; i < len; i++)			{				str = str.replace(new RegExp("\\{"+i+"\\}", "g"), args[i]);			}			return str;		}var str:String = "here is some info '{0}' and {1}";trace(mcString.substitute(str, 15.4, true));var str2:String = "One {0} consists of {1} consecutive {2}";trace( mcString.substitute(str2, {n:1, t:2}, 546.5, "myString"));		public static function substitute(string:String, substituteData:Object):String {						for (var key:String in substituteData)			{				var keyValue:String=substituteData[key];				var lastString:String;				// Replace all occurences				do				{					lastString=string;					string=string.replace("%<"+key+">", keyValue);				}				while (lastString!=string);					}			return string;		}var stringFormat:String ="%<firstName> %<lastName> has scored %<score>."var substituteData:Object={firstName: "John", lastName: "Doe", score: 400};// Produces: John Doe has scored 400.var newString2:String = mcString.substitute(stringFormat, substituteData);trace(newString2);