You can access the path of this shape by reading the result fromShape.graphics.readGraphicsData()bgSound = new Sound(this);bgSound.attachSound("sound1");bgSound.start(0, 99);playB.enabled=false;slider.slideBar._y = -50;slider.slideBar.onEnterFrame = function() {        bgSound.setVolume(0-this._y);};slider.slideBar.onPress = function() {        startDrag(this, false, this._x, -65, this._x, 0);};slider.slideBar.onRelease = slider.slideBar.onReleaseOutside=function () {        stopDrag();};stopB.onRelease = function() {        bgSound.stop();        playB.enabled=true;        stopB.enabled=false;};playB.onRelease = function() {        bgSound.start(0, 99);        playB.enabled=false;        stopB.enabled=true;};stop();var anchor1:Point = new Point(50,50);var anchor2:Point = new Point(120,50);var control1:Point = new Point(50, 100);var control2:Point = new Point(150, 100);var line:Shape = new Shape();line.graphics.lineStyle(2,0x000000);line.graphics.moveTo(anchor1.x,anchor1.y); var posx:Number;var posy:Number; for (var u:Number = 0; u <= 1; u += 1/100) {    posx = Math.pow(u,3)*(anchor2.x+3*(control1.x-control2.x)-anchor1.x)    +3*Math.pow(u,2)*(anchor1.x-2*control1.x+control2.x)    +3*u*(control1.x-anchor1.x)+anchor1.x;         posy = Math.pow(u,3)*(anchor2.y+3*(control1.y-control2.y)-anchor1.y)    +3*Math.pow(u,2)*(anchor1.y-2*control1.y+control2.y)    +3*u*(control1.y-anchor1.y)+anchor1.y;        line.graphics.lineTo(posx,posy); //maybe store these points to move the MC along}line.graphics.lineTo(anchor2.x,anchor2.y);addChild(line);// Daniel K. Schneider - TECFA - sept 2007// Copyright: See http://edutechwiki.unige.ch/en/ var dict = new Dictionary (); // =================== START USER Config =====================// Insert as many "dict[text_box] = movie;" statements you like//  Replace: text_box by the name of a matching dynamic text_box//           movie by the name of movie instances users can move around. dict[box_c] = cat;dict[box_d] = dog;dict[box_r] = rocket;dict[box_b] = bat;dict[box_a] = apple; // Do NOT change/delete any other line. Also make sure to respect// the syntax, e.g. dont forget the ";" at the end of each line.// ===================== END USER Config ====================  // Sound// should I preload this somehow ? var request:URLRequest = new URLRequest("applause_3.mp3");var applause:Sound = new Sound();applause.load(request); var request2:URLRequest = new URLRequest("music.mp3");var music:Sound = new Sound();music.load(request2); var request3:URLRequest = new URLRequest("baby_laugh.mp3");var laugh:Sound = new Sound();laugh.load(request3); // Drag and match codevar hits = 0; // counts succesful hitsvar max = 0;  // used to compute dictionary length var ori_x;var ori_y; // For each item in the dictionary we add event listeners// "for each" will loop through the values ... not the keys for each (var item in dict){	item.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);	item.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);	max = max + 1;	item.buttonMode = true;}  // Define a mouse down handler (user is dragging)function mouseDownHandler(evt:MouseEvent):void {	var object = evt.target;	ori_x = object.x	ori_y = object.y	object.useHandCursor = true;	object.startDrag();} function mouseUpHandler(evt:MouseEvent):void {	//stop all sounds	SoundMixer.stopAll();	var obj = evt.target;	// obj.dropTarget will give us the reference to the shape of	// the object over which we dropped the circle.	var target = obj.dropTarget;	// If the target object exists the we ask the test_match function	// to compare moved obj and target where it was dropped.	if (target != null)	{		test_match(target, obj);	}	obj.stopDrag();}  function test_match(target,obj) {	// test if the pairs match	if (dict[target] == obj)	{		// we got a hit		hits = hits+1;		textField.text = "Yes ! You got one !";		applause.play();		// make the object transparent		obj.alpha = 0.5;		// kill its event listeners - object can't be moved anymore		obj.removeEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);		obj.removeEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);		// Test if we are done		if (hits == max)		{			textField.text = "Made it !!";			music.play(0,5);		}	}	else	{		obj.x = ori_x;		obj.y = ori_y;		textField.text = "Missed :(";		laugh.play();	}}