ackage{    import flash.events.Event;    import flash.events.MouseEvent;    import flash.events.FocusEvent;    import flash.display.Sprite;    import flash.display.Stage;    public class Message    {        private static var overlay : Sprite;        private static var dialog : Sprite;        public static function show(stage : Stage, message : String)        {            // Close existing (if any).            close();            // Create dialog. They overlay sprite overlays the entire scene.            overlay = createOverlay();            dialog = createDialog(message);            overlay.addChild(dialog);            stage.addChild(overlay);            // steal focus            stage.focus = overlay;            // Make sure the ugly yellow focus rectangle is hidden. Hiding it seems            // to have one additional benefit. If we don’t do it, one can still             // change the focus using left and right arrow keys. The focus rectangle            // actually moves to another element in the scene (first time I saw            // something like this in Flash). If we hide it, the left and right arrow            // keys actually don’t do anything. I did not find any documentation            // related to this. So it may change in future. But if it changes,            // possible workaround could be to simply catch the keyboard events            // and prevent propagation. Such approach is also used in the official            // AS3 documentation of the FocusEvent class:            //             //   http://livedocs.adobe.com/            //       flash/9.0/ActionScriptLangRefV3/flash/events/FocusEvent.html            //            stage.stageFocusRect = false;            // Even though the message overlays the entire stage, if you click            // on it, it loses focus. My guess is that Flash does not find            // anything obvious which can be focused (such as a textbox). The            // following below forces Flash to keep the focus on the message.            // This approach is also used in an example in the AS3 documentation,            // of the of the FocusEvent class (see the link above) so it gives it            // some credibility.            overlay.addEventListener(MouseEvent.CLICK,                function(event : MouseEvent) : void { stage.focus = overlay; });            // In addition, when the entire Flash loses focus and it gets it later             // back, the container (browser) does not restore the previously focused            // element. So we have to do it ourselves.            stage.addEventListener(Event.ACTIVATE,                function(event : Event) : void { stage.focus = overlay; });            // And apparently, swallow all keyboard events.            overlay.addEventListener(KeyboardEvent.KEY_DOWN,                function(event : KeyboardEvent) : void { event.stopPropagation(); });        }        public static function close() : void        {            // snip ...        }        private static function createOverlay() : Sprite        {            // snip ...        }        private static function createDialog(message : String) : Sprite        {            // snip ...        }    }}