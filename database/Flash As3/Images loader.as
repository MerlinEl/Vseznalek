import ro.sorin.utils.TextLoader;//handles the load of the xml filevar xmlLoader:TextLoader;var xml:XML;var xmlList:XMLList;var urlList:Array = [];//keeps track of the number of images loadedvar counter:uint = 0;var urlRequest:URLRequest;var loader:Loader = new Loader();var bitmap:Bitmap;var img:Sprite;var totalImages:uint;var imgList:Array = [];function init():void{xmlLoader = new TextLoader("assets/xml/images.xml");xmlLoader.addEventListener(Event.COMPLETE, onComplete, false, 0, true);}function onComplete(event:Event):void{	xmlLoader.removeEventListener(Event.COMPLETE, onComplete)	xml = XML(event.target.content);	xmlList = xml.children();	xmlLoader = null;	for(var i:int=0;i<xmlList.length();i++){	urlList.push(xmlList[i].@url);	}	totalImages = xmlList.length();	loadImage();}function loadImage():void{	urlRequest = new URLRequest(urlList[counter]);	loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onProgress, false, 0 ,true);	loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderOnComplete, false, 0 ,true);	loader.load(urlRequest);}function onProgress(event:ProgressEvent):void{	var percent:Number = event.bytesLoaded/event.bytesTotal *100;	preloader.text = "Loading: " + (Math.ceil(percent)).toString() + " % " + " of " + (counter+1).toString() + " / " + totalImages.toString();}function loaderOnComplete(event:Event):void{	loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, onProgress);	loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onComplete);	bitmap = Bitmap(event.target.content);	img = new Sprite();	img.addChild(bitmap);	imgList.push(img);	loader.unload();	counter++;	if(counter <= totalImages - 1){		loadImage();	}else{		loader = null;		urlList = null;		showImages();	}}function showImages():void{	for(var i:uint = 0; i<imgList.length;i++){	imgList[i].x = i*25;	addChild(imgList[i]);	}}init(); 