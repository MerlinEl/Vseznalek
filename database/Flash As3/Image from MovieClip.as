// myMovieClip. pivot is at 0,0 < important else is blank  (maybe with rect offset will be ok at center)var bitmapData:BitmapData = new BitmapData(myMovieClip.width, myMovieClip.height);bitmapData.draw(myMovieClip);// And to actually see it var bitmap:Bitmap = new Bitmap(bitmapData);this.addChild(bitmap);-or-var myMatrix:Matrix = myDisplayObject.transform.matrix;  myMatrix.scale(1,-1); myDisplayObject.transform.matrix = myMatrix;  var bitmapData:BitmapData = new BitmapData( box1.width, box1.height, true, 0xFFFFFF);bitmapData.draw(box1, myMatrix, null, null, null, true);-or-private function getImageTile(bd_source:BitmapData, w:Number, h:Number, pos:Point):Sprite {		//get section from image bdata	var bd_target = new BitmapData(w, h, false, 0x000000FF);	var rect:Rectangle = new Rectangle(pos.x, pos.y, w, h);	bd_target.copyPixels(bd_source, rect, new Point(0, 0));	var tile:Sprite = new Sprite();	tile.addChild(new Bitmap(bd_target));	return tile;		/*var bmpData:BitmapData = new BitmapData(w,h);// a new 10x10 image	var rect:Rectangle = new Rectangle(pos.x,pos.y,w,h);	bmpData.draw(bd_source,null,null,null,rect);	var tile:Sprite = new Sprite();	tile.addChild(new Bitmap(bmpData));	return tile;*/		/*var bd_target:BitmapData = new BitmapData(w, h);// a new [w,h] image	var matrix:Matrix = new Matrix();	matrix.translate(-pos.x, -pos.y);	var rect:Rectangle = new Rectangle(pos.x, pos.y, w, h);	bd_target.draw(bd_source, matrix, null, null, rect);	var tile:Sprite = new Sprite();	tile.addChild(new Bitmap(bd_target));	return tile;*/}import a3d.materials.BitmapDataUtils;import flash.display.Bitmap;import flash.events.Event;import flash.geom.Point;var bd:BitmapDatavar bmd:BitmapDatavar bmd1:BitmapDatavar bmd2:BitmapDatavar bm:Bitmap;var bm1:Bitmap;var bm2:Bitmap;var pt:Point;var rect:Rectangle;// clone mc image (mc pivot is at 0,0 < important else is blank)//ctrace("mc:{0} w:{1} h:{2}", image_02, image_02.width, image_02.height)bd = new BitmapData(image_02.width, image_02.height);bd.draw(image_02);bm = new Bitmap(bd);// And to actually see it bm.x = image_02.x + image_02.width + 20;bm.y = image_02.y;this.addChild(bm);// blur filterbmd = new BitmapData(80, 30, false, 0xFFCC00);rect = new Rectangle(10, 10, 40, 10);bmd.fillRect(rect, 0xFF0000);pt = new Point(10, 10);var filter:BlurFilter = new BlurFilter();bmd.applyFilter(bmd, rect, pt, filter);bm = new Bitmap(bmd);addChild(bm);// copy pixels regionbmd1 = new BitmapData(40, 40, false, 0x000000FF);bmd2 = new BitmapData(80, 40, false, 0x0000CC44);rect = new Rectangle(0, 0, 20, 20);pt = new Point(10, 10);bmd2.copyPixels(bmd1, rect, pt);bm1 = new Bitmap(bmd1);bm1.x = 100;this.addChild(bm1);bm2 = new Bitmap(bmd2);bm2.x = 100;this.addChild(bm2);bm2.x = 150;// black white filterbd = BitmapDataUtils.snapshotBitmapData(image_01);BitmapDataUtils.monochrome(bd);bm = new Bitmap(bd);bm.x = image_02.x + image_01.width + 20;bm.y = image_01.yaddChild(bm);