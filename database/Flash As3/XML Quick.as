var xml:XML = <htmltext> <![CDATA[  <head>  <TITLE>Title of the HTML</TITLE>  <script src='somescript.js'></script>  <script>   function foo(){    return 'foo';   }  </script>  </head>  <Body>   <IMG src='some.jpg' width='200'/>   <p>Here goes some text</p>   <p>Here goes some more text with linebreaks<br/>And evem malformated linebreaks<br>Yes.</p>   <p>And here we have one paragraph wrapping<p>another paragraph</p>See if it works</p>   <div align='left'>just checking</div>   Oh, and BTW, here is the list tag:<list>   <li>1. Option</li>   <li>2. Option</li>   <li>3. Option</li>   </list>  </bodY> ]]></htmltext>;var reTagsToLowercase:RegExp = /<.{1,}?>/g;var reUselessTags:RegExp = /(<.{0,1}body|<img|<.{0,1}div|<.{0,1}list).{0,}?>/g;var reRemoveWhite:RegExp = /\r|\n|\t/g;var reRemoveScript:RegExp = /<script.{0,}?<\/script>/g;var getHeadTitle:RegExp = /<title>.{0,}?<\/title>/g;var getBody:RegExp = /<body.{0,}?>.{0,}?<\/body>/g;var reList:RegExp = /<li.{0,}?>/g;var reListParagraphStart:RegExp = /<(li|p).{0,}?>/g;var reListParagraphEnd:RegExp =  /<(\/li|\/p).{0,}?>/g;var reBreak:RegExp = /<br.{0,}?>/g;var reDoubleLineBreak:RegExp = /\r+/g;var reOpenLineBreak:RegExp = /^\r/g;var resStr:String = String(xml.text()).replace(reRemoveWhite,'');var tags:Array = resStr.match(reTagsToLowercase);resStr = resStr.replace(reTagsToLowercase,'<replace>');var contentTags:Array = resStr.split('<replace>');contentTags.shift();var i:int=0;var l:int = tags.length-1;resStr = tags[0].toLowerCase();for(i;i<l;i++){ resStr+=contentTags[i]+tags[i+1].toLowerCase();}var headSubstring:String = resStr.match(getHeadTitle)[0];headSubstring = headSubstring.slice(7,headSubstring.length-8);resStr = headSubstring + '<br/>' + resStr.match(getBody)[0];resStr = resStr.replace(reUselessTags,'\r');resStr = resStr.replace(reRemoveScript,'\r');resStr = resStr.replace(reList, '\t');resStr = resStr.replace(reListParagraphStart,'\r');resStr = resStr.replace(reListParagraphEnd,'\r');resStr = resStr.replace(reBreak,'\r');resStr = resStr.replace(reDoubleLineBreak,'\r');resStr = resStr.replace(reOpenLineBreak,'');trace(resStr);