//https://labs.phaser.io/edit.htmlvar config = {    type: Phaser.WEBGL,    width: 800,    height: 600,    backgroundColor: '#000',    parent: 'phaser-example',    scene: {        preload: preload,        create: create,        update:update    }};var game = new Phaser.Game(config);var particles;var emitter;var margin = 80;var deathZone;function preload (){    this.load.atlas('flares', 'assets/particles/flares.png', 'assets/particles/flares.json');}function create (){    deathZone = new Phaser.Geom.Rectangle(margin/2, margin/2, config.width - margin, config.height - margin);        // visualise safe bounds    var r1 = this.add.rectangle(deathZone.x + deathZone.width / 2, deathZone.y + deathZone.height / 2, deathZone.width, deathZone.height);    r1.setStrokeStyle(2, 0x1a65ac);        particles = this.add.particles('flares');    launchFirework();}function update(){    if (emitter && emitter.y.counter < margin*1.5) {        emitter.stop();        launchFirework();    }}function launchFirework(){    var randomColor = ['red', 'green', 'blue', 'white', 'yellow'][Phaser.Math.Between(0, 4)];    var randomOffsetX = Phaser.Math.Between(margin/2, config.width - margin);    emitter = particles.createEmitter({        frame: randomColor,        radial: false,        x: randomOffsetX,        y: { start: config.height - margin, end: margin, steps: 120 },        lifespan: 1200,        speedX: { min: -40, max: 40 }, // tail thickness        speedY: { min: 200, max: 500 },        quantity: 2,        gravity: 200,        scale: { start: 0.3, end: 0, ease: 'Linear' },        alpha: { start: 1, end: 0},        blendMode: 'ADD',        deathZone: { type: 'onLeave', source: deathZone }    });}