public void CreateMenuItem() {            var toolsMenu = ( ToolStripMenuItem )PluginBase.MainForm.FindMenuItem("ToolsMenu");            // insert new item to existing submenu            foreach ( var itm in toolsMenu.DropDownItems ) {                if ( itm is ToolStripMenuItem ) {                    var flashToolsSubMenu = ( itm as ToolStripMenuItem );                    flashToolsSubMenu.DropDownItems.Add(new ToolStripSeparator());                    if ( flashToolsSubMenu.Name == "FlashToolsMenu" ) {                        var subItem1Label = LocaleHelper.GetString("Label.ViewMenuItem");                        var newSubItem1 = new ToolStripMenuItem(subItem1Label, pluginImage, new EventHandler(DoTraceRemove));                        flashToolsSubMenu.DropDownItems.Add(newSubItem1);                    }                }            }                 // create new submenu with an clickable item            ToolStripMenuItem newSubMenu = new ToolStripMenuItem("Orien Tools");            var newSubItem2 = new ToolStripMenuItem("Update Project SWF", pluginImage, new EventHandler(DoTest));            newSubMenu.DropDownItems.Add(newSubItem2);            toolsMenu.DropDownItems.Add(newSubMenu);            newSubMenu.DropDownItems.Add(new ToolStripSeparator());        }        public void DoTest(Object sender, EventArgs e) {                        IProject project = PluginBase.CurrentProject;            if ( project == null ) {                MessageBox.Show("There's no open project", "No project", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);                return;            }            MessageBox.Show("Project Name:"+project.Name, "Project", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);        }ANDcase EventType.Command:   DataEvent evt = (DataEvent)e;   TraceManager.Add(evt.Action);                  if(evt.Action == ProjectManagerEvents.TreeSelectionChanged)   {      ...   }ANDprivate void CreateSubMenu(string text)        {            ToolStripMenuItem ToolStrip = new ToolStripMenuItem(text);            ToolStrip.Text = text;            ToolStrip.Click += new EventHandler(Item_Click);            ToolStrip.CheckOnClick = true;            showNoteToolStripMenuItem.DropDown.Items.Add(newnote); //showNoteToolStripMenuItem is Main ToolStripANDprivate void BuildMenuItems()        {            this.menuStrip1.Items.Clear();            for (int i = 0; i < level1.Length; i++)            {                items[i] = new ToolStripMenuItem();                items[i].Name = level1[i];                items[i].Tag = "box" + i.ToString();                 items[i].Text = level1[i];                items[i].Click += new EventHandler(MenuItemClickHandler);                Console.WriteLine(items[i].Tag + " -  " + items[i].Text);             }            ApplySubItems(masters, "2", 0);               this.menuStrip1.Items.AddRange(this.items);//-----create the top headers NOTE this has to be the order they are added                   }        private void ApplySubItems(string[] level, string strTag, int intBox)        {            ToolStripMenuItem[] subitems = new ToolStripMenuItem[level.length];            for (int i = 0; i < level.Length; i++)            {                subitems[i] = new ToolStripMenuItem();                subitems[i].Name = level[i];                subitems[i].Tag = strTag;                subitems[i].Text = level[i];                subitems[i].Click += new EventHandler(Sub_MenuItemClickHandler);                Console.WriteLine(subitems[i].Tag + "   " + subitems[i].Text +" ..... "+intBox .ToString ());            }            this.items[intBox].DropDownItems.AddRange(subitems);        }}