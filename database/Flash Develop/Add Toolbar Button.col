--------------------------------------------------Run App from Tools in Total Commander root folder--------------------------------------------------Command:\Tools\Ultra_TC_Editors\Button Bar Editor.exeParameters:Start path:%COMMANDER_PATH%Icon File:\Tools\Ultra_TC_Editors\Button Bar Editor.exeTooltip:Toolbar Editor--------------------------------------------------other examples--------------------------------------------------Command: cmd /kParameters: ""%%PROGRAMFILES%%\!Tools\WSCC\SysInternals Suite\sigcheck.exe" %P%N"That is: " " % %PROGRAMFILES% % \!Tools\WSCC\SysInternals Suite\sigcheck.exe " %P%N "--------------------------------------------------Command=cmd /cParameters=Start "" "%%Commander_Path%%\Tools\Notepad2.exe" %P%N--------------------------------------------------Command    = cm_CopyNamesToClipParameters = Start path = Icon file  = WCMICONS.DLLTooltip    = Copy filenames to clipboard--------------------------------------------------Command    = cmd /cParameters = FOR /F "tokens=*" %%a in ('type "%L"') DO call C:\temp\tc-test.cmd "%%a"Start path = Icon file  = C:\Windows\system32\cmd.exeTooltip    = ForEachFile Do call tc-test.cmd--------------------------------------------------Command    = "%Commander_Path%\TOOLs\IrfanView\i_view32.exe"Parameters = "%P" /thumbs /ini="%Commander_Path%\TOOLs\IrfanView\INI-Thumbs500"Start path = Icon file  = "%Commander_Path%\TOOLs\IrfanView\i_view32.exe"Tooltip    = Launch i_view32 with "/THUMBs 500x500"--------------------------------------------------Command    = "%Commander_Path%\Tests\xxx"Parameters = "%WL"Start path = Icon file  = WCMICONS.DLLTooltip    = Denotation|Description|Explanation--------------------------------------------------Powershell -Example-------------------------------------------------- Cmd=Powershell  Param="%L"# // The script# // Check arguments:If ($Args.Count -eq 0) { "Please use '%L' as TCs parameter. Also select one or more files first. Script quits here."; return}# //DEBUG:# Notepad $Args[0]# //Do the WORK: TYPE $Args[0] | ForEach{ ...}--------------------------------------------------VBS-Example--------------------------------------------------sTCtempList = Wscript.arguments.Item(0) ' The TC temp file due the "%L"  If  FSO.FileExists(sTCtempList) Then      WSO.run "notepad " & sTCtempList      Set oTextStream = FSO.OpenTextFile(sTCtempList,FORREADING)      Do Until oTextStream.AtEndOfStream      ...      Loop      oTextStream.Close   Else      WScript.Echo "Input file  sTCtempList  not found."   End If--------------------------------------------------AHK-Example--------------------------------------------------vTCtempfile=%1%Loop, Read, %vTCtempfile%{    vCurrTempFileLine = %A_LoopReadLine%    MsgBox Curr line is:`n%vCurrTempFileLine%}--------------------------------------------------MS-DOS Batch Example--------------------------------------------------@echo offsetlocal enabledelayedexpansionrem Button Command: cmd /krem Button Parameters: "%F" "%P" "%T"set tc_lst=%1set tc_src=%2set tc_dst=%3if -%3==- echo First parameter must be filelist path, second and third - source and target path. && pause && goto :EOFfor /F "usebackq delims=" %%I in (%tc_lst%) do (   rem ============== Insert your custom commands here ==============   echo Exp:       %%~I   echo Full Path:   %%~fI   echo LW:      %%~dI   echo Path:      %%~pI   echo File Name:   %%~nI   echo Extension:   %%~xI   echo ShortPath:   %%~sI   echo Attrb:      %%~aI   echo Date Time:   %%~tI   echo Size:      %%~zI   echo ----------------------------   rem ==============================================================)pauseclsendlocal--------------------------------------------------restartcommander--------------------------------------------------    I think, this would work better:    Code: Select all    [em_ext_restartcommander]    cmd=cm_ConfigSaveSettings,cm_ConfigSaveDirHistory,cm_ConfigSavePos,cm_Exit,CM_WAIT 1,em_ext_newcommander    button=%COMMANDER_EXE%    menu=Genstart Total CommanderOnly if you want the settings saved, including open tabs etc. I prefer to have my TC opening the same way every time I start it, hence I have disabled "Operation" -> "Save on exit" -> "Directories" and "Panels (brief/full, etc.)" and "Directory history"BTW you could change it to:Code: Select allcmd=cm_ConfigSaveSettings,cm_Exit,CM_WAIT 1,em_ext_newcommanderBecause cm_ConfigSaveSettings also performs cm_ConfigSaveDirHistory and cm_ConfigSavePosIf I use yours:Code: Select allcmd=cm_Exit,CM_WAIT 1,em_ext_newcommanderin stead of my current:Code: Select allcmd=em_ext_newcommander,cm_ExitI get the benefit that the session number of TC doesn't shift, but for some reason em_ext_newcommander doesn't place the cursor on the currently selected files after restart - as it does with my approach - so I will stick to my way for now.--------------------------------------------------%COMMANDER_PATH%%COMMANDER_DRIVE%