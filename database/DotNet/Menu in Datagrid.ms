fn rcMenuHandler sender args = (			--format "lbxMatLib rcMenuHandler > val:%  text:%\n" sender.tag.value  sender.text		case sender.text of (					"Edit": (							local app_pos = getDialogPos ::gLS3D_MaterialLibraryDesignerUI				local app_size = getDialogSize ::gLS3D_MaterialLibraryDesignerUI				local dia_size = getDialogSize rXmlMatSettings				local app_center_pos = [					app_pos.x + (app_size.x / 2)  - (dia_size.x / 2), 					app_pos.y + (app_size.y / 2)  - (dia_size.y / 2) \				]								CreateDialog rXmlMatSettings pos:app_center_pos				rXmlMatSettings.loadDataFromXML sender.tag.value			)			"Delete": (							if QueryBox ("You Are Sure to Delete Material ( " + sender.tag.value + " )") title:"Delete" do 				(					format "TODO... delete item from libraty and xml ( if found )\n"				)			)		)	)		fn onMatLibCellClick sender args = (				if args.button == args.button.right do(					local row = sender.Item args.columnIndex args.RowIndex			sender.clearSelection()			row.Selected = true					--format "lbxMatLib CellMouseClick > s:% a:%\n" sender args			local cmsMenu = dotNetObject "System.Windows.Forms.ContextMenuStrip"						local itemsArr = #("Edit", "Delete")			for i = 1 to itemsArr.count do			(				local itm = dotNetObject "System.Windows.Forms.ToolStripMenuItem" itemsArr[i]				itm.tag = row --add DataGridViewTextBoxCell item here				cmsMenu.Items.Add(itm)				dotnet.addEventHandler cmsMenu.Items.item[i-1] "Click" rcMenuHandler			)			local cursor = dotnetclass "System.Windows.Forms.Cursor"			local mPt = cursor.Position			cmsMenu.Show mPt.x (mPt.y+5)					)	)on lbxMatLib CellMouseClick sender args do (onMatLibCellClick sender args)