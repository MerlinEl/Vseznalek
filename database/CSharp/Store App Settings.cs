https://stackoverflow.com/questions/453161/how-can-i-save-application-settings-in-a-windows-forms-applicationhttps://stackoverflow.com/questions/1766610/how-to-store-int-array-in-application-settingsRight click on the project in Solution Explorer and choose Properties. Select the Settings tab and click on the hyperlink if settings doesn't exist.Use the Settings tab to create application settings. Visual Studio creates the files Settings.settings and Settings.Designer.settings that contain the singleton class Settings inherited from ApplicationSettingsBase. You can access this class from your code to read/write application settings:Properties.Settings.Default["SomeProperty"] = "Some Value";Properties.Settings.Default.Save(); // Saves settings in application configuration fileto store Array:string value = String.Join(",", intArray.Select(i => i.ToString()).ToArray());to re-create:int[] arr = value.Split(',').Select(s => Int32.Parse(s)).ToArray();Example        private void LoadSettings() {            // load checked items in book list            string[] checked_items = Properties.Settings.Default.CheckedItems.Split('|');            Console.WriteLine("LoadSettings > checked_items:{0}", String.Join(", ", checked_items));            foreach (string index_str in checked_items ) {                                if ( !Regex.IsMatch(index_str, @"\d") ) continue;                int index = Int32.Parse(index_str);                Lv_book_list.Items[index].Checked = true;                ListViewUtils.MarkItem(Lv_book_list.Items[index], "done");            }        }        private void SaveSetings() {                        // save checked items in book list            string[] checked_items = Lv_book_list.CheckedItems.Cast<ListViewItem>().Select(itm => itm.Index.ToString()).ToArray();            Console.WriteLine("SaveSetings > checked_items:{0}", String.Join(", ", checked_items));            Properties.Settings.Default.CheckedItems = String.Join("|", checked_items);            Properties.Settings.Default.Save();        }orlook at book updater