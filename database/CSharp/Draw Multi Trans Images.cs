using System;using System.ComponentModel;using System.Drawing;using System.Windows.Forms;namespace IUcManazer {    public partial class TitlePanel:Panel {        private const int WS_EX_TRANSPARENT = 0x20;        private int opacity = 50;        private readonly int OffsetX = 10;        private readonly int OffsetY = 4;        public TitlePanel() {            InitializeComponent();            SetStyle(ControlStyles.Opaque, true);        }        [DefaultValue(50)]        public int Opacity {            get {                return this.opacity;            }            set {                if ( value < 0 || value > 100 )                    throw new ArgumentException("value must be between0 and 100");                this.opacity = value;            }        }        protected override CreateParams CreateParams {            get {                CreateParams cpar = base.CreateParams;                cpar.ExStyle |= WS_EX_TRANSPARENT;                return cpar;            }        }        protected override void OnPaint(PaintEventArgs e) {            using (                var brush = new SolidBrush(                    Color.FromArgb(                        this.opacity * 255 / 100,                        this.BackColor                ))            ) {                e.Graphics.FillRectangle(brush, this.ClientRectangle);            }            base.OnPaint(e);            //If added your image in project's resources            Image img_bg = Properties.Resources.TitleBg;            Image img_logo = Utils.ResizeBitmapProportionally(Properties.Resources.logo_2020, Width, Height - OffsetY*4);            Image img_dolphins = Utils.ResizeBitmapProportionally(Properties.Resources.dolphins, Width, Height - OffsetY*4);            e.Graphics.DrawImage(img_bg, OffsetX, OffsetY, Width - OffsetX*2, Height - OffsetY*2);            e.Graphics.DrawImage(img_logo, Width - img_logo.Width - OffsetX, OffsetY*2, img_logo.Width, img_logo.Height);            e.Graphics.DrawImage(img_dolphins, (int)(Width*0.23), OffsetY*2, img_dolphins.Width, img_dolphins.Height);        }    }}