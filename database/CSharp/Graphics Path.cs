        private GraphicsPath GetRectanglePath(Rectangle bounds) {            GraphicsPath path = new GraphicsPath();            path.AddRectangle(bounds);            return path;        }        private GraphicsPath GetRoundedPath(Rectangle bounds, int radiusTL, int radiusTR, int radiusBL, int radiusBR) {            GraphicsPath path = new GraphicsPath();            float curveSizeTL = radiusTL * 2F;            float curveSizeTR = radiusTR * 2F;            float curveSizeBL = radiusBL * 2F;            float curveSizeBR = radiusBR * 2F;            path.StartFigure();            path.AddArc(bounds.Left, bounds.Y, curveSizeTL, curveSizeTL, 180, 90);            path.AddArc(bounds.Right - curveSizeTR, bounds.Y, curveSizeTR, curveSizeTR, 270, 90);            path.AddArc(bounds.Right - curveSizeBR, bounds.Bottom - curveSizeBR, curveSizeBR, curveSizeBR, 0, 90);            path.AddArc(bounds.Left, bounds.Bottom - curveSizeBL, curveSizeBL, curveSizeBL, 90, 90);            path.CloseFigure();            return path;        }           // Draw background and border            using (var path = GetRoundedPath(ClientRectangle, RadiusTL, RadiusTR, RadiusBL, RadiusBR)) {                Region = new Region(path);                if (BorderSize > 0) {                     using (Pen pen = new Pen(BorderColor, BorderSize)) {                        if (BackgroundBorderStyle != DashStyle.Solid) {                            pen.DashStyle = BackgroundBorderStyle;                        }                        g.DrawPath(pen, path);                    }                }            }