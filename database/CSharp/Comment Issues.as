https://www.pluralsight.com/guides/using-code-example-tags-csharp-xml-documentation-comments      /// <summary>usage: Check if Object is Editable Poly or Editable Mesh</summary>        /// <example>         /// <code>example: if ( !node.IsEditable() ) return; </code>        /// <param name="baseObject">TODO check base of object (allow modifiers)</param>        /// <param name="modPolyOrMesh">TODO check modifier of object (editable_poy and editable_mesh modifiers)</param>        ///	</example>        /// <summary>usage: Check if Object is Editable Poly or Editable Mesh        /// <example>         /// <code>example: if ( !node.IsEditable() ) return; </code>        /// <list type="bullet">        /// <item><param name="baseObject">TODO check base of object (allow modifiers)</param></item>        /// <item name="modPolyOrMesh">TODO check modifier of object (editable_poy and editable_mesh modifiers)</item>        ///	</list>        ///	</example></summary>        /// <param name="baseObject">TODO check base of object (allow modifiers)</param>        /// <param name="modPolyOrMesh">TODO check modifier of object (editable_poy and editable_mesh modifiers)</param>        /// </example>        /// </summary>        ///<summary>Credit account with amount passed as parameter</summary>        ///<example>After class initialisation, call this method:        ///<code>        ///var account = new Account(10, 2000);        ///account.Credit(5000);        ///</code>        ///</example>/// <summary>/// Searches and returns the book identified by the specified ISBN./// </summary>/// <param name="isbn">The <see cref="System.String"/> instance that represents the ISBN of the book to search for.</param>/// <returns>An instance of the <see cref="Book"/> class representing the element with the specified ISBN, if found; otherwise, <c>null</c>.</returns>/// <exception cref="System.ArgumentNullException">/// <paramref name="isbn"/> is <c>null</c>./// </exception>/// <exception cref="System.ArgumentException">/// <paramref name="isbn"/> is an empty or white-space string./// </exception>/// <param name="x"></param>    /// <param name="x"></param>    /// <param name="z"></param>        /// <summary>        /// Adds two integers and returns the result.        /// </summary>        /// <returns>        /// The sum of two integers.        /// </returns>        /// <example>        /// <code>        /// int c = Math.Add(4, 5);        /// if (c > 10)        /// {        ///     Console.WriteLine(c);        /// }        /// </code>        /// </example>        /// <exception cref="System.OverflowException">Thrown when one parameter is max        /// and the other is greater than 0.</exception>        /// See <see cref="Math.Add(double, double)"/> to add doubles.