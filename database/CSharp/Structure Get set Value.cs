        private struct DeafultColors {                    public static Color SpriteSelected = Color.Green;            public static Color SpriteHilighted = Color.White;            public static Color InterfaceBackground = Color.Blue;        };        public struct SkinColor {            public static Color SpriteSelected = Color.Red;            public static Color SpriteHilighted = Color.White;            public static Color InterfaceBackground = Color.FromArgb(22, 176, 127);        }        public static void InitializeColors(string skinName) {            //Console.WriteLine("SkinMnager > InitializeColors > Skin Name:{0}", skinName);            switch (skinName) {                case "Default": // write defaults in to current                    foreach (FieldInfo srcField in typeof(DeafultColors).GetFields(BindingFlags.Static | BindingFlags.Public)) {                        FieldInfo trgtField = typeof(SkinColor).GetField(srcField.Name, BindingFlags.Static | BindingFlags.Public);                        trgtField?.SetValue(trgtField, srcField.GetValue(srcField.Name));                    }                    break;            }        }// ORSkinColor st = new SkinColor();st.GetType().GetRuntimeProperty(SkinColor.SpriteSelected.Name).SetValue(st, skinName);//ORprivate static object GetPropValue(object src, string propName) {    return src.GetType().GetProperty(propName).GetValue(src, null);}private static void SetPropValue<T>(object src, string propName, TargetException value) {    var field = src.GetType().GetProperty(propName);    field?.SetValue(src, value, null);}