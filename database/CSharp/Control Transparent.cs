protected override void OnPaint(PaintEventArgs e) {            // Call the OnPaint method of the base class.              base.OnPaint(e);            // get canvas grapgics            Graphics g = e.Graphics;            g.SmoothingMode = SmoothingMode.AntiAlias;            g.InterpolationMode = InterpolationMode.High;            // border pen            Pen pen = new Pen(BorderColor, BorderThickness);            // prepare draw area            Rectangle rect = new Rectangle(                BorderThickness / 2,                BorderThickness / 2,                Width - BorderThickness,                Height - BorderThickness             );            LinearGradientBrush lgb = new LinearGradientBrush(rect, GradientColorFrom, GradientColorTo, GradientDirection);            if ( CornerRadius > 0 ) {                g.FillRoundedRectangle(lgb, rect, CornerRadius); //draw gradient                g.DrawRoundedRectangle(pen, rect, CornerRadius);//draw border             } else {                g.FillRectangle(lgb, rect); //draw gradient                g.DrawRectangle(pen, rect); //draw border            }} protected override CreateParams CreateParams {            get {                CreateParams cp = base.CreateParams;                cp.ExStyle |= 0x20;                return cp;            }        }        protected override void OnPaintBackground(PaintEventArgs e) {            base.OnPaintBackground(e);        }