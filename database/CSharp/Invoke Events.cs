// define eventspublic event EventHandler OnComponentMove;public event EventHandler OnComponentMoved;// dispatchprivate void OnMouseMove(object sender, MouseEventArgs e) {	OnComponentMove.Invoke(sender, e);} private void OnMouseUp(object sender, MouseEventArgs e) {	OnComponentMoved.Invoke(this, e);}// registerPanel.OnComponentMoved += 	OnChildComponentMoved;private void OnChildComponentMoved(object sender, EventArgs e) {}        public event EventHandler StartDrag;        public event EventHandler StopDrag;        [DllImportAttribute("user32.dll")]        public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);        [DllImportAttribute("user32.dll")]        public static extern bool ReleaseCapture();        private void OnMouseDrag(object sender, MouseEventArgs e) {            if (e.Button == MouseButtons.Left) { Console.WriteLine(Name + "> StartDrag");                if (StartDrag != null) StartDrag(this, EventArgs.Empty);                ReleaseCapture();                SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);Console.WriteLine(Name + "> StopDrag");                if (StopDrag != null) StopDrag(this, EventArgs.Empty);            }        }