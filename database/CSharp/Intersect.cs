internal class Employee{    public string ID { get; set; }    public string Name { get; set; }} internal class EmployeeNameComparer : IEqualityComparer<Employee>{    public bool Equals(Employee x, Employee y)    {        if(string.Equals(x.Name, y.Name, StringComparison.OrdinalIgnoreCase))        {            return true;        }        return false;    }     public int GetHashCode(Employee obj)    {        return obj.Name.GetHashCode();    }} public static void Main(string[] args){    List<Employee> employeesInDeptA = new List<Employee>();    List<Employee> employeesInDeptB = new List<Employee>();     employeesInDeptA.Add(new Employee    {        ID = "A1",        Name = "Asutosh"    });    employeesInDeptA.Add(new Employee    {        ID = "A2",        Name = "Kapil"    });    employeesInDeptA.Add(new Employee    {        ID = "A3",        Name = "Sumit"    });    employeesInDeptA.Add(new Employee    {        ID = "A4",        Name = "Rajat"    });     employeesInDeptB.Add(new Employee    {        ID = "B1",        Name = "Preeti"    });    employeesInDeptB.Add(new Employee    {        ID = "B2",        Name = "Sumit"    });    employeesInDeptB.Add(new Employee    {        ID = "B3",        Name = "Kanupriya"    });    employeesInDeptB.Add(new Employee    {        ID = "B4",        Name = "Kapil"    });     var result = employeesInDeptA.Intersect(employeesInDeptB, new EmployeeNameComparer());     Console.WriteLine("Common Employees in Department A and B:");    foreach (var item in result)    {        Console.WriteLine(item.ID + " " +  item.Name);    }}