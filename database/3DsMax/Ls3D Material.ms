--------------------------------------------------------------------copy paste material linkage (sngle mat to multi mat)-------------------------------------------------------------------fn getLs3DMatIDsingle = ( --get uid from single material in currently selected in material editorsel_mat_index = medit.GetActiveMtlSlot()mat = meditMaterials[sel_mat_index]--mat_dif_map = mat.diffuseMap --not needmat.ls3d.GetGUID())fn setLs3DMatIDmulti mat_id mat_index = (--set uid from multi material in currently selected in material editor by namesel_mat_index = medit.GetActiveMtlSlot()multi_mat = mat = meditMaterials[sel_mat_index]--mat = for m in multi_mat where m.name == mat_name do exit with m--mat.diffuseMap = mat_dif_map --not needmat = multi_mat[mat_index]mat.ls3d.SetGUID mat_idmat.ls3d.Synchronize())fn getLs3DMatIDmulti  mat_index = (--get uid from multi material in currently selected in material editor by namesel_mat_index = medit.GetActiveMtlSlot()multi_mat = mat = meditMaterials[sel_mat_index]--mat = for m in multi_mat where m.name == mat_name do exit with mmat = multi_mat[mat_index]mat.ls3d.GetGUID())mat_id = getLs3DMatIDsingle()mat_id = getLs3DMatIDmulti mat_indexsetLs3DMatIDmulti mat_id mat_indexsel_mat_index = medit.GetActiveMtlSlot()mat = meditMaterials[sel_mat_index]for i=7 to mat.count do mat[i] = undefined --remove materials--assing ls3d materialfor i=7 to mat.count do (	local new_mat = LS3DMaterial()	new_mat.name = ("empty_" + i as string)	mat[i] = new_mat)mat = $.material--clear diffuse mapfor m in mat where classof m == LS3DMaterial do m.diffuseMap = undefined--clear all ls3d materials linksfor m in mat where classof m == LS3DMaterial do(	m.SetGUID ""	m.ls3d.ClearBindings())--assing to all ls3d materials gray shaderuni_color_gray_id = "0x088a7f58, 0x1e01037d"for m in mat where classof m == LS3DMaterial do(	m.SetGUID uni_color_gray_id	m.ls3d.Synchronize())$.material.ls3d.GetGUID()show mat[1]classof mat[1]== LS3DMaterial----if classof material == ls3dmaterial !!!!!!!"10_zidka02.xml"newGuid = "0x6d0b4a54, 0x4ba026b3"oldGuid = sceneMaterials["chram"].ls3d.GetGUID()sceneMaterials["chram"].ls3d.GetName()sceneMaterials["chram"].ls3d.ClearBindings()sceneMaterials["chram"].ls3d.SetGUID oldGuidsceneMaterials["chram"].ls3d.GuessBindings()sceneMaterials["chram"].ls3d.Synchronize()"missions/m09_exhibition_place/09_chram_all_ac.xml"meditMaterials[1]=sceneMaterials["chram"]meditMaterials[1]=standard()09_zlutej_korunka_ac_da.dds  Interface: ls3d   Properties:   Methods:    <bool>Synchronize()    <bool>GuessBindings()    <bool>ClearBindings()    <bool>Switch()    <string>GetGUID()    <bool>SetGUID <string>GUID    <string>GetName()    <string>GetDescription()    <bool>SetDescription <string>Description    <string>GetTexturePath <integer>index    <integer>GetTextureCount()   Actions:   newGuid = "0x6d0b4a54, 0x4ba026b3"oldGuid = sceneMaterials["Material #43057"][1].ls3d.GetGUID()sceneMaterials["Material #43057"][1].SetGUID newGuidsceneMaterials["Material #43057"][1].ls3d.Synchronize()"Material #43057"meditMaterials[1]= sceneMaterials["inter"] sceneMaterials["inter"][3].SetGUID newGuid