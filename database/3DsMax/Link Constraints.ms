co =  link_constraint()$Line001.controller =coco.addTarget $Box001 1 --at frame 1	fn getShortcutSpline obj = ( 		local spline_path = for o in refs.dependentnodes obj where classOf o == SplineShape do exit with o	if isValidNode spline_path then spline_path else undefined),getclassinstances Link_Constraint target:$ astrackviewpick:on		--print all keys' index, time and target		lc = link_constraint() --create a Link Constraint instance		for i = 1 to lc.getNumTargets() do format "%: Frame:% - Target:% \n" i (lc.getFrameNo i) (lc.getNode  i) --old way	fn getShortcutSpline obj = ( 			local spline_path		for o in objects where classOf o == SplineShape and classOf o.controller == Link_Constraint do (			if o.controller.getNumTargets() == 0 do continue 			local shortcut = o.controller.getNode 1			if shortcut.name == obj.name do (							spline_path = o				exit			)		)		spline_path	),