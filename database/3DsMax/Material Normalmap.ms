fn addChecker obj clr_1:(color 36 130 144) clr_2:(color 150 225 235)  = (	local ch = checker()	ch.color1 = clr_1	ch.color1 = clr_2	ch.coords.U_Tiling = 100	ch.coords.V_Tiling = 100	local mat = standardMaterial diffuseMap:ch	$.material = mat	showTextureMap mat ch on)addChecker $ --add test material/*	Displaying normals in 3DSMax >	In standard material check on “bump” and change value to 100. insert “normal bump” as input	Grab a normalbump map, then plug a bitmap map into it	In viewport do: Materials > Realistic Materials with Maps is applied	Rendering > gamma/lut setup > Disable Gamma/LUT Correction*/fn normalmapTesterToggle nm_path = (	local obj = (selection as array)[1]	if obj == undefined do return false	local mat_id = "saved_material_"+obj.name	local saved_material = mcGM.getParam mat_id	if saved_material != undefined then ( --restore material		obj.material = saved_material		enableHardwareMaterial obj.material false		showHWTextureMap obj.material false		mcGM.setParam mat_id undefined		return OK	) --else apply normal map tester	mcGM.setParam mat_id obj.material --store current material	local nm_texture = Bitmaptexture fileName:nm_path	local bump_mat = Normal_Bump name:"NORMALBUMP_TESTER_MATERIAL"	bump_mat.normal_map = nm_texture	local standard_mat = StandardMaterial name:"NORMALMAP_TESTER_MATERIAL"	standard_mat.bumpMap = bump_mat	standard_mat.showInViewport = on	obj.material = standard_mat  	enableHardwareMaterial obj.material true   	showHWTextureMap obj.material true)normalmapTesterToggle "D:\\ReneBaca\\Textures\\test_coin.dds" actionMan.executeAction 0 "63545"actionMan.executeAction 0 "63547"$Sphere001.material.DirectX_Manager.dxStdMat = onsceneMaterials["Standardmaterial"].DirectX_Manager.dxStdMat = on