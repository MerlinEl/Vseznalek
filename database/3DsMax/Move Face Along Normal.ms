fn moveFaceAlongNormal obj face_index len = (		local face_normal = polyop.getFaceNormal obj face_index	local face_tm = matrixFromNormal face_normal	rotate face_tm (inverse obj.transform).rotation --rotation depend on object transform	move obj.selectedfaces ([0,0,len]*face_tm))moveFaceAlongNormal selection[1] (polyop.getFaceSelection selection[1] as array)[1] 20moveFaceAlongNormal selection[1] (polyop.getFaceSelection selection[1] as array)[1] -20fn moveFaceAlongVector obj vect len = (	local vect_n = normalize vect	local face_tm = matrixFromNormal vect_n	rotate face_tm (inverse obj.transform).rotation --rotation depend on object transform	move obj.selectedfaces ([0,0,len]*face_tm))v1 = polyOp.getVert $ ($.getSelection #Vertex as Array)[1] --select first vert (arrow end)v2 = polyOp.getVert $ ($.getSelection #Vertex as Array)[1] --select second vert (arrow start)moveFaceAlongVector $ (v1-v2) 30fn getLocalFaceRotation obj index = (  (matrixFromNormal (polyop.getFaceNormal obj index)*obj.transform ) as eulerAngles)fn alignObjectToFace obj_source obj_target face_index = (	theMatrix = matrixFromNormal(polyOp.getFaceNormal obj_target face_index)	theMatrix.row4 = polyOp.getFaceCenter obj_target face_index	obj_source.transform = theMatrix)alignObjectToSelectedFace $Box005 $ ((polyOp.getFaceSelection $) as array)[1]