fn createDDSImage save_dir file_name size_w size_h bg_color = (	local bmp_path = save_dir + file_name + ".bmp"	local temp_b = bitmap size_w size_h filename:(bmp_path) color:bg_color	save temp_b; close temp_b	local tc = micra.AppsDir + "texconv32.exe"	local cmd = tc + " " + bmp_path + " -ft dds -o " + save_dir	format "createDDSImage >\n\tcmd:%\n" cmd	HiddenDOSCommand cmd startpath:save_dir exitCode:&exitcode --donotwait:true 	if doesFileExist bmp_path do deleteFile bmp_path --remove temporalily image	exitcode == 0)createDDSImage @"c:\temp\" "test_file3" 512 240 grayhttp://wiki.tesnexus.com/index.php/DDS_texture_toolsb = bitmap 320 240 filename:"c:\\temp\\test.dds" color:graysave bb = bitmap 320 240 color:grayb.fileName = toLower  "c:\\temp\\test.dds"save bb = bitmap 320 240 filename:"c:\\temp\\test2.bmp" color:graysave bclose btc = micra.AppsDir + "texconv.exe"cmd = tc + " " + b.fileNamecmd = tc + " " + b.fileName + " -ft dds"cmd = tc + " -w 128 -h 128 -ft bmp -o c:\temp\ -name test3.dds" HiddenDOSCommand cmd donotwait:true startpath:"c:\\" exitCode:&exitcode --true = 0 false 1-~HiddenDOSCommand "notepad %temp%\\cmdout.tmp" prompt:"Waiting..." startpath:"C:\\"truehttps://developer.nvidia.com/legacy-texture-toolsFor us it was the DDS save options - no DDS format was defined. I did a render on the PC, saved as .DDS and choose ARGB/8888. The image saved and after that the script worked.You can use the donotwait:false option in hiddenDosCommand to convert a texture to DDS, then move it with the standard max external file operations.fn createDDSImage dir file_name size bg_color = (	local newBM = bitmap size.x size.y color:bg_color	newBM.fileName = dir + file_name + ".dds"	local success = save newBM	format "fpath:% saved:%\n" newBM.fileName success	close newBM)createDDSImage "c:\\temp\\" "test.dds" [320, 240] grayvar data = Marshal.UnsafeAddrOfPinnedArrayElement(image.Data, 0);bmp = 256 256, image.Stride, format, data);     bitmap.Save(Path.ChangeExtension(path, ".png"), System.Drawing.Imaging.ImageFormat.Png);pf = dotnetClass "System.Drawing.Imaging.PixelFormat"fo = dotnetClass "System.Drawing.Imaging.ImageFormat"bm = dotnetObject "System.Drawing.Bitmap" 256 256 pf.Format32bppArgbbd = bm.LockBits(dotnetObject "System.Drawing.Rectangle" 0 0 256 256)bm.save "c:\\temp\\test.png" fo.pngbm = dotnetObject "System.Drawing.Bitmap" 256 256 pf.DXT1bm.save "c:\\temp\\test.dds" fo.DXT1ICPCL.exe -convertto dds format:X1R5G5B5 mipmap:yes -source "C:\Original files" -dest "C:\Converted files"tc + " -w 128 -h 128 -f dds -ft bmp -o c:\temp\ -name test3.dds" c:\dxsdk\bin\texconv -w 128 -h 128 -f BMP -ft bmp -c FFFE02A5 -o "C:\Users\onverted to\" -name SHPMSVCP110D.dllVCOMP110D.DLLMSVCP110D.dll