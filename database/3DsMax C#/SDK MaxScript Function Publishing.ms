--I just want to recreate InterpCurve3D in c++ and publish it to the MaxScript. this is the c# version:Compare to the Max version, has great benefits:Works on any shape not only splines.Works at WorldState (Max version only works on base object not modifiers).It's not completed yet, but so far works faster(1.6 times) than default version.Next I want to add argument cheking and default values.------------------------------------------------------------------------------#include <maxscript/maxscript.h>#include <maxscript/foundation/3dmath.h>#include <maxscript/macros/define_instantiation_functions.h>def_visible_primitive(ShapeInterp, "ShapeInterp");Value* ShapeInterp_cf(Value **arg_list, int count){	INode* node = arg_list[0]->to_node();	int curveIndex = arg_list[1]->to_int();	float percent = arg_list[2]->to_float();	int type = arg_list[3]->to_int();	TimeValue t = GetCOREInterface()->GetTime();	ShapeObject* shape = (ShapeObject*)node->EvalWorldState(t).obj;	Point3 result = shape->InterpCurve3D(t, curveIndex-1, percent/(float)100,type)*node->GetObjectTM(t);	return new Point3Value(result);}