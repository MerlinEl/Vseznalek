List<IINode> nodes = nodesFromHandles(objHandles);foreach (IINode i in nodes){    log(i.Name);    IObjectState iState = i.EvalWorldState(0, true);    IObject iObj = iState.Obj;    ITriObject iTri = (ITriObject)iObj.ConvertToType(0, global.TriObjectClassID);    IMesh mesh = iTri.Mesh;    /// OBJECT TRANSFORM MATRIX    IInterval iTimeRange = i.GetTimeRange(0);    IMatrix3 worldTm = i.GetObjTMAfterWSM(0, iTimeRange);    for (int vertID = 0; vertID < mesh.NumVerts; vertID++)    {        IPoint3 x = mesh.GetVert(vertID); /// RETURNS A BAD POSITION? RELATIVE TO WHAT MATRIX?        IPoint3 v = worldTm.PointTransform(x);        log(vertID.ToString() + ": " + v.X.ToString() + ", " + v.Y.ToString() + ", " + v.Z.ToString());    }}Adding some explanations to your answer. The following line:IPoint3 vertObjectSpace = mesh.GetVert(vertID);Returns the vertex position in object space, which is unfortunately not mentioned in the docs. As you are interested in the positions in world space, you have to transform them using the following:IMatrix3 tmObj2World= i.GetObjectTM(0, iTimeRange); // where i is your IINodeIPoint3 vertWorldSpace = tmObj2World.PointTransform(vertObjectSpace);