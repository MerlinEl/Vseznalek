      public static IPoint2 get2DPoint(IPoint3 pos, bool yTop)    {        //takes a point3 value as input        IGraphicsWindow gw = max_interface2.ActiveViewExp.Gw;        float sX = gw.WinSizeX;                   // Get WinSize X        float sY = gw.WinSizeY;                   // Get WinSize Y        float rPA = max_interface2.RendApect;     // Get Render Pixel Aspect        float rX = max_interface2.RendWidth;      // Get Render Pixels X        float rY = max_interface2.RendHeight;     // Get Render Pixels Y        float ratio = 0;        rY = rY * (1 / rPA);                       // Correct for aspect ratio        float rratio = (sX / rX) / (sY / rY);      // Get RatioF        if (rratio >= 1)        {                                           //If Ratio is bigger than 1 then            ratio = sY / rY;                        // Use Y ratio for calculations;        }        else        {            ratio = sX / rX;                        // Else use X ratio for calculations;        }                                           // --end if        float xMin = (sX - (rX * ratio)) / 2;       // Get x minimum value        float yMin = (sY - (rY * ratio)) / 2;       // Get y minimum value        gw.Transform = global.Matrix3.Create(true);        IPoint3 p_out = global.Point3.Create();        gw.TransPoint(pos,p_out);        float x = (p_out.X - xMin) / (sX - (xMin * 2)); // Convert View space to Render space for X        float y = (p_out.Y - yMin) / (sY - (yMin * 2)); // idem for Y        if (DEBUG)            global.TheListener.EditStream.Printf($"Test : x: {x},y: {y}\n");        if (!yTop) y = 1 - y;                           // if [0, 0] should be at the top then set Ytop true        return global.Point2.Create(x,y);    }int count = 0;            foreach (IPoint3 pos_m in obj_mesh_points)            {                IPoint2 pt = get2DPoint(pos_m, true);                if (pt.X < 0 || pt.X > 1 || pt.Y < 0 || pt.Y > 1)                {                    global.TheListener.EditStream.Printf("0\n");                }                else                {                    count++;                    global.TheListener.EditStream.Printf("++\n");                }                if (DEBUG)                    global.TheListener.EditStream.Printf($"count: {count}\n");            }