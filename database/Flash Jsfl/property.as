//Test Property (not worked with instance)ctrace("name:{0}", obj.hasOwnProperty("name"));ctrace("name:{0}", Object.prototype.hasOwnProperty.call(obj, "name"));//Explanationconst obj = { answer: 42 };'answer' in obj; // trueobj.hasOwnProperty('answer'); // true'does not exist' in obj; // falseobj.hasOwnProperty('does not exist'); // falseconst symbol = Symbol('answer');const obj = { [symbol]: 42 };symbol in obj; // trueobj.hasOwnProperty(symbol); // trueclass BaseClass {  get baseProp() {    return 42;  }}class ChildClass extends BaseClass {  get childProp() {    return 42;  }}const base = new BaseClass();const child = new ChildClass();'baseProp' in base; // true'childProp' in child; // true'baseProp' in child; // truebase.hasOwnProperty('baseProp'); // falsechild.hasOwnProperty('childProp'); // falsechild.hasOwnProperty('baseProp'); // false'constructor' in obj; // true'__proto__' in obj; // true'hasOwnProperty' in obj; // trueobj.hasOwnProperty('constructor'); // falseobj.hasOwnProperty('__proto__'); // falseobj.hasOwnProperty('hasOwnProperty'); // false