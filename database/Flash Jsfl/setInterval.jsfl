$.setTimeout = function(func, time) {        $.sleep(time);        func();};$.setTimeout(function () {alert("hello world")}, 3000);var random_int_id  = setTimeout(func, ms)clearTimeout(random_int_id )var random_int_id   = setInterval(func, ms)clearInterval(random_int_id )app.idleTasks$.sleep(1000)app.scheduleTaskanyone know of something that will run through your document and tell you if there are any onEnterFrame that haven't been deleted or setInterval that haven't been cleared? and possibly where they are.?..You can't use JSFL at runtime. However, you can use ActionScript to find onEnterFrames. Simply call: trace(_root.findOE()); when you want to see still existing onEnterFrame's. It will trace an array of all MovieClips that have an onEnterFrame defined. But you have to put this code on the first frame of your movie:MovieClip.prototype.findOE = function(){var oe = this.onEnterFrame ? [this] : [];for(var c in this){if(typeof(this)=='movieclip'){oe = oe.concat(this.findOE());}}return oe;}setInterval, there is no easy way to verify. You could however create your own version of setInterval that does keep track. The following function clears out all intervals that haven't been done so already:function clearIntervals(){var dummy = function(){};var id = setInterval(dummy,0);for(var i=1;i<=id;i++){clearInterval(i);}}In reply to the quest for knowledge, it seems that both unloadMovie and removeMovieClip kill off onEnterFrames, as seen with this code:_root.createEmptyMovieClip('x',0);_root.createEmptyMovieClip('y',1);_root.x.onEnterFrame = function(){trace('Unloaded');}_root.y.onEnterFrame = function(){trace('Removed');}_root.x.unloadMovie();_root.y.removeMovieClip();Interestingly, unloadMovie allows the onEnterFrame to run once while removeMovieClip does not.