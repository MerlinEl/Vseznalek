	fl.drawingLayer.beginDraw();	fl.drawingLayer.beginFrame();	fl.drawingLayer.setColor('0x06F90D');	fl.drawingLayer.moveTo(p1.x, p1.y);	fl.drawingLayer.curveTo(p2.x, p2.y, 2, 0);	fl.drawingLayer.endDraw();	fl.drawingLayer.endFrame();moveTo(pt0.x, pt0.y); curveTo(pt1.x,pt1.y,pt2.x,pt2.y);This part is quiet easy. Before we animate the drawing, we try draw it in one step. Lets try this JSFL file:    // with a shape selected    fl.trace("lineStyle(0.1);");    var elt = fl.getDocumentDOM().selection[0];    elt.beginEdit();    for (i=0; i<elt.edges.length; i++) {    	var ed = elt.edges[i];    	var pt0 = ed.getControl(0);    	var pt1 = ed.getControl(1);    	var pt2 = ed.getControl(2);    	fl.trace("moveTo("+pt0.x+","+pt0.y+");");    	fl.trace("curveTo("+pt1.x+","+pt1.y+","+pt2.x+","+pt2.y+");");    }    elt.endEdit();var myPath = fl.drawingLayer.newPath();for (i = 0; i < sections; i++){var rotateMat = new Matrix33();rotateMat.setRotation(theta * i);var p0t = p0.transform(rotateMat);var p1t = p1.transform(rotateMat);var p2t = p2.transform(rotateMat);var p3t = p3.transform(rotateMat);myPath.addCubicCurve(p0t.x, p0t.y, p1t.x, p1t.y, p2t.x, p2t.y, p3t.x, p3t.y);}myPath.makeShape(true, false);//Create Arrow/*** Created by Colin Duffy* http://blog.tomorrowevening.com/*/var doc = fl.getDocumentDOM();if( doc != null ) {var lib = doc.library;var displayFolder = "Display";var globalFolder = "- Global";// Fill color for shapesvar fill = doc.getCustomFill();fill.style = "solid";fill.color = 0x000000;// Globalif( !lib.itemExists( globalFolder ) ) lib.newFolder( globalFolder );if( !lib.itemExists( globalFolder + "/empty" ) ) lib.addNewItem( "movie clip", globalFolder + "/empty" );// Create and draw shape_squareif( !lib.itemExists( globalFolder + "/shape_square" ) ) {doc.setCustomFill( fill );lib.addNewItem( "graphic", globalFolder + "/shape_square" );lib.editItem( globalFolder + "/shape_square" );doc.addNewPrimitiveRectangle( { left: 0, top: 0, right: 100, bottom: 100 }, 0, false, true );}// Create and draw shape_circleif( !lib.itemExists( globalFolder + "/shape_circle" ) ) {doc.setCustomFill( fill );lib.addNewItem( "graphic", globalFolder + "/shape_circle" );lib.editItem( globalFolder + "/shape_circle" );doc.addNewPrimitiveOval( { left: 0, top: 0, right: 100, bottom: 100 }, 0, false, true );}// Create and draw square_mcif( !lib.itemExists( globalFolder + "/mc_square" ) ) {doc.setCustomFill( fill );lib.addNewItem( "movie clip", globalFolder + "/mc_square" );lib.editItem( globalFolder + "/mc_square" );lib.addItemToDocument( { x: 50, y: 50 }, globalFolder + "/shape_square" );}// Create and draw mc_circleif( !lib.itemExists( globalFolder + "/mc_circle" ) ) {doc.setCustomFill( fill );lib.addNewItem( "movie clip", globalFolder + "/mc_circle" );lib.editItem( globalFolder + "/mc_circle" );lib.addItemToDocument( { x: 50, y: 50 }, globalFolder + "/shape_circle" );}doc.exitEditMode();lib.selectNone();}var myPath = fl.drawingLayer.newPath(); 	for (i = 0; i < sections; i++) 	{ 		var rotateMat = new Matrix33(); 		rotateMat.setRotation(theta * i); 		var p0t = p0.transform(rotateMat); 		var p1t = p1.transform(rotateMat); 		var p2t = p2.transform(rotateMat); 		var p3t = p3.transform(rotateMat); 		 		myPath.addCubicCurve(p0t.x, p0t.y, p1t.x, p1t.y, p2t.x, p2t.y, p3t.x, p3t.y); 	} 	myPath.makeShape(true, false);  //Create a Shape DisplayObject.    circle = new createjs.Shape();    circle.graphics.beginFill("red").drawCircle(0, 0, 40);    //Set position of Shape instance.    circle.x = circle.y = 50;    //Add Shape instance to stage display list.    stage.addChild(circle);    //Update stage will render next frame    stage.update();//better shapecircle.graphics.lineStyle( 1, 0, 0, true );