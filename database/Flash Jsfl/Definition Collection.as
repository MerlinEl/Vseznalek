[Collection(	name="LinkButtons", 	variable="__linkButtons", 	collectionClass="mx.utils.CollectionImpl", 	collectionItem="ButtonC", 	identifier="ButtonLabel")]public var __linkButtons:mx.utils.Collection;// You must code a reference to the collection item class// to force the compiler to include it as a dependency within the SWC.private var collItem:ButtonC;// You must code a reference to the mx.utils.CollectionImpl class// to force the compiler to include it is a dependency within the SWC.private var coll:mx.utils.CollectionImpl;public function get LinkButtons():mx.utils.Collection {		return __linkButtons}public function set LinkButtons(theseButtons:mx.utils.Collection ):Void {		__linkButtons = theseButtons;	invalidate();}import mx.utils.*;var mylib:MyLibrary;myBook = new MyBooks();myBook.Author = "roger";myBook.Title = "flash";mylib.myBooks.addItem(myBook);trace ("Collection size: " + mylib.myBooks.getLength());*****************************************************************and this one for the .as':************************************************************************* MyLibrary *************************************************************************import mx.utils.*;class MyLibrary extends mx.core.UIObject{[Collection(name="My Books",variable="myBooks",collectionClass="mx.utils.CollectionImpl", collectionItem="Books", identifier="Title")]public var myBooks:Collection;}********************************************************************************************************************************************************* MyBooks.as *************************************************class MesLivres{[Inspectable(type="String", defaultValue="Title")]var titre:String;[Inspectable(type="String", defaultValue="Author")]var auteur:String;}**********************************************************