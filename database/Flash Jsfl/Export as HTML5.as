var folderURI = fl.browseForFolderURL("Please select the folder you want to recurse");fl.outputPanel.clear();var allFlas = [];var folds ;function listFile(paths){  var files=[]  var folds=[]      var files = FLfile.listFolder(paths + "/" + "*.fla","files");   for(i=0;i<files.length;i++){      allFlas.push(paths+"/"+files[i]);  }  var folds=FLfile.listFolder(paths,"directories");  for(var j=0;j<folds.length;j++){          listFile(paths+"/"+folds[j]);     }}listFile(folderURI);for(var i = 0; i < allFlas.length; i++){  var flaName = allFlas[i];  var doc = fl.openDocument(flaName);  var targetName = doc.name.replace(".fla","");  var cjsDataKey = "SwiffyToolkit_data";  var data = [          "version", "0.6",          "exportHTML", "true",          "frameBounds", "false",          "includeHiddenLayers", "false",          "soundsPath", "sounds/",          "preview", "false",          "imagesPath", "images/",          "libraryPath", "libs/",          "compactPaths", "false",          "exportSounds", "true",          "imagesNS", "images",          "exportLibs", "true",          "libNS", "lib_" + targetName.toLowerCase(),          "hostedLibs", "true",          "exportImages", "true",          "createjsNS", "createjs"  ];  doc.addDataToDocument(cjsDataKey, "string", data.join("\n"));  doc.save();  doc.close(false);  doc = fl.openDocument(flaName);  fl.runScript(fl.configURI + "Commands/Export as HTML5 (Swiffy).jsfl");  fl.trace("Complete:"+i);  doc.close(false);}