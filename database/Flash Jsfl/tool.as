fl.tools.setCursor(1); //1 = black arrowfl.selectTool("arrow"); // select arrow tool//Create Arrowfl.outputPanel.clear();fl.reloadTools();var theTool;var startPt;configureTool();var pt1 = transformPoint( startPt, fl.getDocumentDOM().viewMatrix);if (fl.tools.shiftIsDown){//code constrain anglefl.trace("tool shiftIsDown")}function configureTool() {	theTool = fl.tools.activeTool;	theTool.setToolName( "testtool" );	//theTool.setIcon( "TestTool.png" );	//theTool.setMenuString( "Test Tool" );	theTool.setToolTip( "Test Tool" );	//theTool.setOptionsFile( "TestTool.xml" );	//theTool.setPI( "shape" );}function notifySettingsChanged() {	theTool = fl.tools.activeTool;}function setCursor() {	fl.tools.setCursor( 0 );	/*		0 = Plus cursor (+)		1 = black arrow		2 = white arrow		3 = four-way arrow		4 = two-way horizontal arrow		5 = two-way vertical arrow		6 = X		7 = hand cursor	*/}function activate() {	theTool = fl.tools.activeTool;}function deactivate() {}function mouseDown() {	fl.drawingLayer.beginDraw();	startPt = fl.tools.snapPoint( fl.tools.penDownLoc );}function mouseUp() {	fl.drawingLayer.endDraw();	path.makeShape();}function mouseMove(mouseLoc) {	if (fl.tools.mouseIsDown) {		var pt1 = startPt;		var pt2 = fl.tools.snapPoint( mouseLoc );		fl.drawingLayer.beginFrame();		path = fl.drawingLayer.newPath();		path.addPoint(pt1.x, pt1.y);		path.addPoint(pt2.x, pt2.y);		fl.drawingLayer.drawPath(path);		fl.drawingLayer.endFrame();	}}function transformPoint( pt,  mat ) {	var x = pt.x*mat.a + pt.y*mat.c + mat.tx;	var y = pt.x*mat.b + pt.y*mat.d + mat.ty;	pt.x = x;	pt.y = y;	return pt;}/*var counter = 0;var eventID = fl.addEventListener("selectionChanged", function (){     	counter++	fl.trace("selectionChanged:"+counter);	if (counter > 1){		fl.removeEventListener("selectionChanged", eventID);		fl.trace("Create Arrow now!")	}});*/// Draw Line	fl.drawingLayer.moveTo(startX,startY);	fl.drawingLayer.lineTo(startX+ theWidth,startY+ theHeight);	// Draw Rect	thePath.addPoint(startX, startY);	thePath.addPoint(startX, startY + theHeight);	thePath.addPoint(startX + theWidth, startY + theHeight);	thePath.addPoint(startX + theWidth, startY);	thePath.addPoint(startX, startY);// Draw speech Bubble		var radius = 20;	var r = startX + theWidth;	var b = startY + theHeight;	fl.drawingLayer.beginDraw( true );	fl.drawingLayer.beginFrame();	fl.drawingLayer.setColor( "#ff0000" );	fl.drawingLayer.setStroke(2); // not works	fl.drawingLayer.moveTo(startX+radius, startY);	fl.drawingLayer.lineTo(startX+radius/2, startY-10);	fl.drawingLayer.lineTo(startX+radius * 2, startY);	fl.drawingLayer.lineTo(r-radius, startY);	fl.drawingLayer.curveTo(r, startY, r, startY+radius);	fl.drawingLayer.lineTo(r, startY+theHeight-radius);	fl.drawingLayer.curveTo(r, b, r-radius, b);	fl.drawingLayer.lineTo(startX+radius, b);	fl.drawingLayer.curveTo(startX, b, startX, b-radius);	fl.drawingLayer.lineTo(startX, startY+radius);	fl.drawingLayer.curveTo(startX, startY, startX+radius, startY);	fl.drawingLayer.endFrame(); 	fl.drawingLayer.endDraw();