 //Set the save location to the JSFL folder in the same directory as the scriptvar folder = getFolder(fl.scriptURI) + "JSFL/"FLfile.createFolder(folder); start();function start(){	 //Open the document	var doc = fl.getDocumentDOM();	if( !doc )	{		 alert("Please open the fla file");		return;	} 	 //Determine whether there is selected content	if( doc.selection.length == 0 )	{		 alert("Please select an element on the stage");		return;	} 	 //Get the selected component name	var eleName = "";	if (doc.selection.length == 1) {		var ele = doc.selection[0];		if (ele.elementType == "instance") {			eleName = ele.libraryItem.name;			 // If it is a library file, only take the component name			var index = eleName.lastIndexOf("/");			if (index != -1)				eleName = eleName.substring(index + 1);		} else {			eleName = doc.selection[0].name;		}	} 	 //Interactive prompt	 var inputName = prompt("Please enter the name of the material", eleName)	if(inputName==null) return	eleName = inputName 	 var inputRate = prompt("Please enter the magnification", 1)	if(inputRate==null) return	inputRate = parseFloat(inputRate)	if (!inputRate) inputRate = 1 	 //Copy the selected content to a new document	doc.clipCopy(); 	 //Create a new document	var exportDoc = fl.createDocument();	exportDoc.clipPaste();	exportDoc.selectAll(); 	 // turn into component and zoom	exportDoc.convertToSymbol("graphic", "eClip", "top left")	var clip = exportDoc.selection[0];	clip.scaleX = inputRate;	clip.scaleY = inputRate;		 //Turn the component into a bitmap to solve the situation where the boundary calculation is slightly smaller than the actual	exportDoc.convertSelectionToBitmap(); 	 //Set the stage size Adjust the picture size to an even number	var bm = exportDoc.selection[0];	bm.x = 0;	bm.y = 0;	bmW = Math.ceil(bm.width);	bmH = Math.ceil(bm.height);	bmW = bmW % 2 == 0 ? bmW : bmW + 1	bmH = bmH % 2 == 0 ? bmH : bmH + 1	exportDoc.width = bmW;	exportDoc.height = bmH; 	var timeStr = getTimeStr();	var pngName = folder + timeStr + "_" + eleName + ".png"; 	 //Remove the file extension	//pngName = pngName.replace("fla","");	//pngName = pngName.replace(".xfl","");	exportDoc.selectNone();	exportDoc.exportPNG(pngName,true,true);	exportDoc.close(false); 	 var showStr = "☀☀☀ Export succeeded☀☀☀\n "+ pngName;	showStr = showStr.replace("file:///","");	showStr = showStr.replace("|/",":/");	alert( showStr );} function getFolder(str){	var index = str.lastIndexOf("/");	if (index != -1)		 str = str.substring(0,index+1);	return str;}function getFile(str){	var index = str.lastIndexOf("/");	if (index != -1)		 str = str.substring(index + 1);	return str;} // 20180803function getTimeStr(){	var today = new Date();	var y = checkTime(today.getFullYear());	var m = checkTime(today.getMonth() + 1);	var d = checkTime(today.getDate())	return y + m + d;}function checkTime(i) {	if (i < 10) i = "0" + i;	return i.toString()}/*				//Get the selected component name		var eleName = ""		switch (ele.elementType){						case "instance":				eleName = ele.name;			break;			default: eleName = "image_"+i;		}				//Copy the selected content to a new document		doc.clipCopy();				//Create a new document		var exportDoc = fl.createDocument("timeline");		exportDoc.width = Math.floor(ele.width + 4);		exportDoc.height = Math.floor(ele.height + 4);		// Refresh		exportDoc.editScene( exportDoc.currentTimeline );				// Paste the artwork to the stage.		exportDoc.clipPaste(true);				// Align to the center of the stage.		exportDoc.selectAll();		// enable button in the Align panel to align objects with the Stage		exportDoc.setAlignToDocument(true);		exportDoc.align("vertical center", true);		exportDoc.align("horizontal center", true);		exportDoc.selectNone();				// Output the image.		var URI = folderURI + "/" + eleName;		exportDoc.exportPNG(pngName,true,true);				// Close the temporary FLA without saving.		exportDoc.close(false);*/// Multiple Size PNG Exporter// Copyright © 2014 Andrew Doll// http://www.andrewdollanimation.com//* NOTE:Before running this script export one PNG image using the desired PNG export settings.  fl.getDocumentDOM.exportPNG() accepts 3 ** paramaters. The first is the string for the file name.  The second is a Boolean value that specifies whether to use the current PNG ** publish settings (true) or to display the Export PNG dialog box (false).  The third is a Boolean value that specifies whether to export ** only the current frame (true) or to export all frames, with each frame as a separate PNG file (false).  Since this script sets the** second paramater to true just be sure that the PNG export settings are already set to 32 bit PNG.*/// Check to see if there is a file open first./*var dom = fl.getDocumentDOM();if (dom == null){    alert("Please open a file.");}else{    var sel = [];    var folderURI = "";    var folderLocation = "";    var pngFileName = "";    var URI = "";    var selWidth;    var selHeight;    var sideToUse;	    function setupExportFolder()    {        // Create a folder and file name for the PNG files.        folderLocation = fl.browseForFolderURL("Select a folder.");        if(folderLocation != null)        {            folderURI = folderLocation + "/PNG Exports";            FLfile.createFolder(folderURI);            pngFileName = prompt("What would you like to name the png files?");        }    }    // Check if a movie clip on the stage is selected to export PNG images.    var selected_items = dom.selection;    if(!selected_items || !selected_items.length)    {        alert("Please select a movie clip on the stage.");    }    else    {        // Setup export folder        setupExportFolder();        if(folderLocation != null && pngFileName != null)        {			for (var i = 0; i < selected_items.length; i++){				// Copy the selected artwork from the stage.				sel = selected_items[i];				dom.clipCopy();					// Create a new FLA document.				fl.createDocument();				dom = fl.getDocumentDOM();				// Resize the document to the current export size.				dom.width = sel.width + 4;				dom.height = sel.height + 4;				// Paste the artwork to the stage.				dom.clipPaste(true);				sel = dom.selection[0];				dom.setAlignToDocument(true);				selWidth = sel.width;				selHeight = sel.height;				// Align to the center of the stage.				dom.align("vertical center", true);				dom.align("horizontal center", true);				// Output the image.				URI = folderURI + "/" + pngFileName + "_" + exportSizeArray[i] + " x " + exportSizeArray[i] + "_";				dom.exportPNG(URI, true, true);				// Close the temporary FLA without saving.				dom.close(false);			}        }    }}*/