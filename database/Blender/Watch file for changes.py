import threading, time, os, bpyfrom mcBlender import importFileFBXReplace, getFileNameclass BlenderThread(threading.Thread):	def __init__(self, xml_file, fbx_file):		threading.Thread.__init__(self)		self.xml_file = xml_file		self.fbx_file = fbx_file		if os.path.isfile (self.xml_file) and os.path.isfile (self.fbx_file):			self.running = True			self.file_size_stored = os.stat(self.xml_file).st_size		else:			self.running = False				def run(self):		print ("THREAD: XML File:\n\t{}\nFBX File:\n\t{}".format(self.xml_file, self.fbx_file))		print ("THREAD: start watch File:\n\t{}".format( getFileName(self.xml_file) ))		while self.running:			try:				file_size_current = os.stat(self.xml_file).st_size				if self.file_size_stored != file_size_current:					# self.running = False					print ("XML File was changed:\n\t{}".format( getFileName(self.xml_file) ))					self.file_size_stored = file_size_current					importFileFBXReplace(self.fbx_file, self.xml_file)					# break			except: 				pass		print ("THREAD: end")# Example# print ("\n\n\nSCRIPT: start")# from mcLoader import Micra_Blender_Dir# xml_file = Micra_Blender_Dir + '\\blender_max_transfer_info.xml'# fbx_file = Micra_Blender_Dir + '\\blender_max_transfer_scene.fbx'# thread = BlenderThread(xml_file, fbx_file)# thread.start()# print ("SCRIPT: end, thread running:", thread.running)