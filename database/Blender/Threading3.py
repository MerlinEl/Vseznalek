import threading, time, osclass BlenderThread(threading.Thread):    def __init__(self):        threading.Thread.__init__(self)        self.running = False        self.filename = 'C:/temp/test_file.txt'        self.file_size_stored = os.stat(self.filename).st_size            def run(self):        self.running = True        print ("THREAD: start")        while self.running:            try:                file_size_current = os.stat(self.filename).st_size                print ("THREAD: file size old:{} new:{}".format(self.file_size_stored, file_size_current))                if self.file_size_stored != file_size_current:                    print ("file:{} was changed.".format(self.filename))                    break                    self.running = False            except:                 pass        print ("THREAD: end")print ("\n\n\nSCRIPT: start")thread = BlenderThread()thread.start()print ("SCRIPT: end, thread running:", thread.running)time.sleep(10)thread.running = Falseprint ("SCRIPT: end,  running thread:", thread.running)