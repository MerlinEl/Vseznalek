sFilePath = (@"C:\Program Files\2K Czech\2KCzech.Dashboard\") -- path to the perforce dllp4DotNet = dotnet.loadAssembly ( sFilePath +"p4api.net.dll" )-- create the server address object. ServerAddress = dotNetObject "Perforce.P4.ServerAddress" @"perforce-h13:1666"-- create a server object using ServerAddress.Server = dotNetObject "Perforce.P4.Server" ServerAddressServer.Address.ToString()Server.MetadataServer.State.ToString() --#Offline, #Online, #UNKNOWN-- connect to the repository using ServerRepository = dotNetObject "Perforce.P4.Repository" ServerConnection = dotNetObject "Perforce.P4.Connection" Serverc = Repository.GetClient("rene.baca_scotch_dev_art")c = Repository.GetClient "rene.baca_scotch_dev_art" Repository.Connection-- attempt to access the Repository's connectionCon = try (	Repository.connection) catch (	format "%" ( getCurrentException() ))		-- alternativly attempt to directly create a connection using ServerConnection= try ( 	dotNetObject "Perforce.P4.Connection" Server) catch(	format "%" ( getCurrentException() )))public static void Init(PerforceID id)        {            try            {                // initialize the connection variables                // note: this is a connection without using a password                // define the server, repository and connection                Server server = new Server(new ServerAddress(id.ServerURI));                Program._Repository_ = new Repository(server);                Program._PerforceConnection_ = _Repository_.Connection;                // use the connection varaibles for this connection                Program._PerforceConnection_.UserName = id.UserName;                Program._PerforceConnection_.Client = new Client();                Program._PerforceConnection_.Client.Name = id.Workspace;                // connect to the server                Program._PerforceConnection_.Connect(null);                Program._PerforceConnection_.Login(id.ClientPass);                //Console.WriteLine("Perforce is Connected.");                Kernel.Print("Successfully Connected to Perforce : [" + id.ServerURI + "] [" + id.UserName + "] [" + id.Workspace + "]");            }            catch (Exception ex)            {                // Add useful information to the exception                // Console.WriteLine(ex.Message);                Kernel.Print("Connection To Perforce Failed : 	" + ex.Message);            }        }Server = dotNetObject "Perforce.P4.Server" (dotNetObject "Perforce.P4.ServerAddress" @"perforce-h13:1666")Repository = dotNetObject "Perforce.P4.Repository" ServerRepository.GetClientMetadata()	Repository.Server	print Repository.ConnectionshowProperties repository(dotNetObject "Perforce.P4.ClientMetadata").GetClientMetadata()using System;using System.Collections.Generic;using System.Text;using Perforce.P4;namespace Sandbox{    class Program    {        static void Main(string[] args)        {            var P4USER = "your_perforce_username";            var P4PORT = "perforce.company.com:1666";            var P4CLIENT = "your_local_workspace_name";            var P4PASSWD = "your_perforce_password";            Console.WriteLine("Sandbox testing");            Perforce.P4.Server srv = new Perforce.P4.Server(new ServerAddress(P4PORT));            Perforce.P4.Repository p4 = new Perforce.P4.Repository(srv);            p4.Connection.UserName = P4USER;            p4.Connection.SetClient(P4CLIENT);            p4.Connection.Connect(new Perforce.P4.Options());            p4.Connection.Login(P4PASSWD);            // Get info and print it.            P4Command cmd = new P4Command(p4, "info", true, null);            P4CommandResult rslt = cmd.Run();            foreach (var item in rslt.TaggedOutput)            {                foreach (string key in item.Keys)                {                    Console.WriteLine("{0}: {1}", key, item[key]);                }            }            p4.Connection.Disconnect();            Console.ReadKey();        }    }}