var win = new Window ("dialog");win.aButton = win.add ("button", undefined, "Button");win.aButton.addEventListener ("click", function (k) {      if (k.shiftKey) {        alert("foo");      }else{        alert("bah");      }  });win.show ();var w =new Window ("dialog");var b = w.add ("button", undefined, "Qwerty");b.addEventListener("click", function (k){whatsup (k)});function whatsup (p){   if(p.button == 2){ $.writeln ("Right-button clicked.") }   if(p.shiftKey){ $.writeln ("Shift key pressed.") }   $.writeln ("X: "+ p.clientX);   $.writeln ("Y: "+ p.clientY);}w.show ();Good, so, now letâ€™s see how to get active tool:var myTool = app.toolBoxTools;Ok, â€˜myToolâ€™ now holds active tool object. We can retrieve info about it:var myToolObj = myTool.currentTool;var myToolName = myTool.currentToolName;var myToolHint = myTool.currentToolHint;var myToolIcon = myTool.currentToolIconFile;Cool! So, letâ€™s try to change active tool to for example â€˜Pencil Toolâ€™:myTool.currentTool = UITools.PENCIL_TOOL;Yeah, it works ðŸ˜€ Also, you can add event listener to track tool changing or something else. We will add simple listener just for example:#targetengine myToolListenerapp.toolBoxTools.addEventListener("afterAttributeChanged", myTest); function myTest(){    alert(app.toolBoxTools.currentToolHint);}UITools.NONE	UITools.SELECTION_TOOLUITools.DIRECT_SELECTION_TOOL	UITools.GAP_TOOLUITools.PEN_TOOL	UITools.ADD_ANCHOR_POINTUITools.DELETE_ANCHOR_POINT	UITools.CONVERT_DIRECTION_POINTUITools.LINE_TOOL	UITools.TYPE_TOOLUITools.TYPE_ON_PATH_TOOL	UITools.PENCIL_TOOLUITools.SMOOTH_TOOL	UITools.ERASE_TOOLUITools.POLYGON_FRAME_TOOL	UITools.RECTANGLE_FRAME_TOOLUITools.ELLIPSE_FRAME_TOOL	UITools.POLYGON_TOOLUITools.RECTANGLE_TOOL	UITools.ELLIPSE_TOOLUITools.ROTATE_TOOL	UITools.SCALE_TOOLUITools.SHEAR_TOOL	UITools.SCISSORS_TOOLUITools.FREE_TRANSFORM_TOOL	UITools.GRADIENT_SWATCH_TOOLUITools.GRADIENT_FEATHER_TOOL	UITools.NOTE_TOOLUITools.EYE_DROPPER_TOOL	UITools.MEASURE_TOOLUITools.HAND_TOOL	UITools.ZOOM_TOOLUITools.TABLE_TOOL	UITools.PLACE_CURSOR_TOOLUITools.MOTION_PATH_TOOL	UITools.PAGE_TOOLmain();    function main(){         alert('Hello 12');     //app.addEventListener( "beforeExport", chSpelling );   //app.addEventListener( "beforeSave", chSpelling );   //app.addEventListener( "beforeSaveAs", chSpelling );       var  //beforeSave = app.menuActions.itemByID ( 260 ).addEventListener ( "beforeInvoke", checkSpelling );  //beforeSaveAs = app.menuActions.itemByID ( 261 ).addEventListener ( "beforeInvoke", checkSpelling );  //beforeSaveAsCopy = app.menuActions.itemByID ( 262 ).addEventListener ( "beforeInvoke", checkSpelling );  //beforeExport = app.menuActions.itemByID ( 113411 ).addEventListener ( "beforeInvoke", checkSpelling );  beforeSave = app.menuActions.itemByName ( "$ID/Save" ).addEventListener ( "beforeInvoke", checkSpelling );  beforeSaveAs = app.menuActions.itemByName ( "$ID/Save As..." ).addEventListener ( "beforeInvoke", checkSpelling );  beforeSaveACopy = app.menuActions.itemByName ( "$ID/Save a Copy..." ).addEventListener ( "beforeInvoke", checkSpelling );  beforeExport = app.menuActions.itemByName ( "$ID/Export..." ).addEventListener ( "beforeInvoke", checkSpelling );        function checkSpelling(myEvent){    alert('Check Spelling...');   app.menuActions.item("Check Spelling...").invoke();    }      }  