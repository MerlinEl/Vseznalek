cTID = function(s) { return app.charIDToTypeID(s); };sTID = function(s) { return app.stringIDToTypeID(s); };// Color Overlay Functionfunction ColorOverlay() {    var coloroverlay_general = new ActionDescriptor();    var ref1 = new ActionReference();    ref1.putProperty(cTID('Prpr'), cTID('Lefx'));    ref1.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));    coloroverlay_general.putReference(cTID('null'), ref1);    var coloroverlay_layer = new ActionDescriptor();    coloroverlay_layer.putUnitDouble(cTID('Scl '), cTID('#Prc'), 10);    // Color Overlay Blend Mode    var coloroverlay_blendmode = new ActionDescriptor();    coloroverlay_blendmode.putBoolean(cTID('enab'), true);    coloroverlay_blendmode.putBoolean(sTID("present"), true);    coloroverlay_blendmode.putBoolean(sTID("showInDialog"), true);    coloroverlay_blendmode.putEnumerated(cTID('Md  '), cTID('BlnM'), cTID('Dslv'));    // Color Overlay Color    var coloroverlay_color = new ActionDescriptor();    coloroverlay_color.putDouble(cTID('Rd  '), 255);    coloroverlay_color.putDouble(cTID('Grn '), 0);    coloroverlay_color.putDouble(cTID('Bl  '), 0);    coloroverlay_blendmode.putObject(cTID('Clr '), sTID("RGBColor"), coloroverlay_color);    // Color Overlay Opacity    coloroverlay_blendmode.putUnitDouble(cTID('Opct'), cTID('#Prc'), 92); // Opacity    coloroverlay_layer.putObject(cTID('SoFi'), cTID('SoFi'), coloroverlay_blendmode);    coloroverlay_general.putObject(cTID('T   '), cTID('Lefx'), coloroverlay_layer);    executeAction(cTID('setd'), coloroverlay_general, DialogModes.NO);  }; function selectLayerByIndex(index,add){add = undefined ? add = false:addvar ref = new ActionReference();    ref.putIndex(charIDToTypeID("Lyr "), index);    var desc = new ActionDescriptor();    desc.putReference(charIDToTypeID("null"), ref );       if(add) desc.putEnumerated( stringIDToTypeID( "selectionModifier" ), stringIDToTypeID( "selectionModifierType" ), stringIDToTypeID( "addToSelection" ) );      desc.putBoolean( charIDToTypeID( "MkVs" ), false );   try{    executeAction(charIDToTypeID("slct"), desc, DialogModes.NO );}catch(e){alert(e.message);}}; function getSelectedLayersIdx(){      var selectedLayers = new Array;      var ref = new ActionReference();      ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") );      var desc = executeActionGet(ref);      if( desc.hasKey( stringIDToTypeID( 'targetLayers' ) ) ){         desc = desc.getList( stringIDToTypeID( 'targetLayers' ));          var c = desc.count          var selectedLayers = new Array();          for(var i=0;i<c;i++){            try{               activeDocument.backgroundLayer;               selectedLayers.push(  desc.getReference( i ).getIndex() );            }catch(e){               selectedLayers.push(  desc.getReference( i ).getIndex()+1 );            }          }       }else{         var ref = new ActionReference();         ref.putProperty( charIDToTypeID("Prpr") , charIDToTypeID( "ItmI" ));         ref.putEnumerated( charIDToTypeID("Lyr "), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") );         try{            activeDocument.backgroundLayer;            selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( "ItmI" ))-1);         }catch(e){            selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( "ItmI" )));         }      }      return selectedLayers;};// Mainvar theLayers = getSelectedLayersIdx(); for (var p = 0; p < theLayers.length; p++) {  selectLayerByIndex(theLayers[p], false);  theLayers[p] = app.activeDocument.activeLayer;  ColorOverlay();    };