//test 1 Not Works				var raycastPicker:RaycastPicker = new RaycastPicker(true);				var dir:Vector3D = new Vector3D(									_view.camera.position.x - _sun.position.x,					_view.camera.position.y - _sun.position.y,					_view.camera.position.z - _sun.position.z				)				dir.normalize();				var vo:PickingCollisionVO = raycastPicker.getSceneCollision(_sun.position, dir, _view.scene);				ctrace("collision entity:{0}", vo);//test2 Camera project vector on model OK	// Ray cast Test 2			_body_mesh.pickingCollider = PickingColliderType.AS3_BEST_HIT;			scenePositionTracer = new Mesh( new SphereGeometry( 2 ), new ColorMaterial( 0x0000FF, 0.5 ) );			scenePositionTracer.visible = false;			scenePositionTracer.mouseEnabled = false;			_view.scene.addChild(scenePositionTracer);									sceneNormalTracer = new SegmentSet();			sceneNormalTracer.mouseEnabled = sceneNormalTracer.mouseChildren = false;			var lineSegment2:LineSegment = new LineSegment( new Vector3D(), new Vector3D(), 0xFFFFFF, 0xFFFFFF, 3 );			sceneNormalTracer.addSegment( lineSegment2 );			sceneNormalTracer.visible = false;			_view.scene.addChild( sceneNormalTracer );						raycastPicker = new RaycastPicker(false);			raycastPicker.setIgnoreList([sceneNormalTracer, scenePositionTracer]);			raycastPicker.onlyMouseEnabled = false;var collidingObject:PickingCollisionVO = raycastPicker.getSceneCollision(_view.camera.position, _view.camera.forwardVector, _view.scene);	if (collidingObject) {				ctrace("collision entity:{0}", collidingObject);		// Show tracers.		scenePositionTracer.visible = sceneNormalTracer.visible = true;				// Update position tracer.		scenePositionTracer.position = collidingObject.entity.sceneTransform.transformVector(collidingObject.localPosition);				// Update normal tracer.		sceneNormalTracer.position = scenePositionTracer.position;		var normal:Vector3D = collidingObject.entity.sceneTransform.deltaTransformVector(collidingObject.localNormal);		normal.normalize();		normal.scaleBy( 25 );		lineSegment = sceneNormalTracer.getSegment( 0 ) as LineSegment;		lineSegment.end = normal.clone();	}//var collidingObject:PickingCollisionVO = raycastPicker.getEntityCollision(new Vector3D(_sun.x, _sun.y, _sun.z), dir, new Vector.<Entity>(_body_mesh));//var collidingObject:PickingCollisionVO = raycastPicker.getSceneCollision(new Vector3D(_sun.x, _sun.y, _sun.z), dir, _view.scene);//if (collidingObject) {		//ctrace("collision entity:{0}", collidingObject);	//lineSegment.end = normal.clone();	//}			//OK			// add Sun model without blooom effect (on large resolutions bloom not works)			_sun = new Sun(_view, stage, _body_mesh, _sun_radius, _flare_radius, _sun_pos, highQualityStage);			// hide sun when is cowered by geometry			_body_mesh.pickingCollider = PickingColliderType.AS3_BEST_HIT;			_raycast_picker = new RaycastPicker(false);			//_raycast_picker.setIgnoreList([sceneNormalTracer, scenePositionTracer]); // ignore objects from Ray casting			_raycast_picker.onlyMouseEnabled = false;			_sun.update();